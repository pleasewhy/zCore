var searchIndex = JSON.parse('{\
"kernel_hal":{"doc":"Hardware Abstraction Layer","t":[18,18,4,13,6,18,18,3,6,3,8,3,17,6,18,18,18,13,13,6,18,13,0,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,0,0,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,0,11,11,11,11,11,11,11,0,0,11,0,11,11,11,11,11,11,11,11,5,5,0,11,11,11,11,11,11,11,5,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,11,11,11,11,11,11,6,6,6,5,5,5,5,5,5,5,5,5,5,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,5,5,5,5,11,11,5,5,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,12,12,12,12,12,3,13,13,13,13,13,13,13,13,13,13,4,3,13,13,3,4,3,12,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,12,12,11,11,11,12,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,5,5,5,3,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,0,11,11,11,11,11,11,11,11,13,13,13,13,13,13,13,13,4,4,4,4,6,13,3,13,13,13,13,13,13,3,13,3,3,4,13,13,13,13,6,4,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,13,13,3,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,18,18,18,3,3,3,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,8,16,8,8,8,8,8,8,8,10,11,11,11,10,11,10,11,10,10,10,11,10,11,10,10,11,11,11,10,11,10,10,10,11,10,10,10,10,10,10,10,10,10,10,11,5,5,5,5,5,5,5,5,5,5,5,5,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,13,4,4,4,13,13,13,13,3,6,6,3,4,8,8,6,6,6,3,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,11,11,11,11,11,11,12,12,12,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,11,11,11,11,11,11,13,8,8,13,13,3,4,3,4,6,13,13,13,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,10,11,12,11,11,11,11,11,11,11,11],"n":["CACHE_1","CACHE_2","CachePolicy","Cached","DevVAddr","EXECUTE","HUGE_PAGE","HalError","HalResult","KernelConfig","KernelHandler","MMUFlags","PAGE_SIZE","PhysAddr","READ","RXW","USER","Uncached","UncachedDevice","VirtAddr","WRITE","WriteCombining","addr","all","az","az","az","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","boot","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","cmp","complement","config","console","contains","context","cpu","difference","drivers","empty","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","frame_alloc","frame_alloc","frame_alloc_contiguous","frame_alloc_contiguous","frame_dealloc","frame_dealloc","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","handle_page_fault","handle_page_fault","hash","ignore","init","insert","interrupt","intersection","intersects","into","into","into","is_all","is_empty","libos","mem","ne","net","not","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","primary_init","primary_init_early","rand","remove","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","secondary_init","set","sub","sub_assign","symmetric_difference","thread","timer","to_owned","to_owned","toggle","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","union","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","user","vdso","vm","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","DevVAddr","PhysAddr","VirtAddr","align_down","align_up","is_aligned","page_count","page_offset","cmdline","init_ram_disk","primary_init","primary_init_early","secondary_init","KernelConfig","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","fmt","from","into","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","wrapping_as","wrapping_cast_from","ConsoleWinSize","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clone","clone_into","console_read","console_win_size","console_write_fmt","console_write_str","default","from","graphic_console_write_fmt","graphic_console_write_str","into","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","serial_write_fmt","serial_write_str","to_owned","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","wrapping_as","wrapping_cast_from","ws_col","ws_row","ws_xpixel","ws_ypixel","0","GeneralRegs","GernelFault","HardwareBreakpoint","InstrPointer","Interrupt","PageFault","ReturnValue","SoftwareBreakpoint","StackPointer","Syscall","ThreadPointer","TrapReason","U128","UnalignedAccess","UndefinedInstruction","UserContext","UserContextField","VectorRegs","_pad0","_pad1","_pad2","advance_pc","available","az","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","default","default","enter_uspace","eq","error_code","fcs","fcw","fdp","fds","fip","fmt","fmt","fmt","fmt","fmt","fmt","fop","from","from","from","from","from","from","from","fsbase","fsw","ftw","general","general_mut","get_field","gsbase","into","into","into","into","into","into","mm","mxcsr","mxcsr_mask","ne","new","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","r10","r11","r12","r13","r14","r15","r8","r9","raw_trap_reason","rax","rbp","rbx","rcx","rdi","rdx","reserved","rflags","rip","rsi","rsp","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","set_field","setup_uspace","syscall_entry","to_owned","to_owned","to_owned","to_owned","trap_reason","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","xmm","0","0","0","1","cpu_frequency","cpu_id","reset","DeviceList","all_block","all_display","all_input","all_irq","all_net","all_uart","as_vec","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","default","find","first","first_unwrap","from","into","overflowing_as","overflowing_cast_from","prelude","saturating_as","saturating_cast_from","scheme","try_from","try_get","try_into","type_id","unwrapped_as","unwrapped_cast_from","wrapping_as","wrapping_cast_from","ARGB8888","AbsAxis","AbsAxis","ActiveHigh","ActiveLow","AlreadyExists","Block","BufferTooSmall","CapabilityType","ColorFormat","Device","DeviceError","DeviceResult","Display","DisplayInfo","DmaError","Edge","Event","FeedBack","FeedBack","FeedBackStatus","FrameBuffer","Input","InputCapability","InputEvent","InputEventType","InputProp","InvalidParam","IoError","Irq","IrqHandler","IrqPolarity","IrqTriggerMode","Key","Key","Led","Led","Level","Misc","Misc","Net","NoResources","NotReady","NotSupported","Power","RGB332","RGB565","RGB888","Rectangle","RelAxis","RelAxis","Repeat","RgbColor","Sound","Sound","Switch","Switch","Syn","Uart","az","az","az","az","az","az","az","az","az","az","az","az","az","b","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code","contains","contains_all","depth","deref","deref_mut","empty","eq","eq","event_type","fb_base_vaddr","fb_size","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bitmap","from_raw_parts_mut","from_slice","g","height","height","inner","input","into","into","into","into","into","into","into","into","into","into","into","into","into","ne","new","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","pitch","r","raw_value","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","set","set_all","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","value","width","width","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","write_color","x","y","0","0","0","0","0","0","ALWAYS_ONE","LEFT_BTN","MIDDLE_BTN","Mouse","MouseFlags","MouseState","RIGHT_BTN","X_SIGN","Y_SIGN","all","as_ps2_buf","az","az","az","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","buttons","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","cmp","compatible_with","complement","contains","default","default","difference","dx","dy","dz","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","insert","intersection","intersects","into","into","into","is_all","is_empty","ne","new","not","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","remove","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","set","sub","sub_assign","subscribe","symmetric_difference","to_owned","to_owned","toggle","trigger","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","union","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","BlockScheme","DisplayScheme","Event","EventScheme","InputScheme","IrqScheme","NetScheme","Scheme","SchemeUpcast","UartScheme","capability","clear","configure","draw_pixel","fb","fill_rect","flush","flush","get_ifname","get_ip_addrrs","get_mac","handle_irq","info","init_hart","is_valid_irq","mask","msi_alloc_block","msi_free_block","msi_register_handler","name","need_flush","poll","read_block","recv","register_device","register_handler","send","send","subscribe","trigger","try_recv","unmask","unregister","upcast","write_block","write_str","configure_irq","handle_irq","is_valid_irq","mask_irq","msi_alloc_block","msi_free_block","msi_register_handler","register_irq_handler","unmask_irq","unregister_irq_handler","wait_for_interrupt","run_graphic_service","PhysFrame","ZERO_FRAME","as_mut_ptr","as_ptr","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","deref","drop","fmt","frame_flush","free_pmem_regions","from","from","from_paddr","into","into","new","new_contiguous","new_zero","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","paddr","pmem_copy","pmem_read","pmem_write","pmem_zero","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","virt_to_phys","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","zero","get_net_device","init","fill_random","get_tid","set_tid","sleep_until","spawn","yield_now","deadline_after","timer_now","timer_set","BufferTooSmall","Error","In","InOut","InvalidLength","InvalidPointer","InvalidUtf8","InvalidVectorAddress","IoVec","IoVecIn","IoVecOut","IoVecs","Out","Policy","Read","UserInOutPtr","UserInPtr","UserOutPtr","UserPtr","Write","add","as_mut_slice","as_ptr","as_ref","as_slice","az","az","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","check","check","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone_into","deref","deref_mut","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_addr_size","into","into","into","into","into","into","into","is_empty","is_null","is_null","len","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","read","read_array","read_cstring","read_cstring_array","read_if_not_null","read_iovecs","read_iovecs","read_string","read_to_vec","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","to_owned","total_len","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","write","write_array","write_cstring","write_from_buf","write_if_not_null","Features","VdsoConstants","VersionString","as_str","az","az","az","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","cpu","dcache_line_size","default","features","fmt","fmt","fmt","from","from","from","hw_breakpoint_count","hw_watchpoint_count","icache_line_size","into","into","into","max_num_cpus","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","physmem","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","set_version_string","ticks_per_second","ticks_to_mono_denominator","ticks_to_mono_numerator","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","vdso_constants","version_string","version_string_len","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","AlreadyMapped","GenericPageTable","IgnoreNotMappedErr","NoMemory","NotMapped","Page","PageSize","PageTable","PagingError","PagingResult","Size1G","Size2M","Size4K","activate_paging","align_down","az","az","az","az","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","clone_kernel","current_vmtoken","default","eq","fmt","fmt","fmt","from","from","from","from","from_current","ignore","into","into","into","into","is_aligned","is_huge","map","map","map_cont","map_cont","new","new_aligned","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","page_offset","query","query","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","size","table_phys","table_phys","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unmap","unmap","unmap_cont","unmap_cont","unmap_cont","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","update","update","vaddr","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from"],"q":["kernel_hal","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kernel_hal::addr","","","","","","","","kernel_hal::boot","","","","","kernel_hal::config","","","","","","","","","","","","","","","","","","","","","kernel_hal::console","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kernel_hal::contextkernel_hal::context::TrapReason","","","","kernel_hal::cpu","","","kernel_hal::drivers","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kernel_hal::drivers::preludekernel_hal::drivers::prelude::Device","","","","","","kernel_hal::drivers::prelude::input","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kernel_hal::drivers::scheme","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kernel_hal::interrupt","","","","","","","","","","","kernel_hal::libos","kernel_hal::mem","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kernel_hal::net","","kernel_hal::rand","kernel_hal::thread","","","","","kernel_hal::timer","","","kernel_hal::userkernel_hal::vdso","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kernel_hal::vm","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","Generic cache policy.","","Device address.","","","The error type which is returned from HAL functions. TODO: …","The result type returned by HAL functions.","Kernel configuration passed by kernel when calls …","Functions implemented in the kernel and used by HAL …","Generic memory flags.","The smallest size of a page (4K).","Physical address.","","","","","","Virtual address.","","","Definition of phyical, virtual addresses and helper …","Returns the set containing all flags.","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Bootstrap and initialization.","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Kernel configuration.","Console input and output.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","User context.","CPU information.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Device drivers.","Returns an empty set of flags.","","","","","","","","","","","Allocate one physical frame.","Allocate one physical frame.","Allocate contiguous <code>frame_count</code> physical frames.","Allocate contiguous <code>frame_count</code> physical frames.","Deallocate a physical frame.","Deallocate a physical frame.","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","Handle kernel mode page fault.","Handle kernel mode page fault.","","","Non-SMP initialization.","Inserts the specified flags in-place.","Interrupts management.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Functions only available on the libos mode.","Physical memory operations.","","","Returns the complement of this set of flags.","","","","","","","","The main part of the primary CPU initialization.","Initialize the primary CPU at an early stage (before the …","Random number generator.","Removes the specified flags in-place.","","","","","","","Initialize the secondary CPUs.","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Thread spawning.","Time and clock functions.","","","Toggles the specified flags in-place.","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","Read/write user space pointer.","VDSO constants.","Virtual memory operations.","","","","","","","Device address.","Physical address.","Virtual address.","","","","","","The kernel command line.","Returns the slice of the initial RAM disk, or <code>None</code> if not …","The main part of the primary CPU initialization.","Initialize the primary CPU at an early stage (before the …","Initialize the secondary CPUs.","Kernel configuration passed by kernel when calls …","","","","","","","","","","","","","","","","","","","","","The POSIX <code>winsize</code> structure.","","","","","","","","","Read buffer data from console (serial).","Returns the size information of the console, see …","Writes formatted data into the serial, and the graphic …","Writes a string slice into the serial, and the graphic …","","","Writes formatted data into the graphic console.","Writes a string slice into the graphic console.","","","","","","Writes formatted data into the serial.","Writes a string slice into the serial.","","","","","","","","","","","","","","General registers","","","","","","","","","","","Reason of the trap.","","","","User context saved on trap.","For reading and writing fields in <code>UserContext</code>.","X86 vector registers.","","","","Advance the instruction pointer in trap handler on some …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Switch to user mode.","","Returns the <code>error_code</code> field of the context.","","","","","","","","","","","","","","","","Get <code>TrapReason</code> from <code>trap_num</code> and <code>error_code</code> in trap frame …","","","","","","","Returns the reference of general registers.","Returns the mutable reference of general registers.","Read a field of the context.","","","","","","","","","","","","Create an empty user context.","","","","","","","","","","","","","","","","","","","","","Returns a <code>usize</code> representing the trap reason. (i.e., IDT …","","","","","","","","","","","","","","","","","","","","","","","","Write a field of the context.","Initialize the context for entry into userspace.","The syscall entry of function call.","","","","","Returns <code>TrapReason</code> according to the context.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Current CPU frequency in MHz.","Current CPU ID.","Shutdown/reboot the machine.","A wrapper of a device array with the same <code>Scheme</code>.","Returns all devices which implement the <code>BlockScheme</code>.","Returns all devices which implement the <code>DisplayScheme</code>.","Returns all devices which implement the <code>InputScheme</code>.","Returns all devices which implement the <code>IrqScheme</code>.","Returns all devices which implement the <code>NetScheme</code>.","Returns all devices which implement the <code>UartScheme</code>.","Convert self into a vector.","","","","","","","","Returns the device with the given name, or <code>None</code> if not …","Returns the first device of this device array, or <code>None</code> if …","Returns the first device of this device array.","","","","","Re-exported modules from crate <code>zcore_drivers</code>.","","","Re-exported modules from crate <code>zcore_drivers</code>. The <code>Scheme</code> …","","Returns the device at given position, or <code>None</code> if out of …","","","","","","","","Used to describe absolute axis value changes, e.g. …","","","","A resource with the specified identifier already exists.","","The buffer is too small.","","Color format for one pixel. <code>RGB888</code> means R in bits 16-23, …","","","","","","Failed to alloc DMA memory.","","","Used to send force feedback commands to an input device.","","Used to receive force feedback device status.","","","","","Linux input event codes.","","Invalid parameter.","I/O Error","","","","","Used to describe state changes of keyboards, buttons, or …","","Used to turn LEDs on devices on and off.","","","Used to describe miscellaneous input data that do not fit …","","","No resource to allocate.","The device is not ready.","The device driver is not implemented, supported, or …","A special type for power button and switch input.","","","","","Used to describe relative axis value changes, e.g. moving …","","Used for autorepeating devices.","","Used to output sound to devices.","","Used to describe binary state input switches.","","Used as markers to separate events. Events may be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Number of bytes per pixel.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Number of bits per pixel.","","","","","","","frame buffer base virtual address","frame buffer size","","","","","","","","","","","","","color encoding format of RGBA","","","","","","","","","","","","","","","","","Safety","","","","visible height","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Number of bytes between each row of the frame buffer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","visible width","","","","","","","","","","","","","","","","","","","","","","","","","","","Safety","","","","","","","","","Whether or not the packet is valid or not.","Whether or not the left mouse button is pressed.","Whether or not the middle mouse button is pressed.","","","","Whether or not the right mouse button is pressed.","Whether or not the x delta is negative.","Whether or not the y delta is negative.","Returns the set containing all flags.","","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","","","Returns an empty set of flags.","","","","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","","Returns the complement of this set of flags.","","","","","","","","Removes the specified flags in-place.","","","","","","","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","","Returns the symmetric difference between the flags in <code>self</code> …","","","Toggles the specified flags in-place.","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns the capability bitmap of the specific kind of …","Clear the screen with <code>color</code>.","Configure the specified interrupt vector. If it is …","Write pixel color.","Returns the framebuffer.","Fill a given rectangle with <code>color</code>.","","Flush framebuffer to screen.","","","","","","Init irq for current cpu. Some IRQ hardware requires …","Is a valid IRQ number.","Disable IRQ.","Method used for platform allocation of blocks of MSI and …","Method used to free a block of MSI IRQs previously …","Register a handler function for a given msi_id within an …","","Whether need to flush the frambuffer to screen.","","","","Register the device to delivery an IRQ.","Add an interrupt handler to an IRQ.","","","Subscribe events, call the <code>handler</code> when an input event …","Trigger the event manually and call its handler …","","Enable IRQ.","Remove the interrupt handler to an IRQ.","","","","Configure the specified interrupt vector. If it is …","Handle IRQ.","Is a valid IRQ number.","Disable IRQ.","Method used for platform allocation of blocks of MSI and …","Method used to free a block of MSI IRQs previously …","Register a handler function for a given msi_id within an …","Add an interrupt handler to an IRQ.","Enable IRQ.","Remove the interrupt handler to an IRQ.","Suspend the CPU (also enable interrupts) and wait for an …","","A 4K size physical frame.","The global physical frame contains all zeros.","convert to a mutable raw pointer.","convert to raw a pointer.","","","","","","","","","","","","","","","","Flush the physical frame.","Returns all free physical memory regions.","","","Safety","","","Allocate one physical frame.","Allocate contiguous physical frames.","Allocate one physical frame and fill with zero.","","","","","Get the start physical address of this frame.","Copy content of physical memory <code>src</code> to <code>dst</code> with <code>len</code> bytes.","Read physical memory from <code>paddr</code> to <code>buf</code>.","Write physical memory to <code>paddr</code> from <code>buf</code>.","Zero physical memory at <code>[paddr, paddr + len)</code>.","","","","","","","","","","","","","","","Convert virtual address to physical address.","","","","","Fill <code>self</code> with zero.","","","Fill random bytes to the buffer","Get tid and pid of current task.","Set tid and pid of current task.","Sleeps until the specified of time.","Spawn a new thread.","Yields execution back to the async runtime.","Converting from now-relative durations to absolute …","Get current time. TODO: use <code>Instant</code> as return type.","Set a new timer. After <code>deadline</code>, the <code>callback</code> will be …","","The error type which is returned from user pointer.","","","","","","","","","","A valid IoVecs request from userit map indicating features.","This struct contains constants that are initialized by the …","","","","","","","","","","","","","","","","","","","","","","Number of bytes in a data cache line.","","Bit map indicating features.","","","","","","","Total amount of debug registers available in the system.","","Number of bytes in an instruction cache line.","","","","Maximum number of CPUs that might be online during the …","","","","","","","Total amount of physical memory in the system, in bytes.","","","","","","","Set version string.","Conversion factor for zx_ticks_get return values to …","","Ratio which relates ticks (zx_ticks_get) to clock …","","","","","","","","","","","","","","","","Get platform specific information.","A NUL-terminated UTF-8 string returned by …","Actual length of <code>version_string</code>, not including the NUL …","","","","","","","","A generic page table abstraction.","The <code>PagingError::NotMapped</code> can be ignored.","","","A 4K, 2M or 1G size page.","Possible page size (4K, 2M, 1G).","Dummy page table implemented by <code>mmap</code>, <code>munmap</code>, and <code>mprotect</code>.","Errors may occur during address translation.","Address translation result.","","","","Activate the page table associated with the <code>vmtoken</code> by …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Read the current VM token, which is the page table root …","","","","","","","","","","","If self is <code>Err(PagingError::NotMapped</code>, ignores the error …","","","","","","","Map the <code>page</code> to the frame of <code>paddr</code> with <code>flags</code>.","","","","","","","","","","","","","","","Query the physical address which the page of <code>vaddr</code> maps to.","","","","","","","","","","","Get the physical address of root page table.","","","","","","","","","","","","","","","","Unmap the page of <code>vaddr</code>.","","","","","","","","","","","","","Change the <code>flags</code> of the page of <code>vaddr</code>.","","","","","","","","","",""],"i":[1,1,0,2,0,1,1,0,0,0,0,0,0,0,1,1,1,2,2,0,1,2,0,1,3,1,2,1,1,1,1,1,1,1,0,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,1,2,1,2,1,1,0,0,1,0,0,1,0,1,1,2,1,3,1,1,1,1,1,2,4,4,4,4,4,4,3,3,1,2,1,1,1,1,4,4,1,5,0,1,0,1,1,3,1,2,1,1,0,0,1,0,1,3,1,2,3,1,2,1,0,0,0,1,3,1,2,3,1,2,0,1,1,1,1,0,0,1,2,1,3,1,2,2,3,1,2,3,1,2,1,3,1,2,3,1,2,0,0,0,3,1,2,3,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,7,7,7,7,7,7,7,7,0,0,0,0,7,7,0,0,7,7,7,7,7,0,0,7,7,7,7,7,7,7,7,7,7,7,7,8,0,9,9,10,9,9,10,9,10,9,10,0,0,9,9,0,0,0,11,11,11,12,11,13,10,9,12,11,8,13,10,9,12,11,8,13,10,9,12,11,8,13,10,9,12,11,8,13,10,9,12,11,8,13,10,9,12,11,8,13,12,11,8,13,12,11,8,13,12,11,8,12,13,12,11,11,11,11,11,13,10,9,12,11,8,11,13,10,9,9,12,11,8,13,11,11,12,12,12,13,13,10,9,12,11,8,11,11,11,13,12,13,10,9,12,11,8,13,10,9,12,11,8,13,13,13,13,13,13,13,13,12,13,13,13,13,13,13,11,13,13,13,13,13,10,9,12,11,8,13,10,9,12,11,8,12,12,0,13,12,11,8,12,13,10,9,12,11,8,13,10,9,12,11,8,13,10,9,12,11,8,13,10,9,12,11,8,13,10,9,12,11,8,13,10,9,12,11,8,13,10,9,12,11,8,11,14,15,16,15,0,0,0,0,0,0,0,0,0,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,17,17,0,17,17,17,17,17,17,17,17,18,19,20,21,21,22,23,22,0,0,0,0,0,23,0,22,24,20,19,20,19,0,23,0,0,0,20,22,22,23,0,0,0,19,20,19,20,24,19,20,23,22,22,22,19,18,18,18,0,19,20,19,0,19,20,19,20,19,23,25,26,27,18,28,29,19,30,20,24,21,22,23,27,25,26,27,18,28,29,19,30,20,24,21,22,23,25,26,27,18,28,29,19,30,20,24,21,22,23,18,25,26,27,18,28,29,19,30,20,24,21,22,23,25,26,27,18,28,29,19,30,20,24,21,22,23,25,26,27,18,28,29,19,30,20,24,21,22,23,27,18,29,19,30,20,23,27,18,29,19,30,20,23,30,26,26,18,25,25,26,27,18,30,29,29,26,27,18,28,29,19,30,20,24,21,22,23,29,25,26,27,18,28,29,19,30,20,24,21,22,22,22,23,26,25,25,27,28,29,23,0,25,26,27,18,28,29,19,30,20,24,21,22,23,27,27,25,26,27,18,28,29,19,30,20,24,21,22,23,25,26,27,18,28,29,19,30,20,24,21,22,23,29,27,27,25,26,27,18,28,29,19,30,20,24,21,22,23,25,26,27,18,28,29,19,30,20,24,21,22,23,26,26,27,18,29,19,30,20,23,25,26,27,18,28,29,19,19,30,20,24,21,22,23,25,26,27,18,28,29,19,30,20,24,21,22,23,25,26,27,18,28,29,19,30,20,24,21,22,23,25,26,27,18,28,29,19,30,20,24,21,22,23,25,26,27,18,28,29,19,30,20,24,21,22,23,30,28,29,25,26,27,18,28,29,19,30,20,24,21,22,23,25,26,27,18,28,29,19,30,20,24,21,22,23,25,28,28,31,32,33,34,35,36,37,37,37,0,0,0,37,37,37,37,38,39,37,38,37,37,37,37,37,37,37,39,37,38,39,37,38,38,39,37,38,39,37,38,39,37,38,37,38,37,38,37,39,37,37,37,38,37,38,38,38,37,37,37,37,37,37,37,37,38,39,37,38,37,37,37,37,37,37,37,37,39,37,38,37,37,37,39,37,39,37,38,39,37,38,37,37,39,37,38,39,37,38,37,37,37,39,37,37,38,37,39,39,37,38,39,37,38,39,37,38,37,39,37,38,39,37,38,39,37,38,39,37,38,0,0,40,0,0,0,0,0,0,0,41,42,43,42,42,42,44,42,45,45,45,46,42,43,43,43,43,43,43,46,42,45,44,45,43,43,45,47,40,40,47,43,43,48,44,47,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,49,49,50,49,50,49,50,49,50,49,50,49,50,50,49,49,0,0,49,50,49,49,50,49,49,49,49,50,49,50,49,0,0,0,0,49,50,49,50,49,50,49,50,49,50,49,50,49,50,0,49,50,49,50,49,0,0,0,0,0,0,0,0,0,0,0,51,0,0,0,51,51,51,51,0,0,0,0,0,0,0,0,0,0,0,0,52,53,52,52,53,52,54,55,56,51,53,57,52,54,55,56,51,53,57,52,54,55,56,51,53,57,52,54,55,56,51,53,57,52,53,52,54,55,56,51,53,57,52,54,55,56,51,53,57,51,51,57,57,51,52,51,53,57,52,52,54,55,56,51,53,57,52,52,54,55,56,51,53,57,53,52,53,53,52,54,55,56,51,53,57,52,54,55,56,51,53,57,52,52,52,52,52,52,58,52,57,52,54,55,56,51,53,57,52,54,55,56,51,53,57,51,57,52,54,55,56,51,53,57,52,54,55,56,51,53,57,52,54,55,56,51,53,57,52,54,55,56,51,53,57,52,54,55,56,51,53,57,52,54,55,56,51,53,57,52,54,55,56,51,53,57,52,52,52,57,52,0,0,0,59,59,60,61,59,60,61,59,60,61,59,60,61,59,60,61,59,60,61,61,60,59,60,59,60,61,59,60,61,61,61,60,59,60,61,60,59,60,61,59,60,61,60,59,60,61,59,60,61,60,60,60,60,59,60,61,59,60,61,59,60,61,59,60,61,59,60,61,0,60,60,59,60,61,59,60,61,62,0,0,62,62,0,0,0,0,0,63,63,63,0,63,62,63,64,65,62,63,64,65,62,63,64,65,62,63,64,65,62,63,64,65,62,63,64,65,63,64,63,64,65,0,65,63,62,63,64,62,63,64,65,65,66,62,63,64,65,63,63,67,65,67,67,65,64,62,63,64,65,62,63,64,65,63,67,65,62,63,64,65,62,63,64,65,64,67,65,63,64,62,63,64,65,62,63,64,65,62,63,64,65,67,65,67,67,65,62,63,64,65,62,63,64,65,67,65,64,62,63,64,65,62,63,64,65],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[["mmuflags",3]]],[[]],[[],["usize",15]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["mmuflags",3]],[[],["cachepolicy",4]],[[]],[[]],[[["mmuflags",3]],["ordering",4]],[[]],null,null,[[],["bool",15]],null,null,[[]],null,[[]],[[["mmuflags",3]],["bool",15]],[[["cachepolicy",4]],["bool",15]],[[["intoiterator",8]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["option",4,[["physaddr",6]]]],[[],["option",4,[["physaddr",6]]]],[[["usize",15],["usize",15]],["option",4,[["physaddr",6]]]],[[["usize",15],["usize",15]],["option",4,[["physaddr",6]]]],[[["physaddr",6]]],[[["physaddr",6]]],[[["deviceerror",4]]],[[]],[[]],[[]],[[["usize",15]],["option",4]],[[["usize",15]]],[[["usize",15]]],[[["intoiterator",8]]],[[["virtaddr",6],["mmuflags",3]]],[[["virtaddr",6],["mmuflags",3]]],[[]],[[],["pagingresult",6]],[[]],[[]],null,[[]],[[],["bool",15]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],null,null,[[["mmuflags",3]],["bool",15]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["mmuflags",3]],["option",4,[["ordering",4]]]],[[]],[[["kernelconfig",3]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["bool",15]]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[["u32",15]],["result",4,[["u32",15]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[["usize",15]],["usize",15]],[[["usize",15]],["usize",15]],[[["usize",15]],["bool",15]],[[["usize",15]],["usize",15]],[[["usize",15]],["usize",15]],[[],["string",3]],[[],["option",4]],[[]],[[["kernelconfig",3]]],[[]],null,[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[],["consolewinsize",3]],[[]],[[]],[[],["consolewinsize",3]],[[["arguments",3]]],[[["str",15]]],[[],["consolewinsize",3]],[[]],[[["arguments",3]]],[[["str",15]]],[[]],[[]],[[]],[[]],[[]],[[["arguments",3]]],[[["str",15]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["trapreason",4]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["generalregs",3]],[[],["usercontext",3]],[[],["vectorregs",3]],[[],["u128",3]],[[]],[[]],[[]],[[]],[[],["generalregs",3]],[[]],[[]],[[],["u128",3]],[[]],[[["generalregs",3]],["bool",15]],[[],["usize",15]],null,null,null,null,null,[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],null,[[]],[[]],[[]],[[["usize",15],["usize",15]]],[[]],[[]],[[]],null,null,null,[[],["generalregs",3]],[[],["generalregs",3]],[[["usercontextfield",4]],["usize",15]],null,[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[["generalregs",3]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,[[],["usize",15]],null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usercontextfield",4],["usize",15]]],[[["usize",15],["usize",15],["usize",15],["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[],["trapreason",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[],["u16",15]],[[],["u8",15]],[[],["never",15]],null,[[],["devicelist",3]],[[],["devicelist",3]],[[],["devicelist",3]],[[],["devicelist",3]],[[],["devicelist",3]],[[],["devicelist",3]],[[],["rwlockreadguard",3,[["vec",3,[["arc",3]]]]]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[]],[[["str",15]],["option",4,[["arc",3]]]],[[],["option",4,[["arc",3]]]],[[],["arc",3]],[[]],[[]],[[]],[[]],null,[[]],[[]],null,[[],["result",4]],[[["usize",15]],["option",4,[["arc",3]]]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u8",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u8",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["rgbcolor",3]],[[],["colorformat",4]],[[],["displayinfo",3]],[[],["inputeventtype",4]],[[],["inputevent",3]],[[],["capabilitytype",4]],[[],["device",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["u16",15]],["bool",15]],[[],["bool",15]],[[],["u8",15]],[[]],[[]],[[],["inputcapability",3]],[[["rgbcolor",3]],["bool",15]],[[["colorformat",4]],["bool",15]],null,null,null,[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["properror",4]],["deviceerror",4]],[[["error",4]],["deviceerror",4]],[[]],[[]],[[],["inputcapability",3]],[[["usize",15]],["framebuffer",3]],[[],["framebuffer",3]],[[],["u8",15]],null,null,[[],["arc",3,[["scheme",8]]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["rgbcolor",3]],["bool",15]],[[["u8",15],["u8",15],["u8",15]],["rgbcolor",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u32",15]],[[],["u8",15]],[[],["u32",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u16",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["u16",15]],["result",4,[["inputeventtype",4],["u16",15]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15],["rgbcolor",3],["colorformat",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["mouseflags",3]],[[]],[[]],[[]],[[]],[[["mouseflags",3]],["mouseflags",3]],[[["mouseflags",3]]],[[["mouseflags",3]],["mouseflags",3]],[[["mouseflags",3]]],[[],["u8",15]],[[["mouseflags",3]],["mouseflags",3]],[[["mouseflags",3]]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["mouseflags",3]],[[],["mousestate",3]],[[]],[[]],[[["mouseflags",3]],["ordering",4]],[[["arc",3]],["bool",15]],[[],["mouseflags",3]],[[["mouseflags",3]],["bool",15]],[[],["mouseflags",3]],[[],["mousestate",3]],[[["mouseflags",3]],["mouseflags",3]],null,null,null,[[],["mouseflags",3]],[[["mouseflags",3]],["bool",15]],[[]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[["u8",15]],["option",4,[["mouseflags",3]]]],[[["u8",15]],["mouseflags",3]],[[["u8",15]],["mouseflags",3]],[[],["mouseflags",3]],[[]],[[["mouseflags",3]]],[[["mouseflags",3]],["mouseflags",3]],[[["mouseflags",3]],["bool",15]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[["mouseflags",3]],["bool",15]],[[["arc",3,[["inputscheme",8]]]],["arc",3,[["mouse",3]]]],[[],["mouseflags",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["mouseflags",3]],["option",4,[["ordering",4]]]],[[["mouseflags",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["mouseflags",3],["bool",15]]],[[["mouseflags",3]],["mouseflags",3]],[[["mouseflags",3]]],[[["box",3,[["fn",8],["global",3]]],["bool",15]]],[[["mouseflags",3]],["mouseflags",3]],[[]],[[]],[[["mouseflags",3]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["mouseflags",3]],["mouseflags",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,[[["capabilitytype",4]],["inputcapability",3]],[[["rgbcolor",3]]],[[["usize",15],["irqtriggermode",4],["irqpolarity",4]],["result",4,[["deviceerror",4]]]],[[["u32",15],["u32",15],["rgbcolor",3]]],[[],["framebuffer",3]],[[["rectangle",3],["rgbcolor",3]]],[[],["result",4,[["deviceerror",4]]]],[[],["result",4,[["deviceerror",4]]]],[[],["string",3]],[[],["vec",3,[["cidr",4],["global",3]]]],[[],["address",3]],[[["usize",15]]],[[],["displayinfo",3]],[[]],[[["usize",15]],["bool",15]],[[["usize",15]],["result",4,[["deviceerror",4]]]],[[["usize",15]],["result",4,[["range",3,[["usize",15]]],["deviceerror",4]]]],[[["range",3,[["usize",15]]]],["result",4,[["deviceerror",4]]]],[[["range",3,[["usize",15]]],["usize",15],["box",3,[["fn",8],["global",3]]]],["result",4,[["deviceerror",4]]]],[[],["str",15]],[[],["bool",15]],[[],["result",4,[["deviceerror",4]]]],[[["usize",15]],["result",4,[["deviceerror",4]]]],[[],["result",4,[["usize",15],["deviceerror",4]]]],[[["usize",15],["arc",3,[["scheme",8]]]],["result",4,[["deviceerror",4]]]],[[["usize",15],["box",3,[["fn",8],["global",3]]]],["result",4,[["deviceerror",4]]]],[[],["result",4,[["usize",15],["deviceerror",4]]]],[[["u8",15]],["result",4,[["deviceerror",4]]]],[[["box",3,[["fn",8],["global",3]]],["bool",15]]],[[]],[[],["result",4,[["option",4,[["u8",15]]],["deviceerror",4]]]],[[["usize",15]],["result",4,[["deviceerror",4]]]],[[["usize",15]],["result",4,[["deviceerror",4]]]],[[["arc",3]],["arc",3,[["scheme",8]]]],[[["usize",15]],["result",4,[["deviceerror",4]]]],[[["str",15]],["result",4,[["deviceerror",4]]]],[[["usize",15],["irqtriggermode",4],["irqpolarity",4]],["halresult",6]],[[["usize",15]]],[[["usize",15]],["bool",15]],[[["usize",15]],["halresult",6]],[[["usize",15]],["halresult",6,[["range",3,[["usize",15]]]]]],[[["range",3,[["usize",15]]]],["halresult",6]],[[["range",3,[["usize",15]]],["usize",15],["irqhandler",6]],["halresult",6]],[[["usize",15],["irqhandler",6]],["halresult",6]],[[["usize",15]],["halresult",6]],[[["usize",15]],["halresult",6]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["physframe",3]],[[]],[[["formatter",3]],["result",6]],[[["physaddr",6]]],[[],["vec",3,[["range",3,[["physaddr",6]]]]]],[[]],[[]],[[["physaddr",6]]],[[]],[[]],[[],["option",4]],[[["usize",15],["usize",15]],["vec",3]],[[],["option",4]],[[]],[[]],[[]],[[]],[[],["physaddr",6]],[[["physaddr",6],["physaddr",6],["usize",15]]],[[["physaddr",6]]],[[["physaddr",6]]],[[["physaddr",6],["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[["virtaddr",6]],["physaddr",6]],[[]],[[]],[[]],[[]],[[]],[[],["vec",3,[["arc",3,[["netscheme",8]]]]]],[[]],[[]],[[]],[[["u64",15],["u64",15]]],[[["duration",3]]],[[]],[[]],[[["duration",3]],["duration",3]],[[],["duration",3]],[[["duration",3],["box",3,[["fnonce",8]]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["usize",15]]],[[],["result",4,[["error",4]]]],[[]],[[],["result",4,[["error",4]]]],[[],["result",4,[["error",4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4,[["error",4]]]],[[],["result",4,[["error",4]]]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["error",4]],[[]],[[]],[[]],[[["error",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15],["usize",15]],["result",4,[["error",4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4,[["error",4]]]],[[["usize",15]],["result",4,[["vec",3],["error",4]]]],[[],["result",4,[["string",3],["error",4]]]],[[],["result",4,[["vec",3,[["string",3]]],["error",4]]]],[[],["result",4,[["option",4],["error",4]]]],[[["usize",15]],["result",4,[["iovecs",3],["error",4]]]],[[["usize",15]],["result",4,[["iovecs",3],["error",4]]]],[[["usize",15]],["result",4,[["string",3],["error",4]]]],[[],["result",4,[["vec",3,[["u8",15]]],["error",4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4,[["error",4]]]],[[],["result",4,[["error",4]]]],[[["str",15]],["result",4,[["error",4]]]],[[],["result",4,[["usize",15],["error",4]]]],[[],["result",4,[["error",4]]]],null,null,null,[[],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],null,null,[[]],null,[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15]]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["vdsoconstants",3]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["physaddr",6]]],[[["usize",15]],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["pagesize",4]],[[],["page",3]],[[]],[[]],[[]],[[],["physaddr",6]],[[]],[[["pagesize",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[],["pagingresult",6]],[[]],[[]],[[]],[[]],[[["usize",15]],["bool",15]],[[],["bool",15]],[[["page",3],["physaddr",6],["mmuflags",3]],["pagingresult",6]],[[["page",3],["physaddr",6],["mmuflags",3]],["pagingresult",6]],[[["virtaddr",6],["usize",15],["physaddr",6],["mmuflags",3]],["pagingresult",6]],[[["virtaddr",6],["usize",15],["physaddr",6],["mmuflags",3]],["pagingresult",6]],[[]],[[["virtaddr",6],["pagesize",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]],["usize",15]],[[["virtaddr",6]],["pagingresult",6]],[[["virtaddr",6]],["pagingresult",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["physaddr",6]],[[],["physaddr",6]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["virtaddr",6]],["pagingresult",6]],[[["virtaddr",6]],["pagingresult",6]],[[["virtaddr",6],["usize",15]],["pagingresult",6]],[[["virtaddr",6],["usize",15]],["pagingresult",6]],[[["virtaddr",6],["usize",15]],["pagingresult",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["virtaddr",6],["option",4,[["physaddr",6]]],["option",4,[["mmuflags",3]]]],["pagingresult",6,[["pagesize",4]]]],[[["virtaddr",6],["option",4,[["physaddr",6]]],["option",4,[["mmuflags",3]]]],["pagingresult",6,[["pagesize",4]]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[3,"MMUFlags"],[4,"CachePolicy"],[3,"HalError"],[8,"KernelHandler"],[6,"PagingResult"],[3,"KernelConfig"],[3,"ConsoleWinSize"],[3,"U128"],[4,"TrapReason"],[4,"UserContextField"],[3,"VectorRegs"],[3,"UserContext"],[3,"GeneralRegs"],[13,"Interrupt"],[13,"PageFault"],[13,"GernelFault"],[3,"DeviceList"],[4,"ColorFormat"],[4,"InputEventType"],[4,"CapabilityType"],[4,"IrqPolarity"],[4,"DeviceError"],[4,"Device"],[4,"IrqTriggerMode"],[3,"FrameBuffer"],[3,"InputCapability"],[3,"RgbColor"],[3,"Rectangle"],[3,"DisplayInfo"],[3,"InputEvent"],[13,"Block"],[13,"Display"],[13,"Input"],[13,"Irq"],[13,"Net"],[13,"Uart"],[3,"MouseFlags"],[3,"MouseState"],[3,"Mouse"],[8,"EventScheme"],[8,"InputScheme"],[8,"DisplayScheme"],[8,"IrqScheme"],[8,"BlockScheme"],[8,"NetScheme"],[8,"Scheme"],[8,"UartScheme"],[8,"SchemeUpcast"],[3,"PhysFrame"],[3,"ZERO_FRAME"],[4,"Error"],[3,"UserPtr"],[3,"IoVec"],[4,"In"],[4,"Out"],[4,"InOut"],[3,"IoVecs"],[6,"UserInPtr"],[3,"VersionString"],[3,"VdsoConstants"],[3,"Features"],[4,"PagingError"],[4,"PageSize"],[3,"Page"],[3,"PageTable"],[8,"IgnoreNotMappedErr"],[8,"GenericPageTable"]]},\
"linux_object":{"doc":"Linux kernel objects","tn":["error","fs","ipc","loader","net","process","signal","sync","thread","time","E2BIG","EACCES","EAFNOSUPPORT","EAGAIN","EBADF","EBUSY","ECHILD","ECONNREFUSED","EDEADLK","EDOM","EEXIST","EFAULT","EFBIG","EIDRM","EINTR","EINVAL","EIO","EISCONN","EISDIR","ELOOP","EMFILE","EMLINK","ENAMETOOLONG","ENFILE","ENOBUFS","ENODEV","ENOENT","ENOEXEC","ENOLCK","ENOMEM","ENOPROTOOPT","ENOSPC","ENOSYS","ENOTBLK","ENOTCONN","ENOTDIR","ENOTEMPTY","ENOTSOCK","ENOTTY","ENXIO","EPERM","EPFNOSUPPORT","EPIPE","ERANGE","EROFS","ESPIPE","ESRCH","ETXTBSY","EUNDEF","EXDEV","LxError","LxResult","SysResult","as_any","as_any_mut","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","fmt","fmt","from","from","from","from","into","into_any","into_any_arc","into_any_rc","into_result","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","to_string","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","wrapping_as","wrapping_cast_from","APPEND","CLOEXEC","CREATE","CWD","Current","EXCLUSIVE","End","File","FileDesc","FileLike","INodeExt","NON_BLOCK","OpenFlags","Pipe","RDONLY","RDWR","STDIN","STDOUT","SeekFrom","Start","TRUNCATE","WRONLY","add_signal_callback","all","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_ref","async_poll","async_poll","async_poll","az","az","az","az","az","az","az","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone_into","clone_into","clone_into","close_on_exec","cmp","cmp","complement","contains","create_pair","create_root_fs","deref","deref","difference","downcast","downcast_arc","downcast_mut","downcast_rc","downcast_ref","drop","dup","dup","empty","eq","eq","extend","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","get_hash","get_hash","get_vmo","get_vmo","hash","hash","id","inode","insert","intersection","intersects","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_result","into_result","into_result","into_result","into_result","into_result","into_result","ioctl","ioctl","is","is_all","is_append","is_empty","lookup_follow","metadata","name","ne","ne","new","non_block","not","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","partial_cmp","path","poll","poll","poll","rcore_fs_wrapper","read","read","read_as_vec","read_at","read_at","read_at","read_entry","readable","remove","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","seek","set","set_flags","set_flags","set_len","set_name","signal","signal_change","signal_clear","signal_set","split_path","sub","sub_assign","symmetric_difference","sync_all","sync_data","to_owned","to_owned","to_owned","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","union","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","vfs","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","writable","write","write","write_at","write_at","write_at","0","0","0","Block","BlockCache","MemBuf","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","az","az","az","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","drop","from","from","from","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_result","into_result","into_result","new","new","new","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","read_at","read_at","read_at","read_at","read_at","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","sync","sync","sync","sync","sync","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","write_at","write_at","write_at","write_at","write_at","Again","BlockDevice","Busy","CharDevice","DeviceError","Dir","DirNotEmpty","DirRemoved","EntryExist","EntryNotFound","File","FileSystem","FileType","FsError","FsInfo","INode","IOCTLError","IOCTLError","Interrupted","InvalidParam","IsDir","MMapArea","Metadata","NamedPipe","NoDevice","NoDeviceSpace","NotCharDevice","NotDir","NotFile","NotSameFs","NotSupported","NotValidFD","NotValidMemory","NotValidParam","PollStatus","Result","Socket","SymLink","SymLoop","Timespec","WrongFs","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_ref","async_poll","atime","az","az","az","az","az","az","az","az","bavail","bfree","blk_size","blocks","blocks","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bsize","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone_into","clone_into","clone_into","cmp","create","create2","ctime","default","dev","downcast_ref","end_vaddr","eq","eq","eq","eq","error","ffree","files","find","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","frsize","fs","get_entry","get_entry_with_metadata","get_hash","gid","hash","info","inode","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_result","into_result","into_result","into_result","into_result","into_result","into_result","into_result","io_control","link","list","lookup","lookup_follow","make_rdev","metadata","mmap","mode","move_","mtime","namemax","ne","ne","nlinks","nsec","offset","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","poll","prot","rdev","read","read_as_vec","read_at","resize","root_inode","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","sec","set_metadata","size","start_vaddr","sync","sync_all","sync_data","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uid","unlink","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","write","write_at","IpcPerm","SemArray","SemProc","SemidDs","ShmGuard","ShmIdentifier","ShmProc","ShmidDs","__pad1","__pad2","__seq","add","add","add_undo","addr","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","atime","attach","az","az","az","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cgid","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cpid","ctime","ctime","ctime","ctime","cuid","default","default","detach","drop","dtime","fmt","fmt","from","from","from","from","from","from","from","from","get","get","get_id","get_or_create","gid","guard","index","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_result","into_result","into_result","into_result","into_result","into_result","into_result","into_result","key","lpid","mode","nattch","new_shared_guard","nsems","otime","otime","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","perm","perm","pop","remove","remove","remove","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","segsz","semid_ds","set","set","set","set_addr","shared_guard","shmid_ds","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uid","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","LinuxElfLoader","as_any","as_any_mut","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","from","into","into_any","into_any_arc","into_any_rc","into_result","load","overflowing_as","overflowing_cast_from","root_inode","saturating_as","saturating_cast_from","stack_pages","syscall_entry","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","wrapping_as","wrapping_cast_from","Endpoint","ICMP_METADATA_BUF","ICMP_RECVBUF","ICMP_SENDBUF","IPPROTO_IP","IP_HDRINCL","Ip","LinkLevel","LinkLevelEndpoint","Netlink","NetlinkEndpoint","RAW_METADATA_BUF","RAW_RECVBUF","RAW_SENDBUF","Socket","TCP_RECVBUF","TCP_SENDBUF","UDP_METADATA_BUF","UDP_RECVBUF","UDP_SENDBUF","accept","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","az","az","az","bind","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone_into","clone_into","clone_into","connect","endpoint","fcntl","fmt","fmt","fmt","from","from","from","from_cstr","interface_index","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_result","into_result","into_result","ioctl","listen","multicast_groups_mask","new","new","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","poll","port_id","rand","read","remote_endpoint","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","setsockopt","shutdown","socket_address","tcp","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","udp","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","write","0","0","0","0","AddressFamily","ArpReq","BROADCAST","Internet","IpAddress","Ipv4","Ipv4Address","MULTICAST_ALL_ROUTERS","MULTICAST_ALL_SYSTEMS","Netlink","Packet","SockAddr","SockAddrIn","SockAddrLl","SockAddrNl","SockAddrPlaceholder","SockAddrUn","UNSPECIFIED","Unix","Unknown","Unspecified","Unspecified","addr_in","addr_ll","addr_nl","addr_ph","addr_un","arp_dev","arp_flags","arp_ha","arp_netmask","arp_pa","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bytes","as_bytes","az","az","az","az","az","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","cmp","data","default","default","eq","eq","eq","family","family","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_str","from_str","get_hash","get_hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_result","into_result","into_result","into_result","into_result","into_result","into_result","into_result","into_result","into_result","is_broadcast","is_broadcast","is_link_local","is_loopback","is_multicast","is_multicast","is_unicast","is_unicast","is_unspecified","is_unspecified","ne","ne","ne","new","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","partial_cmp","partial_cmp","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","sin_addr","sin_family","sin_port","sin_zero","sll_addr","sll_family","sll_halen","sll_hatype","sll_ifindex","sll_pkttype","sll_protocol","sockaddr_to_endpoint","sun_family","sun_path","to_owned","to_owned","to_owned","to_prefix_len","to_string","to_string","to_unspecified","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","v4","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","write_to","0","0","TcpSocketState","accept","as_any","as_any_mut","az","bind","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","connect","connect","default","endpoint","fcntl","fmt","from","into","into_any","into_any_arc","into_any_rc","into_result","ioctl","listen","new","overflowing_as","overflowing_cast_from","poll","read","read","remote_endpoint","saturating_as","saturating_cast_from","setsockopt","shutdown","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","wrapping_as","wrapping_cast_from","write","write","UdpSocketState","accept","as_any","as_any_mut","az","bind","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","connect","default","endpoint","fcntl","fmt","from","into","into_any","into_any_arc","into_any_rc","into_result","ioctl","listen","new","overflowing_as","overflowing_cast_from","poll","poll","read","read","remote_endpoint","saturating_as","saturating_cast_from","setsockopt","shutdown","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","wrapping_as","wrapping_cast_from","write","write","ExitCode","LinuxProcess","ProcessExt","RLimit","add_file","add_file_at","add_socket","as_any","as_any","as_any_mut","as_any_mut","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","change_directory","checked_as","checked_as","checked_cast_from","checked_cast_from","clone","clone_into","close_file","close_socket","create_linux","cur","current_working_directory","default","execute_path","file_limit","fmt","fork_from","from","from","get_file","get_file_like","get_files","get_free_fd","get_free_fd_from","get_futex","get_socket","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_result","into_result","linux","lookup_inode","lookup_inode_at","max","new","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","parent","remove_cloexec_files","root_inode","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","semaphores_add","semaphores_add_undo","semaphores_get","semaphores_remove","set_execute_path","set_signal_action","shm_add","shm_get","shm_get_id","shm_pop","shm_set","signal_action","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","wait_child","wait_child_any","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","ASYNCIO","ASYNCNL","AUTODISARM","DISABLE","KERNEL","MESGQ","MachineContext","NOCLDSTOP","NOCLDWAIT","NODEFER","ONSTACK","ONSTACK","QUEUE","RESETHAND","RESTART","RESTORER","RTMAX","RTMIN","SIGABRT","SIGALRM","SIGBUS","SIGCHLD","SIGCONT","SIGFPE","SIGHUP","SIGILL","SIGINFO","SIGINT","SIGIO","SIGIO","SIGKILL","SIGPIPE","SIGPROF","SIGPWR","SIGQUIT","SIGRT32","SIGRT33","SIGRT34","SIGRT35","SIGRT36","SIGRT37","SIGRT38","SIGRT39","SIGRT40","SIGRT41","SIGRT42","SIGRT43","SIGRT44","SIGRT45","SIGRT46","SIGRT47","SIGRT48","SIGRT49","SIGRT50","SIGRT51","SIGRT52","SIGRT53","SIGRT54","SIGRT55","SIGRT56","SIGRT57","SIGRT58","SIGRT59","SIGRT60","SIGRT61","SIGRT62","SIGRT63","SIGRT64","SIGSEGV","SIGSTKFLT","SIGSTOP","SIGSYS","SIGTERM","SIGTRAP","SIGTSTP","SIGTTIN","SIGTTOU","SIGURG","SIGUSR1","SIGUSR2","SIGVTALRM","SIGWINCH","SIGXCPU","SIGXFSZ","SIG_DFL","SIG_ERR","SIG_IGN","SigInfo","SiginfoFields","Signal","SignalAction","SignalActionFlags","SignalCode","SignalFrame","SignalStack","SignalStackFlags","SignalUserContext","Sigset","TIMER","TKILL","USER","_pad","_reserved1","all","all","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","az","az","az","az","az","az","az","az","az","az","az","az","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","code","complement","complement","contains","contains","contains","context","cr2","cs","default","default","default","default","default","difference","difference","eflags","empty","empty","empty","eq","eq","eq","err","errno","extend","extend","field","flags","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fpstate","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","fs","get_hash","get_hash","gs","handler","hash","hash","info","insert","insert","insert","insert_set","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_result","into_result","into_result","into_result","into_result","into_result","into_result","into_result","into_result","into_result","into_result","into_result","is_all","is_all","is_empty","is_empty","is_standard","link","mask","ne","ne","not","not","oldmask","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","partial_cmp","r10","r11","r12","r13","r14","r15","r8","r9","rax","rbp","rbx","rcx","rdi","rdx","remove","remove","remove","remove_set","restorer","ret_code","ret_code_addr","rip","rsi","rsp","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","set","set","sig_mask","signo","size","sp","stack","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","trapno","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","ucontext","union","union","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","CHILD_PROCESS_QUIT","CLOSED","ERROR","Event","EventBus","EventHandler","PROCESS_QUIT","READABLE","RECEIVE_SIGNAL","SEMAPHORE_CAN_ACQUIRE","SEMAPHORE_REMOVED","Semaphore","SemaphoreGuard","WRITABLE","access","acquire","all","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","az","az","az","az","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","change","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clear","clone","clone_into","cmp","complement","contains","default","default","deref","difference","drop","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","get","get_callback_len","get_hash","get_ncnt","get_pid","hash","insert","intersection","intersects","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_result","into_result","into_result","into_result","is_all","is_empty","ne","new","new","not","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","release","remove","remove","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","set","set","set","set_pid","sub","sub_assign","subscribe","symmetric_difference","to_owned","toggle","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","union","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","wait_for_event","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","CurrentThreadExt","LinuxThread","ThreadExt","as_any","as_any_mut","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","create_linux","exit_linux","from","into","into_any","into_any_arc","into_any_rc","into_result","lock_linux","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","set_tid_address","signal_alternate_stack","signal_mask","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","wrapping_as","wrapping_cast_from","RUsage","TimeSpec","TimeVal","Tms","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","az","az","az","az","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone_into","clone_into","clone_into","default","default","fmt","fmt","fmt","from","from","from","from","from","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_result","into_result","into_result","into_result","now","now","nsec","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","sec","sec","stime","tms_cstime","tms_cutime","tms_stime","tms_utime","to_msec","to_msec","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","update","usec","utime","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from"],"q":["linux_object","","","","","","","","","","linux_object::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","linux_object::fslinux_object::fs::SeekFrom","","","linux_object::fs::rcore_fs_wrapper","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","linux_object::fs::vfslinux_object::ipclinux_object::loader","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","linux_object::net","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","linux_object::net::Endpoint","","","linux_object::net::socket_addresslinux_object::net::socket_address::AddressFamily","linux_object::net::socket_address::IpAddress","linux_object::net::tcp","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","linux_object::net::udp","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","linux_object::process","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","linux_object::signallinux_object::synclinux_object::thread","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","linux_object::time","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Linux error codes","Linux file objects","Linux Inter-Process Communication","Linux ELF Program Loader","Linux socket objects","Linux Process","Linux signals","Useful synchronization primitives.","Linux Thread","Linux time objects","Arg list too long","Permission denied","Address family not supported by protocol","Try again","Bad file number","Device or resource busy","No child processes","Connection refused","Resource deadlock would occur","Math argument out of domain","File exists","Bad address","File too large","Identifier removed","Interrupted system call","Invalid argument","I/O error","Transport endpoint is already connected","Is a directory","Too many symbolic links encountered","Too many open files","Too many links","Filename too long","File table overflow","No buffer space available","No such device","No such file or directory","Exec format error","No record locks available","Out of memory","Protocol not available","No space left on device","Function not implemented","Block device required","Transport endpoint is not connected","Not a directory","Directory not empty","Socket operation on non-socket","Not a tty device","No such device or address","Operation not permitted","Protocol family not supported","Broken pipe","Math result not representable","Read-only file system","Illegal seek","No such process","Text file busy","Undefined","Cross-device link","Linux error codes defination","Linux Result defination","SysResult Result defination (same as Linux Result)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","append on each write","close on exec","create file if it does not exist","Pathname is interpreted relative to the current working …","seek from current","error if CREATE and the file exists","seek from end","file implement struct","file descriptor wrapper","Generic file interface","extension for INode","non block open","File open flags","pipe struct","read only","read write","STDIN global reference","STDOUT global reference","file seek type","seek from start point","truncate file upon open","write only","","Returns the set containing all flags.","","","","","","","","","","","","","","","return the any ref","wait for some event on a file descriptor use async","","","","","","","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","close on exec","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Create a pair of INode: (read, write)","create root filesystem, mount DevFS and RamFS","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns a boxed object from a boxed trait object if the …","Returns an <code>Arc</code>-ed object from an <code>Arc</code>-ed trait object if …","Returns a mutable reference to the object within the trait …","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Returns a reference to the object within the trait object …","","Duplicate the file.","","Returns an empty set of flags.","","","","Returns open flags.","","","","","","","","","","","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","Returns the <code>VmObject</code> representing the file with given …","Returns the <code>VmObject</code> representing the file with given …","","","","get INode of this file","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","manipulates the underlying device parameters of special …","","Returns true if the trait object wraps an object of type …","Returns <code>true</code> if all flags are currently set.","check if the OpenFlags caontains append","Returns <code>true</code> if no flags are currently stored.","lookup the file following the link","get metadata of file fstat","","","","create a file struct","check if the OpenFlags caontains non-block","Returns the complement of this set of flags.","","","","","","","","","","","","","","","","","Returns the file path.","wait for some event on a file descriptor","","monitoring events and determine whether the pipe is …","Device wrappers that implement <code>rcore_fs::dev::Device</code>, …","read to buffer","","similar to read, but return a u8 vector","read to buffer at given offset","","read from pipe","get the name of dir entry","check if the OpenFlags is readable","Removes the specified flags in-place.","","","","","","","","","","","","","","","seek from given type and offset","Inserts or removes the specified flags depending on the …","Set open flags.","","resize the file","","","","","","Split a <code>path</code> str to <code>(base_path, file_name)</code>","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Sync all data and metadata","Sync data (not include metadata)","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","check if the OpenFlags is writable","write from buffer","","write from buffer at given offset","","write to pipe","","","","Block device implements <code>BlockScheme</code>.","A naive LRU cache layer for <code>BlockDevice</code>, re-exported from …","Memory buffer for device.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","create a <code>MemBuf</code> struct.","create a <code>Block</code> struct.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Abstract file system","","","Metadata of FileSystem","Abstract file system object such as file or directory.","","","","","","","Metadata of INode","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This is used to implement dynamics cast. Simply return …","Poll the events, return a bitmap of events, async version.","Time of last access","","","","","","","","","Number of free blocks available to non-privileged process","Total number of free blocks","A file system-specific preferred I/O block size for this …","Size in blocks","Total number of blocks on file system in units of <code>frsize</code>","","","","","","","","","","","","","","","","","File system block size","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new INode in the directory","Create a new INode in the directory, with a data field for …","Time of last change","","Device ID","Downcast the INode to specific struct","End virtual address","","","","","","Total number of free file serial numbers","Total number of file serial numbers","Find the INode <code>name</code> in the directory","Flags","","","","","","","","","","","","","","","","","","","","","Fundamental file system block size","Get the file system of the INode","Get the name of directory entry","Get the name of directory entry with metadata","","Group ID","","Get the file system information","Inode number","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Control device","Create a hard link <code>name</code> to <code>other</code>","Get all directory entries as a Vec","Lookup path from current INode, and do not follow symlinks","Lookup path from current INode, and follow symlinks at …","","Get metadata of the INode","Map files or devices into memory","Permission","Move INode <code>self/old_name</code> to <code>target/new_name</code>. If <code>target</code> …","Time of last modification","Maximum filename length","","","Number of hard links","","Offset from the file in bytes","","","","","","","","","","","","","","","","","","Poll the events, return a bitmap of events.","Access permissions","Raw device id e.g. /dev/null: makedev(0x1, 0x3)","","","Read bytes at <code>offset</code> into <code>buf</code>, return the number of bytes …","Resize the file","Get the root INode of the file system","","","","","","","","","","","","","","","","","","Set metadata of the INode","Size in bytes","Start virtual address","Sync all data to the storage","Sync all data and metadata","Sync data (not include metadata)","","","","","","","","","","","","","","","","","","","","","Type of file","","","","","","","","","User ID","Delete a hard link <code>name</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Write bytes at <code>offset</code> from <code>buf</code>, return the number of bytes …","structure specifies the access permissions on the …","A System V semaphore set","Semaphore table in a process","semid data structure","shared memory buffer and data","shared memory Identifier for process","Shared_memory table in a process","shmid data structure","pad1","pad2","Sequence number","Insert the <code>array</code> and return its ID","Insert the <code>SharedGuard</code> and return its ID","Add an undo operation","Shared memory address","","","","","","","","","","","","","","","","","Last attach time","set last attach time","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Effective GID of creator","","","","","","","","","","","","","","","","","","","","","","","","","","","","","PID of creator","set last change time","set last change time","Last change time","Last change time","Effective UID of creator","","","set last detach time","","Last detach time","","","","","","","","","","","Get an semaphore set by <code>id</code>","Get an semaphore set by <code>id</code>","get id from virtaddr","Get the semaphore array with <code>key</code>. If not exist, create a …","Effective GID of owner","Shared memory buffer and data","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Key supplied to semget(2)","PID of last shmat(2)/shmdt(2)","Permissions","number of current attaches","Get or create a ShmGuard","number of semaphores in set","set last semop time","Last semop time","","","","","","","","","","","","","","","","","Ownership and permissions","Ownership and permissions","Pop Shared Area","remove semaphores","remove Shared memory","Remove an <code>array</code> by ID","","","","","","","","","","","","","","","","","Size of segment (bytes)","semid data structure","for IPC_SET see man semctl(2)","for IPC_SET see man shmctl(2)","Used to set Virtual Addr","set the shared memory address on attach","shared memory buffer","shared memory data","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Effective UID of owner","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Linux ELF Program Loader.","","","","","","","","","","","","","","","load a Linux ElfFile and return a tuple of (entry,sp)","","","root inode of LinuxElfLoader","","","stack page number","syscall entry","","","","","","","","missing documentation","missing documentation","missing documentation","missing documentation","missing documentation","missing documentation","missing documentation","missing documentation","missing documentation","missing documentation","missing documentation","missing documentation","missing documentation","missing documentation","Common methods that a socket must have","missing documentation","missing documentation","missing documentation","missing documentation","missing documentation","missing documentation","","","","","","","","","","missing documentation","","","","","","","","","","","","","","","","","","","","","","missing documentation","missing documentation","missing documentation","","","","","","","Safety","missing documentation","","","","","","","","","","","","","","","","missing documentation","missing documentation","missing documentation","missing documentation","missing documentation","","","","","","","missing documentation","missing documentation","!!!! need riscv rng","missing documentation","missing documentation","","","","","","","missing documentation","missing documentation","missing documentation","missing documentation","","","","","","","","","","","","","missing documentation","","","","","","","","","","","","","missing documentation","","","","","Address families","missing documentation","The broadcast address.","Internet IP Protocol","An internetworking address.","An IPv4 address.","A four-octet IPv4 address.","All multicast-capable routers","All multicast-capable nodes","Netlink","Packet family","missing documentation","missing documentation","missing documentation","missing documentation","missing documentation","missing documentation","An unspecified address.","Unix domain sockets","missing documentation","Unspecified","An unspecified address. May be used as a placeholder for …","missing documentation","missing documentation","missing documentation","missing documentation","missing documentation","missing documentation","missing documentation","missing documentation","missing documentation","missing documentation","","","","","","","","","","","","","","","","","","","","","Return an address as a sequence of octets, in big-endian.","Return an IPv4 address as a sequence of octets, in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","missing documentation","","","","","","missing documentation","missing documentation","","","","","","","","","","","","","","","","","","","Construct an IPv4 address from a sequence of octets, in …","Parse a string representation of an IP address.","Parse a string representation of an IPv4 address.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Query whether the address is the broadcast address.","Query whether the address is the broadcast address.","Query whether the address falls into the “link-local” …","Query whether the address falls into the “loopback” …","Query whether the address is a valid multicast address.","Query whether the address is a multicast address.","Query whether the address is a valid unicast address.","Query whether the address is an unicast address.","Query whether the address falls into the “unspecified” …","Query whether the address falls into the “unspecified” …","","","","Construct an IPv4 address from parts.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","missing documentation","missing documentation","missing documentation","missing documentation","missing documentation","missing documentation","missing documentation","missing documentation","missing documentation","missing documentation","missing documentation","missing documentation","missing documentation","missing documentation","","","","If <code>self</code> is a CIDR-compatible subnet mask, return …","","","Return an unspecified address that has the same IP version …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create an address wrapping an IPv4 address with the given …","","","","","","","","","","","","","","","","","","","","","Safety","","","missing documentation","","","","","","","","","","","connect","missing documentation","","","","","","","","","","","","","missing documentation","","","wait for some event on a file descriptor","read to buffer","missing documentation","","","","","","","","","","","","","write from buffer","missing documentation","missing documentation","","","","","","","","","","","connect","","","","","","","","","","","manipulate file descriptor","","missing documentation","","","wait for some event on a file descriptor","missing documentation","missing documentation","read to buffer","","","","","","","","","","","","","write from buffer","missing documentation","The type of process exit code.","Linux specific process information.","Process extension for linux","resource limit","Add a file to the file descriptor table.","Add a file to the file descriptor table at given <code>fd</code>.","Add a socket to the socket set at given <code>SocketHandle</code>.","","","","","","","","","","","","","Change working directory.","","","","","","","Close file descriptor <code>fd</code>.","Close file descriptor <code>fd</code>.","create Linux process","soft limit","Get current working directory.","","Get execute path.","get and set file limit number","","fork from current linux process","","","Get the <code>File</code> with given <code>fd</code>.","Get the <code>FileLike</code> with given <code>fd</code>.","get all files","Get lowest free fd","get the lowest available fd great than or equal to <code>start</code>.","Get futex object.","Get the <code>Socket</code> with given <code>fd</code>.","","","","","","","","","","","get linux process","Lookup INode from the process.","Lookup INode from the process.","hard limit","Create a new process.","","","","","Get parent process.","Close file that FD_CLOEXEC is set","Get root INode of the process.","","","","","Insert a <code>SemArray</code> and return its ID","Add an undo operation","Get an semaphore set by <code>id</code>","Remove an <code>SemArray</code> by ID","Set execute path.","Set signal action.","Insert the <code>SharedGuard</code> and return its ID","get the ShmIdentifier from shm_identifiers","get ShmId from Virtual Addr","Delete the ShmIdentifier from shm_identifiers","Set Virtual Addr for shared memory","Get signal action.","","","","","","","","","","","","Wait for state changes in a child of the calling process, …","Wait for state changes in a child of the calling process.","","","","","","","","","from kernel","","struct mcontext","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Linux struct sigaction","","A code identifying the cause of the signal.","","Linux struct stack_t","","See musl struct __ucontext","Linux struct sigset_t","","","from user","","","Returns the set containing all flags.","Returns the set containing all flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","","","","","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","","","","","Signal Frame info","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Removes the specified flags in-place.","Removes the specified flags in-place.","","","call sys_sigreturn","point to ret_code","","","","","","","","","","","","","","","","","","","","","","","","","","","","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","","","","","","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","adapt interface, a little bit waste","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Process: child process is Quit","File: is closed","File: has error","event bus Event flags","event bus struct","handler of event in the event bus","Process: is Quit","File: is readable","Process: received signal","Semaphore: can acquired a resource of this semaphore","Semaphore: is removed","A counting, blocking, semaphore.","An RAII guard which will release a resource acquired from …","File: is writeable","Acquires a resource of this semaphore, returning an RAII …","Acquires a resource of this semaphore, blocking the …","Returns the set containing all flags.","","","","","","","","","","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","change event flag","","","","","","","","","clear all event flag","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","Returns an empty set of flags.","","","","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","Get the current count","get the callback vector length","","Get the current eventbus callback length","Get the current pid","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","Creates a new semaphore with the initial count specified.","create an event bus","Returns the complement of this set of flags.","","","","","","","","","","Release a resource from this semaphore.","Set the semaphore in removed statue","Removes the specified flags in-place.","","","","","","","","","Set the current count","Inserts or removes the specified flags depending on the …","set event flag","Set the current pid","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","push a EventHandler into the callback vector","Returns the symmetric difference between the flags in <code>self</code> …","","Toggles the specified flags in-place.","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","wait for a event async","","","","","","","","","CurrentThread extension for linux","Linux specific thread information.","Thread extension for linux","","","","","","","","","create linux thread","exit linux thread","","","","","","","lock and get Linux thread","","","","","Set pointer to thread ID.","signal alternate stack","Signal mask","","","","","","","","RUsage for sys_getrusage() ignore other fields for now","TimeSpec struct for clock_gettime, similar to Timespec","TimeVal struct for gettimeofday","Tms for times()","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","create TimeSpec","create TimeVal","nano seconds","","","","","","","","","","","","","","","","","seconds","seconds","system CPU time used","system time of children","user time of children","system time","user time","to msec","to msec","","","","","","","","","","","","","","","","","","","","","","","","update TimeSpec for a file inode TODO: more precise; …","microsecond","user CPU time used","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,3,4,2,4,0,0,0,0,2,0,0,2,2,0,0,0,4,2,2,5,2,5,2,4,6,7,8,3,5,2,4,6,7,8,3,6,9,5,6,5,2,4,6,7,8,3,2,2,2,2,2,2,2,5,2,4,6,7,8,3,5,2,4,6,7,8,3,5,2,4,6,7,8,3,5,2,4,6,7,8,3,5,2,4,6,7,8,3,2,6,3,2,6,3,2,2,3,2,2,6,0,7,8,2,9,9,9,9,9,6,9,5,2,2,3,2,9,5,5,2,2,2,2,2,4,3,5,2,4,6,7,8,3,3,3,2,2,2,2,2,3,9,5,2,3,5,5,2,2,2,5,2,4,6,7,8,3,5,2,4,6,7,8,3,5,2,4,6,7,8,3,5,2,4,6,7,8,3,5,2,4,6,7,8,3,9,5,9,2,2,2,5,5,5,2,3,5,2,2,5,2,4,6,7,8,3,5,2,4,6,7,8,3,2,3,5,9,5,6,0,9,5,10,9,5,6,5,2,2,5,2,4,6,7,8,3,5,2,4,6,7,8,3,5,2,9,5,5,5,5,5,5,5,0,2,2,2,5,5,2,6,3,2,5,2,4,6,7,8,3,3,5,2,4,6,7,8,3,5,2,4,6,7,8,3,5,2,5,2,4,6,7,8,3,5,2,4,6,7,8,3,0,5,2,4,6,7,8,3,5,2,4,6,7,8,3,2,9,5,9,5,6,11,12,13,0,0,0,14,15,16,14,15,16,14,15,16,14,15,16,14,15,16,14,15,16,14,15,16,14,15,16,14,14,15,16,14,15,16,14,15,16,14,15,16,14,15,16,14,15,16,14,15,16,14,15,16,14,15,16,14,14,15,16,16,14,15,16,14,15,16,14,14,15,16,16,14,15,16,14,15,16,14,15,16,14,15,16,14,15,16,14,15,16,14,15,16,14,14,15,16,16,17,18,17,18,17,18,17,17,17,17,18,0,0,0,0,0,0,17,17,17,17,0,0,18,17,17,19,17,17,17,17,19,19,19,0,0,18,18,17,0,17,19,20,21,22,23,18,24,17,19,20,21,22,23,18,24,17,25,25,22,19,20,21,22,23,18,24,17,24,24,22,22,24,19,20,21,22,23,18,24,17,19,20,21,22,23,18,24,17,24,19,20,21,22,23,18,24,17,19,20,21,22,23,18,24,17,19,20,21,22,23,18,24,17,22,23,18,22,23,18,23,25,25,22,20,22,25,21,22,23,18,17,20,24,24,25,21,20,21,22,23,18,24,17,17,19,20,21,22,22,23,23,18,24,17,17,17,24,25,25,25,23,22,23,26,22,19,20,21,22,23,18,24,17,19,20,21,22,23,18,24,17,19,20,21,22,23,18,24,17,19,20,21,22,23,18,24,17,19,20,21,22,23,18,24,17,25,25,25,25,25,0,25,25,22,25,22,24,22,23,22,23,21,19,20,21,22,23,18,24,17,19,20,21,22,23,18,24,17,23,25,21,22,20,25,25,25,26,19,20,21,22,23,18,24,17,19,20,21,22,23,18,24,17,23,25,22,21,26,25,25,22,23,18,17,19,20,21,22,23,18,24,17,19,20,21,22,23,18,24,17,22,19,20,21,22,23,18,24,17,22,25,19,20,21,22,23,18,24,17,19,20,21,22,23,18,24,17,19,20,21,22,23,18,24,17,19,20,21,22,23,18,24,17,20,25,0,0,0,0,0,0,0,0,27,27,27,28,29,28,30,31,32,33,34,30,28,29,27,31,32,33,34,30,28,29,27,34,32,31,32,33,34,30,28,29,27,31,32,33,34,30,28,29,27,31,32,33,34,30,28,29,27,31,32,33,34,30,28,29,27,27,31,32,33,34,30,28,29,27,31,32,33,34,30,28,29,27,33,34,30,28,29,27,33,34,30,28,29,27,34,31,32,33,34,27,28,29,32,28,34,34,27,31,32,33,34,30,28,29,27,28,29,29,31,27,30,31,31,32,33,34,30,28,29,27,31,32,33,34,30,28,29,27,31,32,33,34,30,28,29,27,31,32,33,34,30,28,29,27,31,32,33,34,30,28,29,27,27,34,27,34,30,33,31,33,31,32,33,34,30,28,29,27,31,32,33,34,30,28,29,27,33,34,29,31,32,28,31,32,33,34,30,28,29,27,31,32,33,34,30,28,29,27,34,31,31,32,29,30,32,32,33,34,30,28,29,27,31,32,33,34,30,28,29,27,31,32,33,34,30,28,29,27,31,32,33,34,30,28,29,27,27,31,32,33,34,30,28,29,27,31,32,33,34,30,28,29,27,31,32,33,34,30,28,29,27,31,32,33,34,30,28,29,27,0,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,0,0,0,0,0,0,36,36,0,36,0,0,0,0,0,0,0,0,0,0,37,36,38,39,36,38,39,36,38,39,37,36,38,39,36,38,39,36,38,39,36,38,39,36,38,39,36,38,39,36,38,39,37,37,37,36,38,39,36,38,39,0,38,36,38,39,36,38,39,36,38,39,36,38,39,36,38,39,37,37,39,38,39,36,38,39,36,38,39,37,39,0,37,37,36,38,39,36,38,39,37,37,0,0,36,38,39,36,38,39,36,38,39,36,38,39,0,36,38,39,36,38,39,36,38,39,36,38,39,37,40,41,42,43,0,0,43,44,0,45,0,43,43,44,44,0,0,0,0,0,0,43,44,44,44,45,46,46,46,46,46,47,47,47,47,47,46,48,49,50,51,52,47,44,45,43,46,48,49,50,51,52,47,44,45,43,45,43,46,48,49,50,51,52,47,44,45,43,46,48,49,50,51,52,47,44,45,43,46,48,49,50,51,52,47,44,45,43,46,48,49,50,51,52,47,44,45,43,46,48,49,50,51,52,47,44,45,43,46,48,49,50,51,52,47,44,45,43,44,45,43,44,45,43,44,45,43,52,45,43,44,45,43,46,52,44,45,45,43,43,46,46,48,49,50,51,52,47,44,44,45,45,43,43,45,43,45,43,45,43,46,48,49,50,51,52,47,44,45,43,46,48,49,50,51,52,47,44,45,43,46,48,49,50,51,52,47,44,45,43,46,48,49,50,51,52,47,44,45,43,46,48,49,50,51,52,47,44,45,43,45,43,43,43,45,43,45,43,45,43,44,45,43,43,46,48,49,50,51,52,47,44,45,43,46,48,49,50,51,52,47,44,45,43,44,45,43,46,48,49,50,51,52,47,44,45,43,46,48,49,50,51,52,47,44,45,43,48,48,48,48,50,50,50,50,50,50,50,0,49,49,44,45,43,45,45,43,45,46,48,49,50,51,52,47,44,45,43,46,48,49,50,51,52,47,44,45,43,46,48,49,50,51,52,47,44,45,43,46,48,49,50,51,52,47,44,45,43,46,48,49,50,51,52,47,44,45,43,45,46,48,49,50,51,52,47,44,45,43,46,48,49,50,51,52,47,44,45,43,46,53,54,0,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,0,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,0,0,0,0,57,57,57,57,58,57,58,57,58,57,58,57,58,57,58,57,57,58,57,58,58,58,57,57,59,58,57,58,57,57,58,59,57,58,57,57,57,57,57,57,57,57,58,57,58,57,58,57,58,57,58,59,57,57,58,57,57,58,57,58,57,57,57,57,58,57,58,57,57,57,57,57,57,57,57,57,57,57,57,58,57,58,57,58,57,58,57,58,57,58,0,0,57,58,57,58,60,60,61,61,60,60,0,62,62,62,62,61,60,62,62,62,63,63,63,63,63,63,63,63,63,63,62,63,60,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,60,60,60,64,64,62,61,65,66,67,68,60,62,64,63,69,70,61,71,65,66,67,68,60,62,64,63,69,70,61,71,65,66,67,68,60,62,64,63,69,70,61,71,62,61,62,61,62,61,62,61,62,61,62,61,62,61,65,66,67,68,60,62,64,63,69,70,61,71,65,66,67,68,60,62,64,63,69,70,61,71,65,66,67,68,60,62,64,63,69,70,61,71,65,66,67,68,60,62,64,63,69,70,61,71,65,66,67,68,60,62,64,63,69,70,61,71,65,66,67,68,60,62,64,63,69,70,61,71,65,66,67,68,60,62,64,63,69,70,61,71,62,61,68,62,61,65,62,61,69,64,64,65,66,67,62,71,62,61,64,65,62,61,62,63,61,64,68,62,61,68,66,69,71,65,66,60,62,62,62,62,62,64,63,61,61,61,61,61,71,64,65,66,67,68,60,62,64,63,69,70,61,71,62,61,62,61,62,61,62,61,64,62,61,64,66,62,61,70,65,62,61,65,62,61,62,61,65,66,67,68,60,62,64,63,69,70,61,71,65,66,67,68,60,62,64,63,69,70,61,71,65,66,67,68,60,62,64,63,69,70,61,71,65,66,67,68,60,62,64,63,69,70,61,71,65,66,67,68,60,62,64,63,69,70,61,71,62,61,62,61,63,69,66,62,61,62,61,64,65,66,67,68,60,62,64,63,69,70,61,71,65,66,67,68,60,62,64,63,69,70,61,71,62,61,64,64,64,64,64,64,64,64,64,64,64,64,64,64,65,62,61,65,66,70,70,64,64,64,65,66,67,68,60,62,64,63,69,70,61,71,65,66,67,68,60,62,64,63,69,70,61,71,62,61,69,68,71,71,69,62,61,62,61,62,61,65,66,67,68,60,62,64,63,69,70,61,71,62,61,64,65,66,67,68,60,62,64,63,63,69,70,61,71,65,66,67,68,60,62,64,63,69,70,61,71,65,66,67,68,60,62,64,63,69,70,61,71,70,62,61,65,66,67,68,60,62,64,63,69,70,61,71,65,66,67,68,60,62,64,63,69,70,61,71,65,66,67,68,60,62,64,63,69,70,61,71,65,66,67,68,60,62,64,63,69,70,61,71,72,72,72,0,0,0,72,72,72,72,72,0,0,72,73,73,72,73,74,72,75,73,74,72,75,73,74,72,75,72,72,72,72,72,72,72,73,74,72,75,73,74,72,75,73,74,72,75,75,73,74,72,75,73,74,72,75,75,72,72,72,72,72,72,75,74,72,74,72,72,72,72,72,72,72,72,73,74,72,75,72,72,72,72,73,75,72,73,73,72,72,72,72,73,74,72,75,73,74,72,75,73,74,72,73,74,72,75,73,74,72,75,72,72,72,73,75,72,73,74,72,75,73,74,72,75,72,73,73,72,73,74,72,75,73,74,72,75,73,72,75,73,72,72,75,72,72,72,73,74,72,75,73,74,72,75,73,74,72,75,72,73,74,72,75,73,74,72,75,0,73,74,72,75,73,74,72,75,0,0,0,76,76,76,76,76,76,76,76,77,78,76,76,76,76,76,76,77,76,76,76,76,77,76,76,76,76,76,76,76,76,76,0,0,0,0,79,80,81,82,79,80,81,82,79,80,81,82,79,80,81,82,79,80,81,82,79,80,81,82,79,80,81,82,79,80,81,82,80,81,82,80,81,82,80,81,80,81,82,79,80,81,81,82,79,80,81,82,79,80,81,82,79,80,81,82,79,80,81,82,79,80,81,82,80,81,80,79,80,81,82,79,80,81,82,79,80,81,82,79,80,81,82,80,81,79,82,82,82,82,80,81,80,81,82,79,80,81,82,79,80,81,82,79,80,81,82,79,80,81,82,79,80,81,82,80,81,79,79,80,81,82,79,80,81,82],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["zxerror",4]]],[[]],[[["error",4]]],[[["fserror",4]]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["result",4,[["zxerror",4]]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["signalhandler",6]]],[[]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["pin",3,[["box",3,[["future",8]]]]]],[[],["pin",3,[["box",3,[["future",8]]]]]],[[],["pin",3,[["box",3,[["future",8]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["openflags",3]]],[[]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["openflags",3]],[[],["pipe",3]],[[],["filedesc",3]],[[]],[[]],[[]],[[],["bool",15]],[[["openflags",3]],["ordering",4]],[[["filedesc",3]],["ordering",4]],[[]],[[],["bool",15]],[[]],[[["arc",3,[["filesystem",8]]]],["arc",3,[["inode",8]]]],[[],["arc",3]],[[],["arc",3]],[[]],[[["box",3]],["result",4,[["box",3,[["filelike",8]]],["box",3]]]],[[["arc",3]],["result",4,[["arc",3,[["filelike",8]]],["arc",3]]]],[[],["option",4]],[[["rc",3]],["result",4,[["rc",3,[["filelike",8]]],["rc",3]]]],[[],["option",4]],[[]],[[],["arc",3,[["filelike",8]]]],[[],["arc",3,[["filelike",8]]]],[[]],[[["openflags",3]],["bool",15]],[[["filedesc",3]],["bool",15]],[[["intoiterator",8]]],[[],["openflags",3]],[[],["openflags",3]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[]],[[["i32",15]]],[[["usize",15]],["option",4]],[[["usize",15]]],[[["usize",15]]],[[["intoiterator",8]]],[[],["u64",15]],[[],["u64",15]],[[["usize",15],["usize",15]],["lxresult",6,[["arc",3,[["vmobject",3]]]]]],[[["usize",15],["usize",15]],["lxresult",6,[["arc",3,[["vmobject",3]]]]]],[[]],[[]],[[],["koid",6]],[[],["arc",3,[["inode",8]]]],[[]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["result",4,[["zxerror",4]]]],[[],["result",4,[["zxerror",4]]]],[[],["result",4,[["zxerror",4]]]],[[],["result",4,[["zxerror",4]]]],[[],["result",4,[["zxerror",4]]]],[[],["result",4,[["zxerror",4]]]],[[],["result",4,[["zxerror",4]]]],[[["usize",15],["usize",15],["usize",15],["usize",15]],["lxresult",6,[["usize",15]]]],[[["usize",15],["usize",15],["usize",15],["usize",15]],["lxresult",6,[["usize",15]]]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["str",15],["usize",15]],["lxresult",6,[["arc",3,[["inode",8]]]]]],[[],["lxresult",6,[["metadata",3]]]],[[],["string",3]],[[["openflags",3]],["bool",15]],[[["filedesc",3]],["bool",15]],[[["arc",3,[["inode",8]]],["openflags",3],["string",3]],["arc",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["openflags",3]],["option",4,[["ordering",4]]]],[[["filedesc",3]],["option",4,[["ordering",4]]]],[[],["string",3]],[[],["lxresult",6,[["pollstatus",3]]]],[[],["lxresult",6,[["pollstatus",3]]]],[[],["result",6,[["pollstatus",3]]]],null,[[],["pin",3,[["box",3,[["future",8]]]]]],[[],["pin",3,[["box",3,[["future",8]]]]]],[[],["result",6,[["vec",3,[["u8",15]]]]]],[[["u64",15]],["pin",3,[["box",3,[["future",8]]]]]],[[["u64",15]],["pin",3,[["box",3,[["future",8]]]]]],[[["usize",15]],["result",6,[["usize",15]]]],[[],["lxresult",6,[["string",3]]]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["seekfrom",4]],["lxresult",6,[["u64",15]]]],[[["bool",15]]],[[["openflags",3]],["lxresult",6]],[[["openflags",3]],["lxresult",6]],[[["u64",15]],["lxresult",6]],[[["str",15]]],[[],["signal",3]],[[["signal",3],["signal",3]]],[[["signal",3]]],[[["signal",3]]],[[["str",15]]],[[]],[[]],[[]],[[],["lxresult",6]],[[],["lxresult",6]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["lxresult",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["lxresult",6,[["usize",15]]]],[[],["lxresult",6,[["usize",15]]]],[[["u64",15]],["lxresult",6,[["usize",15]]]],[[["u64",15]],["lxresult",6,[["usize",15]]]],[[["usize",15]],["result",6,[["usize",15]]]],null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["result",4,[["zxerror",4]]]],[[],["result",4,[["zxerror",4]]]],[[],["result",4,[["zxerror",4]]]],[[["usize",15]],["blockcache",3]],[[]],[[["arc",3,[["blockscheme",8]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]],["result",4,[["deverror",3]]]],[[["usize",15]],["result",4,[["usize",15],["deverror",3]]]],[[["usize",15]],["result",6,[["usize",15]]]],[[["usize",15]],["result",4,[["usize",15],["deverror",3]]]],[[["usize",15]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4,[["deverror",3]]]],[[],["result",4,[["deverror",3]]]],[[],["result",6]],[[],["result",4,[["deverror",3]]]],[[],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]],["result",4,[["usize",15],["deverror",3]]]],[[["usize",15]],["result",4,[["deverror",3]]]],[[["usize",15]],["result",6,[["usize",15]]]],[[["usize",15]],["result",4,[["usize",15],["deverror",3]]]],[[["usize",15]],["result",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["metadata",3]],[[],["timespec",3]],[[],["filetype",4]],[[]],[[]],[[]],[[["timespec",3]],["ordering",4]],[[["str",15],["filetype",4],["u32",15]],["result",4,[["arc",3,[["inode",8]]],["fserror",4]]]],[[["str",15],["filetype",4],["u32",15],["usize",15]],["result",4,[["arc",3,[["inode",8]]],["fserror",4]]]],null,[[],["pollstatus",3]],null,[[],["option",4]],null,[[["metadata",3]],["bool",15]],[[["timespec",3]],["bool",15]],[[["filetype",4]],["bool",15]],[[["fserror",4]],["bool",15]],null,null,null,[[["str",15]],["result",4,[["arc",3,[["inode",8]]],["fserror",4]]]],null,[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[["metadata",3]],["metadata",3]],[[["timespec",3]]],[[]],[[]],[[]],[[]],[[["error",3]],["fserror",4]],[[["deverror",3]],["fserror",4]],null,[[],["arc",3,[["filesystem",8]]]],[[["usize",15]],["result",4,[["string",3],["fserror",4]]]],[[["usize",15]],["result",4,[["fserror",4]]]],[[],["u64",15]],null,[[]],[[],["fsinfo",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["result",4,[["zxerror",4]]]],[[],["result",4,[["zxerror",4]]]],[[],["result",4,[["zxerror",4]]]],[[],["result",4,[["zxerror",4]]]],[[],["result",4,[["zxerror",4]]]],[[],["result",4,[["zxerror",4]]]],[[],["result",4,[["zxerror",4]]]],[[],["result",4,[["zxerror",4]]]],[[["u32",15],["usize",15]],["result",4,[["usize",15],["fserror",4]]]],[[["str",15],["arc",3]],["result",4,[["fserror",4]]]],[[],["result",4,[["vec",3,[["string",3],["global",3]]],["fserror",4]]]],[[["str",15]],["result",4,[["arc",3,[["inode",8]]],["fserror",4]]]],[[["str",15],["usize",15]],["result",4,[["arc",3,[["inode",8]]],["fserror",4]]]],[[["usize",15],["usize",15]],["usize",15]],[[],["result",4,[["metadata",3],["fserror",4]]]],[[["mmaparea",3]],["result",4,[["fserror",4]]]],null,[[["str",15],["arc",3],["str",15]],["result",4,[["fserror",4]]]],null,null,[[["metadata",3]],["bool",15]],[[["timespec",3]],["bool",15]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["timespec",3]],["option",4,[["ordering",4]]]],[[],["result",4,[["pollstatus",3],["fserror",4]]]],null,null,null,[[],["result",6,[["vec",3,[["u8",15]]]]]],[[["usize",15]],["result",4,[["usize",15],["fserror",4]]]],[[["usize",15]],["result",4,[["fserror",4]]]],[[],["arc",3,[["inode",8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["metadata",3]],["result",4,[["fserror",4]]]],null,null,[[],["result",4,[["fserror",4]]]],[[],["result",4,[["fserror",4]]]],[[],["result",4,[["fserror",4]]]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[["str",15]],["result",4,[["fserror",4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["usize",15]],["result",4,[["usize",15],["fserror",4]]]],null,null,null,null,null,null,null,null,null,null,null,[[["arc",3,[["semarray",3]]]],["usize",15]],[[["arc",3,[["mutex",6,[["shmguard",3]]]]]],["usize",15]],[[["usize",15],["u16",15],["i16",15]]],null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,[[["u32",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["semidds",3]],[[],["shmidds",3]],[[],["shmidentifier",3]],[[]],[[],["shmproc",3]],[[],["ipcperm",3]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],null,null,null,[[],["semproc",3]],[[],["shmproc",3]],[[["u32",15]]],[[]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]],["option",4,[["arc",3,[["semarray",3]]]]]],[[["usize",15]],["option",4,[["shmidentifier",3]]]],[[["usize",15]],["option",4,[["usize",15]]]],[[["u32",15],["usize",15],["usize",15]],["result",4,[["arc",3],["lxerror",4]]]],null,null,[[["usize",15]],["semaphore",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["result",4,[["zxerror",4]]]],[[],["result",4,[["zxerror",4]]]],[[],["result",4,[["zxerror",4]]]],[[],["result",4,[["zxerror",4]]]],[[],["result",4,[["zxerror",4]]]],[[],["result",4,[["zxerror",4]]]],[[],["result",4,[["zxerror",4]]]],[[],["result",4,[["zxerror",4]]]],null,null,null,null,[[["u32",15],["usize",15],["usize",15],["u32",15]],["result",4,[["arc",3,[["mutex",6,[["shmguard",3]]]]],["lxerror",4]]]],null,[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["usize",15]]],[[]],[[]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["semidds",3]]],[[["shmidds",3]]],[[["usize",15],["shmidentifier",3]]],[[["usize",15]]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["result",4,[["zxerror",4]]]],[[["arc",3],["vec",3,[["string",3]]],["vec",3,[["string",3]]],["string",3]],["lxresult",6]],[[]],[[]],null,[[]],[[]],null,null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["pin",3,[["box",3,[["future",8]]]]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[["endpoint",4]],["sysresult",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["endpoint",4]],[[],["linklevelendpoint",3]],[[],["netlinkendpoint",3]],[[]],[[]],[[]],[[["endpoint",4]],["pin",3,[["box",3,[["future",8]]]]]],[[],["option",4,[["endpoint",4]]]],[[["usize",15],["usize",15]],["sysresult",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["str",15]],null,[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["result",4,[["zxerror",4]]]],[[],["result",4,[["zxerror",4]]]],[[],["result",4,[["zxerror",4]]]],[[["usize",15],["usize",15],["usize",15],["usize",15]],["sysresult",6]],[[],["sysresult",6]],null,[[["usize",15]]],[[["u32",15],["u32",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["u64",15]],[[],["pin",3,[["box",3,[["future",8]]]]]],[[],["option",4,[["endpoint",4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15],["usize",15]],["sysresult",6]],[[],["sysresult",6]],null,null,[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["option",4,[["endpoint",4]]]],["sysresult",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["addressfamily",4]],[[],["address",4]],[[],["address",3]],[[]],[[]],[[]],[[["addressfamily",4]],["ordering",4]],[[["address",4]],["ordering",4]],[[["address",3]],["ordering",4]],null,[[],["address",4]],[[],["address",3]],[[["addressfamily",4]],["bool",15]],[[["address",4]],["bool",15]],[[["address",3]],["bool",15]],null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[["endpoint",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u16",15]]],[[]],[[["address",3]],["address",4]],[[]],[[]],[[],["address",3]],[[["str",15]],["result",4,[["address",4]]]],[[["str",15]],["result",4,[["address",3]]]],[[],["u64",15]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["result",4,[["zxerror",4]]]],[[],["result",4,[["zxerror",4]]]],[[],["result",4,[["zxerror",4]]]],[[],["result",4,[["zxerror",4]]]],[[],["result",4,[["zxerror",4]]]],[[],["result",4,[["zxerror",4]]]],[[],["result",4,[["zxerror",4]]]],[[],["result",4,[["zxerror",4]]]],[[],["result",4,[["zxerror",4]]]],[[],["result",4,[["zxerror",4]]]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["addressfamily",4]],["bool",15]],[[["address",4]],["bool",15]],[[["address",3]],["bool",15]],[[["u8",15],["u8",15],["u8",15],["u8",15]],["address",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["addressfamily",4]],["option",4,[["ordering",4]]]],[[["address",4]],["option",4,[["ordering",4]]]],[[["address",3]],["option",4,[["ordering",4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,[[["sockaddr",19],["usize",15]],["result",4,[["endpoint",4],["lxerror",4]]]],null,null,[[]],[[]],[[]],[[],["option",4,[["u8",15]]]],[[],["string",3]],[[],["string",3]],[[],["address",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u8",15],["u8",15],["u8",15],["u8",15]],["address",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["useroutptr",6,[["sockaddr",19]]],["userinoutptr",6,[["u32",15]]]],["sysresult",6]],null,null,null,[[],["pin",3,[["box",3,[["future",8]]]]]],[[],["any",8]],[[],["any",8]],[[]],[[["endpoint",4]],["sysresult",6]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[["endpoint",4]],["pin",3,[["box",3,[["future",8]]]]]],[[["endpoint",4]]],[[]],[[],["option",4,[["endpoint",4]]]],[[["usize",15],["usize",15]],["sysresult",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["result",4,[["zxerror",4]]]],[[["usize",15],["usize",15],["usize",15],["usize",15]],["sysresult",6]],[[],["sysresult",6]],[[]],[[]],[[]],[[]],[[],["pin",3,[["box",3,[["future",8]]]]]],[[]],[[],["option",4,[["endpoint",4]]]],[[]],[[]],[[["usize",15],["usize",15]],["sysresult",6]],[[],["sysresult",6]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[["option",4,[["endpoint",4]]]],["sysresult",6]],[[["option",4,[["endpoint",4]]]],["sysresult",6]],null,[[],["pin",3,[["box",3,[["future",8]]]]]],[[],["any",8]],[[],["any",8]],[[]],[[["endpoint",4]],["sysresult",6]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[["endpoint",4]],["pin",3,[["box",3,[["future",8]]]]]],[[]],[[],["option",4,[["endpoint",4]]]],[[["usize",15],["usize",15]],["sysresult",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["result",4,[["zxerror",4]]]],[[["usize",15],["usize",15],["usize",15],["usize",15]],["sysresult",6]],[[],["sysresult",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["pin",3,[["box",3,[["future",8]]]]]],[[],["option",4,[["endpoint",4]]]],[[]],[[]],[[["usize",15],["usize",15]],["sysresult",6]],[[],["sysresult",6]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[["option",4,[["endpoint",4]]]],["sysresult",6]],[[["option",4,[["endpoint",4]]]],["sysresult",6]],null,null,null,null,[[["arc",3,[["filelike",8]]]],["lxresult",6,[["filedesc",3]]]],[[["filedesc",3],["arc",3,[["filelike",8]]]],["lxresult",6,[["filedesc",3]]]],[[["arc",3,[["mutex",6,[["socket",8]]]]]],["lxresult",6,[["sockethandle",3]]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15]]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["rlimit",3]],[[]],[[["filedesc",3]],["lxresult",6]],[[["sockethandle",3]],["lxresult",6]],[[["arc",3],["arc",3,[["filesystem",8]]]],["zxresult",6,[["arc",3]]]],null,[[],["string",3]],[[]],[[],["string",3]],[[["option",4,[["rlimit",3]]]],["rlimit",3]],[[["formatter",3]],["result",6]],[[["arc",3],["bool",15]],["zxresult",6,[["arc",3]]]],[[]],[[]],[[["filedesc",3]],["lxresult",6,[["arc",3,[["file",3]]]]]],[[["filedesc",3]],["lxresult",6,[["arc",3,[["filelike",8]]]]]],[[],["lxresult",6,[["hashmap",3,[["filedesc",3],["arc",3,[["filelike",8]]]]]]]],[[],["filedesc",3]],[[["usize",15]],["filedesc",3]],[[["virtaddr",6]],["arc",3,[["futex",3]]]],[[["sockethandle",3]],["lxresult",6,[["arc",3,[["mutex",6,[["socket",8]]]]]]]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["result",4,[["zxerror",4]]]],[[],["result",4,[["zxerror",4]]]],[[],["linuxprocess",3]],[[["str",15]],["lxresult",6,[["arc",3,[["inode",8]]]]]],[[["filedesc",3],["str",15],["bool",15]],["lxresult",6,[["arc",3,[["inode",8]]]]]],null,[[["arc",3,[["filesystem",8]]]]],[[]],[[]],[[]],[[]],[[],["option",4,[["arc",3,[["process",3]]]]]],[[]],[[],["arc",3]],[[]],[[]],[[]],[[]],[[["arc",3,[["semarray",3]]]],["usize",15]],[[["usize",15],["u16",15],["i16",15]]],[[["usize",15]],["option",4,[["arc",3,[["semarray",3]]]]]],[[["usize",15]]],[[["str",15]]],[[["linuxsignal",4],["signalaction",3]]],[[["arc",3,[["mutex",6,[["shmguard",3]]]]]],["usize",15]],[[["usize",15]],["option",4,[["shmidentifier",3]]]],[[["usize",15]],["option",4,[["usize",15]]]],[[["usize",15]]],[[["usize",15],["shmidentifier",3]]],[[["linuxsignal",4]],["signalaction",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[["arc",3],["koid",6],["bool",15]]],[[["arc",3],["bool",15]]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["signalactionflags",3]]],[[["signalstackflags",3]]],[[]],[[]],[[],["usize",15]],[[],["u32",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["sigset",3]],[[],["signalaction",3]],[[],["siginfofields",19]],[[],["siginfo",3]],[[],["signalcode",4]],[[],["signalactionflags",3]],[[],["machinecontext",3]],[[],["signal",4]],[[],["signalusercontext",3]],[[],["signalframe",3]],[[],["signalstackflags",3]],[[],["signalstack",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["signalactionflags",3]],["ordering",4]],[[["signalstackflags",3]],["ordering",4]],null,[[]],[[]],[[["signal",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,null,null,[[],["sigset",3]],[[],["signalaction",3]],[[]],[[],["signalactionflags",3]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[["signalactionflags",3]],["bool",15]],[[["signal",4]],["bool",15]],[[["signalstackflags",3]],["bool",15]],null,null,[[["intoiterator",8]]],[[["intoiterator",8]]],null,null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]],["option",4]],[[["u32",15]],["option",4]],[[["usize",15]]],[[["u32",15]]],[[["usize",15]]],[[["u32",15]]],[[["intoiterator",8]]],[[["intoiterator",8]]],null,[[],["u64",15]],[[],["u64",15]],null,null,[[]],[[]],null,[[["signal",4]]],[[]],[[]],[[["sigset",3]]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["result",4,[["zxerror",4]]]],[[],["result",4,[["zxerror",4]]]],[[],["result",4,[["zxerror",4]]]],[[],["result",4,[["zxerror",4]]]],[[],["result",4,[["zxerror",4]]]],[[],["result",4,[["zxerror",4]]]],[[],["result",4,[["zxerror",4]]]],[[],["result",4,[["zxerror",4]]]],[[],["result",4,[["zxerror",4]]]],[[],["result",4,[["zxerror",4]]]],[[],["result",4,[["zxerror",4]]]],[[],["result",4,[["zxerror",4]]]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,null,[[["signalactionflags",3]],["bool",15]],[[["signalstackflags",3]],["bool",15]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["signalactionflags",3]],["option",4,[["ordering",4]]]],[[["signalstackflags",3]],["option",4,[["ordering",4]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["signal",4]]],[[]],[[]],[[["sigset",3]]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["bool",15]]],[[["bool",15]]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["u8",15]],["result",4,[["u8",15]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[["event",3]]],[[]],[[],["u32",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["event",3],["event",3]]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[["event",3]]],[[],["event",3]],[[]],[[["event",3]],["ordering",4]],[[]],[[],["bool",15]],[[],["event",3]],[[],["eventbus",3]],[[]],[[]],[[]],[[]],[[["event",3]],["bool",15]],[[["intoiterator",8]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["u32",15]],["option",4]],[[["u32",15]]],[[["u32",15]]],[[["intoiterator",8]]],[[],["isize",15]],[[],["usize",15]],[[],["u64",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["result",4,[["zxerror",4]]]],[[],["result",4,[["zxerror",4]]]],[[],["result",4,[["zxerror",4]]]],[[],["result",4,[["zxerror",4]]]],[[],["bool",15]],[[],["bool",15]],[[["event",3]],["bool",15]],[[["isize",15]],["semaphore",3]],[[],["arc",3,[["mutex",6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["event",3]],["option",4,[["ordering",4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["isize",15]]],[[["bool",15]]],[[["event",3]]],[[["usize",15]]],[[]],[[]],[[["eventhandler",6]]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["arc",3,[["mutex",6,[["eventbus",3]]]]],["event",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[["arc",3]],["zxresult",6,[["arc",3]]]],[[["i32",15]]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["result",4,[["zxerror",4]]]],[[],["mutexguard",3,[["linuxthread",3]]]],[[]],[[]],[[]],[[]],[[["useroutptr",6,[["i32",15]]]]],null,null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["timespec",3]],[[],["timeval",3]],[[],["tms",3]],[[]],[[]],[[]],[[],["timespec",3]],[[],["timeval",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["timespec",3]]],[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["result",4,[["zxerror",4]]]],[[],["result",4,[["zxerror",4]]]],[[],["result",4,[["zxerror",4]]]],[[],["result",4,[["zxerror",4]]]],[[],["timespec",3]],[[],["timeval",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["arc",3]]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[4,"LxError"],[3,"OpenFlags"],[3,"FileDesc"],[4,"SeekFrom"],[3,"File"],[3,"Pipe"],[3,"STDIN"],[3,"STDOUT"],[8,"FileLike"],[8,"INodeExt"],[13,"Start"],[13,"End"],[13,"Current"],[3,"BlockCache"],[3,"MemBuf"],[3,"Block"],[4,"FsError"],[4,"FileType"],[4,"IOCTLError"],[3,"PollStatus"],[3,"MMapArea"],[3,"Metadata"],[3,"Timespec"],[3,"FsInfo"],[8,"INode"],[8,"FileSystem"],[3,"IpcPerm"],[3,"SemProc"],[3,"ShmProc"],[3,"ShmIdentifier"],[3,"SemArray"],[3,"ShmGuard"],[3,"SemidDs"],[3,"ShmidDs"],[3,"LinuxElfLoader"],[4,"Endpoint"],[8,"Socket"],[3,"LinkLevelEndpoint"],[3,"NetlinkEndpoint"],[13,"Ip"],[13,"LinkLevel"],[13,"Netlink"],[3,"Ipv4Address"],[4,"AddressFamily"],[4,"IpAddress"],[19,"SockAddr"],[3,"ArpReq"],[3,"SockAddrIn"],[3,"SockAddrUn"],[3,"SockAddrLl"],[3,"SockAddrNl"],[3,"SockAddrPlaceholder"],[13,"Unknown"],[13,"Ipv4"],[3,"TcpSocketState"],[3,"UdpSocketState"],[3,"LinuxProcess"],[3,"RLimit"],[8,"ProcessExt"],[4,"SignalCode"],[3,"SignalStackFlags"],[3,"SignalActionFlags"],[4,"Signal"],[3,"MachineContext"],[3,"Sigset"],[3,"SignalAction"],[19,"SiginfoFields"],[3,"SigInfo"],[3,"SignalUserContext"],[3,"SignalFrame"],[3,"SignalStack"],[3,"Event"],[3,"Semaphore"],[3,"SemaphoreGuard"],[3,"EventBus"],[3,"LinuxThread"],[8,"ThreadExt"],[8,"CurrentThreadExt"],[3,"RUsage"],[3,"TimeSpec"],[3,"TimeVal"],[3,"Tms"]]},\
"linux_syscall":{"doc":"Linux syscall implementations","t":[3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11],"n":["Syscall","as_any","as_any_mut","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","from","into","into_any","into_any_arc","into_any_rc","into_in_userptr","into_inout_userptr","into_out_userptr","into_result","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","sys_accept","sys_access","sys_arch_prctl","sys_bind","sys_chdir","sys_clock_gettime","sys_clone","sys_close","sys_connect","sys_copy_file_range","sys_dup","sys_dup2","sys_execve","sys_exit","sys_exit_group","sys_faccessat","sys_fcntl","sys_fdatasync","sys_flock","sys_fork","sys_fstat","sys_fstatat","sys_fsync","sys_ftruncate","sys_futex","sys_getcwd","sys_getdents64","sys_getpeername","sys_getpid","sys_getppid","sys_getrandom","sys_getrusage","sys_getsockname","sys_gettid","sys_gettimeofday","sys_ioctl","sys_link","sys_linkat","sys_listen","sys_lseek","sys_lstat","sys_mkdir","sys_mkdirat","sys_mmap","sys_mprotect","sys_munmap","sys_nanosleep","sys_open","sys_openat","sys_pipe","sys_pipe2","sys_poll","sys_ppoll","sys_pread","sys_prlimit64","sys_pselect6","sys_pwrite","sys_read","sys_readlink","sys_readlinkat","sys_readv","sys_recvfrom","sys_rename","sys_renameat","sys_rmdir","sys_rt_sigaction","sys_rt_sigprocmask","sys_select","sys_semctl","sys_semget","sys_semop","sys_sendfile","sys_sendto","sys_set_tid_address","sys_setsockopt","sys_shmat","sys_shmctl","sys_shmdt","sys_shmget","sys_shutdown","sys_sigaltstack","sys_socket","sys_stat","sys_sync","sys_sysinfo","sys_time","sys_times","sys_truncate","sys_uname","sys_unlink","sys_unlinkat","sys_utimensat","sys_vfork","sys_wait4","sys_write","sys_writev","syscall","syscall_entry","thread","thread_fn","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","wrapping_as","wrapping_cast_from"],"q":["linux_syscall","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The struct of Syscall which stores the information about …","","","","","","","","","","","","","","convert a usize num to in userptr","convert a usize num to in and out userptr","convert a usize num to out userptr","","","","","","net accept","Checks whether the calling process can access the file …","set architecture-specific thread state for x86_64 currently","net bind","Change the current directory.","finds the resolution (precision) of the specified clock …","Create a new thread in the current process. The new thread…","Closes a file descriptor, so that it no longer refers to …","net sys_connect","copies data between one file descriptor and anothe, read …","create a copy of the file descriptor fd, and uses the …","create a copy of the file descriptor oldfd.","Replaces the current ** process ** with a new process image","Exit the current thread","Exit the current thread group (i.e. process)","Check user’s permissions of a file relative to a …","Manipulate a file descriptor.","is similar to fsync(), but does not flush modified …","apply or remove an advisory lock on an open file TODO: …","Fork the current process. Return the child’s PID.","Works exactly like the stat syscall except a file …","get file status relative to a directory file descriptor","transfers (“flushes”) all modified in-core data of …","cause the regular file referenced by fd to be truncated to …","provides a method for waiting until a certain condition …","return a null-terminated string containing an absolute …","get directory entries TODO: get ino from dirent","net getpeername","Get the current process ID.","Get the parent process ID.","fills the buffer pointed to by <code>buf</code> with up to <code>buflen</code> …","get resource usage currently only support ru_utime and …","net getsocknames","Get the current thread ID.","get the time with second and microseconds","Set parameters of device files.","creates a new link (also known as a hard link) to an …","create file link relative to directory file descriptors If …","net listen","repositions the offset of the open file associated with …","Works exactly like the stat syscall, but if the file in …","Make a directory.","create directory relative to directory file descriptor","creates a new mapping in the virtual address space of the …","changes the access protections for the calling process’s …","Deletes the mappings for the specified address range, and …","Allows the calling thread to sleep for an interval …","Opens or creates a file, depending on the flags passed to …","open file relative to directory file descriptor","Creates a pipe, a unidirectional data channel that can be …","Creates a pipe, a unidirectional data channel that can be …","Wait for some event on a file descriptor","Wait for some event on a file descriptor","read from or write to a file descriptor at a given offset …","Combines and extends the functionality of setrlimit() and …","similar to select, but have sigmask argument","writes up to count bytes from the buffer starting at buf …","Reads from a specified file using a file descriptor. …","read value of symbolic link","read value of symbolic link relative to directory file …","works just like read except that multiple buffers are …","net setsockopt","change name/location of file","rename file relative to directory file descriptors","Remove a directory.","Used to change the action taken by a process on receipt of …","Used to fetch and/or change the signal mask of the calling …","allow a program to monitor multiple file descriptors, …","semaphore control operations","returns the semaphore set identifier associated with the …","semaphore operations","copies data between one file descriptor and another.","net setsockopt","set pointer to thread ID returns the caller’s thread ID","net setsockopt","attaches the shared memory segment identified by shmid to …","shared memory control","detaches the shared memory segment located at the address …","allocates a shared memory segment","net shutdown","Allows a process to define a new alternate signal stack …","net socket","Returns information about a file in a structure named stat.","causes all buffered modifications to file metadata and …","provides a simple way of getting overall system statistics","get time in seconds","stores the current process times in the struct tms that …","cause the regular file named by path to be truncated to a …","get name and information about current kernel","delete name/possibly file it refers to If that name was …","remove directory entry relative to directory file …","change file timestamps with nanosecond precision","creates a child process of the calling process, similar to …","Wait for a child process exited.","Writes to a specified file using a file descriptor. Before …","works just like write except that multiple buffers are …","syscall entry function","the entry of current syscall","the thread making a syscall","new thread function","","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["usize",15]],["pagingresult",6,[["userinptr",6]]]],[[["usize",15]],["pagingresult",6,[["userinoutptr",6]]]],[[["usize",15]],["pagingresult",6,[["useroutptr",6]]]],[[],["result",4,[["zxerror",4]]]],[[]],[[]],[[]],[[]],[[["usize",15],["useroutptr",6,[["sockaddr",19]]],["userinoutptr",6,[["u32",15]]]]],[[["userinptr",6,[["u8",15]]],["usize",15]],["sysresult",6]],[[["i32",15],["usize",15]],["sysresult",6]],[[["usize",15],["userinptr",6,[["sockaddr",19]]],["usize",15]],["sysresult",6]],[[["userinptr",6,[["u8",15]]]],["sysresult",6]],[[["usize",15],["useroutptr",6,[["timespec",3]]]],["sysresult",6]],[[["usize",15],["usize",15],["useroutptr",6,[["i32",15]]],["useroutptr",6,[["i32",15]]],["usize",15]],["sysresult",6]],[[["filedesc",3]],["sysresult",6]],[[["usize",15],["userinptr",6,[["sockaddr",19]]],["usize",15]]],[[["filedesc",3],["userinoutptr",6,[["u64",15]]],["filedesc",3],["userinoutptr",6,[["u64",15]]],["usize",15],["usize",15]]],[[["filedesc",3]],["sysresult",6]],[[["filedesc",3],["filedesc",3]],["sysresult",6]],[[["userinptr",6,[["u8",15]]],["userinptr",6,[["userinptr",6,[["u8",15]]]]],["userinptr",6,[["userinptr",6,[["u8",15]]]]]],["sysresult",6]],[[["i32",15]],["sysresult",6]],[[["i32",15]],["sysresult",6]],[[["filedesc",3],["userinptr",6,[["u8",15]]],["usize",15],["usize",15]],["sysresult",6]],[[["filedesc",3],["usize",15],["usize",15]],["sysresult",6]],[[["filedesc",3]],["sysresult",6]],[[["filedesc",3],["usize",15]],["sysresult",6]],[[],["sysresult",6]],[[["filedesc",3],["useroutptr",6,[["stat",3]]]],["sysresult",6]],[[["filedesc",3],["userinptr",6,[["u8",15]]],["useroutptr",6,[["stat",3]]],["usize",15]],["sysresult",6]],[[["filedesc",3]],["sysresult",6]],[[["filedesc",3],["usize",15]],["sysresult",6]],[[["usize",15],["u32",15],["i32",15],["usize",15]]],[[["useroutptr",6,[["u8",15]]],["usize",15]],["sysresult",6]],[[["filedesc",3],["useroutptr",6,[["u8",15]]],["usize",15]],["sysresult",6]],[[["usize",15],["useroutptr",6,[["sockaddr",19]]],["userinoutptr",6,[["u32",15]]]],["sysresult",6]],[[],["sysresult",6]],[[],["sysresult",6]],[[["useroutptr",6,[["u8",15]]],["usize",15],["u32",15]],["sysresult",6]],[[["usize",15],["useroutptr",6,[["rusage",3]]]],["sysresult",6]],[[["usize",15],["useroutptr",6,[["sockaddr",19]]],["userinoutptr",6,[["u32",15]]]],["sysresult",6]],[[],["sysresult",6]],[[["useroutptr",6,[["timeval",3]]],["userinptr",6,[["u8",15]]]],["sysresult",6]],[[["filedesc",3],["usize",15],["usize",15],["usize",15],["usize",15]],["sysresult",6]],[[["userinptr",6,[["u8",15]]],["userinptr",6,[["u8",15]]]],["sysresult",6]],[[["filedesc",3],["userinptr",6,[["u8",15]]],["filedesc",3],["userinptr",6,[["u8",15]]],["usize",15]],["sysresult",6]],[[["usize",15],["usize",15]],["sysresult",6]],[[["filedesc",3],["i64",15],["u8",15]],["sysresult",6]],[[["userinptr",6,[["u8",15]]],["useroutptr",6,[["stat",3]]]],["sysresult",6]],[[["userinptr",6,[["u8",15]]],["usize",15]],["sysresult",6]],[[["filedesc",3],["userinptr",6,[["u8",15]]],["usize",15]],["sysresult",6]],[[["usize",15],["usize",15],["usize",15],["usize",15],["filedesc",3],["u64",15]]],[[["usize",15],["usize",15],["usize",15]],["sysresult",6]],[[["usize",15],["usize",15]],["sysresult",6]],[[["userinptr",6,[["timespec",3]]]]],[[["userinptr",6,[["u8",15]]],["usize",15],["usize",15]],["sysresult",6]],[[["filedesc",3],["userinptr",6,[["u8",15]]],["usize",15],["usize",15]],["sysresult",6]],[[["useroutptr",6]],["sysresult",6]],[[["useroutptr",6],["usize",15]],["sysresult",6]],[[["userinoutptr",6,[["pollfd",3]]],["usize",15],["isize",15]]],[[["userinoutptr",6,[["pollfd",3]]],["usize",15],["userinptr",6,[["timespec",3]]]]],[[["filedesc",3],["useroutptr",6,[["u8",15]]],["usize",15],["u64",15]]],[[["usize",15],["usize",15],["userinptr",6,[["rlimit",3]]],["useroutptr",6,[["rlimit",3]]]],["sysresult",6]],[[["usize",15],["userinoutptr",6,[["u32",15]]],["userinoutptr",6,[["u32",15]]],["userinoutptr",6,[["u32",15]]],["userinptr",6,[["timeval",3]]],["usize",15]]],[[["filedesc",3],["userinptr",6,[["u8",15]]],["usize",15],["u64",15]],["sysresult",6]],[[["filedesc",3],["useroutptr",6,[["u8",15]]],["usize",15]]],[[["userinptr",6,[["u8",15]]],["useroutptr",6,[["u8",15]]],["usize",15]],["sysresult",6]],[[["filedesc",3],["userinptr",6,[["u8",15]]],["useroutptr",6,[["u8",15]]],["usize",15]],["sysresult",6]],[[["filedesc",3],["userinptr",6,[["iovecout",6]]],["usize",15]]],[[["usize",15],["useroutptr",6,[["u8",15]]],["usize",15],["usize",15],["useroutptr",6,[["sockaddr",19]]],["userinoutptr",6,[["u32",15]]]]],[[["userinptr",6,[["u8",15]]],["userinptr",6,[["u8",15]]]],["sysresult",6]],[[["filedesc",3],["userinptr",6,[["u8",15]]],["filedesc",3],["userinptr",6,[["u8",15]]]],["sysresult",6]],[[["userinptr",6,[["u8",15]]]],["sysresult",6]],[[["usize",15],["userinptr",6,[["signalaction",3]]],["useroutptr",6,[["signalaction",3]]],["usize",15]],["sysresult",6]],[[["i32",15],["userinptr",6,[["sigset",3]]],["useroutptr",6,[["sigset",3]]],["usize",15]],["sysresult",6]],[[["usize",15],["userinoutptr",6,[["u32",15]]],["userinoutptr",6,[["u32",15]]],["userinoutptr",6,[["u32",15]]],["userinptr",6,[["timeval",3]]]]],[[["usize",15],["usize",15],["usize",15],["usize",15]],["sysresult",6]],[[["usize",15],["usize",15],["usize",15]],["sysresult",6]],[[["usize",15],["userinptr",6,[["sembuf",3]]],["usize",15]]],[[["filedesc",3],["filedesc",3],["userinoutptr",6,[["u64",15]]],["usize",15]]],[[["usize",15],["userinptr",6,[["u8",15]]],["usize",15],["usize",15],["userinptr",6,[["sockaddr",19]]],["usize",15]],["sysresult",6]],[[["useroutptr",6,[["i32",15]]]],["sysresult",6]],[[["usize",15],["usize",15],["usize",15],["userinptr",6,[["u8",15]]],["usize",15]],["sysresult",6]],[[["usize",15],["virtaddr",6],["usize",15]],["sysresult",6]],[[["usize",15],["usize",15],["usize",15]],["sysresult",6]],[[["usize",15],["virtaddr",6],["usize",15]],["sysresult",6]],[[["usize",15],["usize",15],["usize",15]],["sysresult",6]],[[["usize",15],["usize",15]],["sysresult",6]],[[["userinptr",6,[["signalstack",3]]],["useroutptr",6,[["signalstack",3]]]],["sysresult",6]],[[["usize",15],["usize",15],["usize",15]],["sysresult",6]],[[["userinptr",6,[["u8",15]]],["useroutptr",6,[["stat",3]]]],["sysresult",6]],[[],["sysresult",6]],[[["useroutptr",6,[["sysinfo",3]]]],["sysresult",6]],[[["useroutptr",6,[["u64",15]]]],["sysresult",6]],[[["useroutptr",6,[["tms",3]]]],["sysresult",6]],[[["userinptr",6,[["u8",15]]],["usize",15]],["sysresult",6]],[[["useroutptr",6,[["u8",15]]]],["sysresult",6]],[[["userinptr",6,[["u8",15]]]],["sysresult",6]],[[["filedesc",3],["userinptr",6,[["u8",15]]],["usize",15]],["sysresult",6]],[[["filedesc",3],["userinptr",6,[["u8",15]]],["userinoutptr",6],["usize",15]],["sysresult",6]],[[]],[[["i32",15],["useroutptr",6,[["i32",15]]],["u32",15]]],[[["filedesc",3],["userinptr",6,[["u8",15]]],["usize",15]],["sysresult",6]],[[["filedesc",3],["userinptr",6,[["iovecin",6]]],["usize",15]],["sysresult",6]],[[["u32",15]]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]]],"p":[[3,"Syscall"]]},\
"zcore_drivers":{"doc":"","t":[13,13,13,4,4,6,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,0,11,11,0,0,0,0,11,11,11,11,0,11,11,11,11,0,11,11,11,11,11,11,11,0,11,11,11,11,0,0,11,11,11,11,12,12,12,12,12,12,3,8,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,18,18,3,3,3,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,8,3,3,3,16,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,18,8,3,3,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,5,11,11,0,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,4,4,3,13,13,13,13,13,3,3,3,4,13,6,4,4,13,13,13,13,13,13,13,13,13,13,13,3,13,13,13,3,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,3,3,12,12,12,12,8,8,16,8,8,8,8,8,8,8,10,11,11,11,11,11,11,10,11,11,10,11,11,10,10,10,11,10,11,11,10,10,11,11,11,11,11,11,10,11,11,10,10,10,11,11,10,10,10,10,10,10,10,10,10,10,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,6,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,12,5,5,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["AlreadyExists","Block","BufferTooSmall","Device","DeviceError","DeviceResult","Display","DmaError","Input","InvalidParam","IoError","Irq","Net","NoResources","NotReady","NotSupported","Uart","az","az","borrow","borrow","borrow_mut","borrow_mut","builder","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clone","clone_into","display","fmt","fmt","from","from","from","from","inner","input","into","into","io","irq","mock","net","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","prelude","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","scheme","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","uart","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","utils","virtio","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","0","0","0","0","0","0","DevicetreeDriverBuilder","IoMapper","az","borrow","borrow_mut","build","cast_from","checked_as","checked_cast_from","from","into","new","overflowing_as","overflowing_cast_from","query_or_map","saturating_as","saturating_cast_from","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","wrapping_as","wrapping_cast_from","UefiDisplay","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","fb","from","info","into","name","new","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","wrapping_as","wrapping_cast_from","ALWAYS_ONE","LEFT_BTN","MIDDLE_BTN","Mouse","MouseFlags","MouseState","RIGHT_BTN","X_SIGN","Y_SIGN","all","as_ps2_buf","az","az","az","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","buttons","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","cmp","compatible_with","complement","contains","default","default","difference","dx","dy","dz","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","input_event_codes","insert","intersection","intersects","into","into","into","is_all","is_empty","ne","new","not","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","remove","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","set","sub","sub_assign","subscribe","symmetric_difference","to_owned","to_owned","toggle","trigger","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","union","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","abs","ev","input_prop","key","led","msc","rel","rep","snd","sw","syn","ABS_BRAKE","ABS_CNT","ABS_DISTANCE","ABS_GAS","ABS_HAT0X","ABS_HAT0Y","ABS_HAT1X","ABS_HAT1Y","ABS_HAT2X","ABS_HAT2Y","ABS_HAT3X","ABS_HAT3Y","ABS_MAX","ABS_MISC","ABS_MT_BLOB_ID","ABS_MT_DISTANCE","ABS_MT_ORIENTATION","ABS_MT_POSITION_X","ABS_MT_POSITION_Y","ABS_MT_PRESSURE","ABS_MT_SLOT","ABS_MT_TOOL_TYPE","ABS_MT_TOOL_X","ABS_MT_TOOL_Y","ABS_MT_TOUCH_MAJOR","ABS_MT_TOUCH_MINOR","ABS_MT_TRACKING_ID","ABS_MT_WIDTH_MAJOR","ABS_MT_WIDTH_MINOR","ABS_PRESSURE","ABS_RESERVED","ABS_RUDDER","ABS_RX","ABS_RY","ABS_RZ","ABS_THROTTLE","ABS_TILT_X","ABS_TILT_Y","ABS_TOOL_WIDTH","ABS_VOLUME","ABS_WHEEL","ABS_X","ABS_Y","ABS_Z","EV_ABS","EV_CNT","EV_FF","EV_FF_STATUS","EV_KEY","EV_LED","EV_MAX","EV_MSC","EV_PWR","EV_REL","EV_REP","EV_SND","EV_SW","EV_SYN","INPUT_PROP_ACCELEROMETER","INPUT_PROP_BUTTONPAD","INPUT_PROP_CNT","INPUT_PROP_DIRECT","INPUT_PROP_MAX","INPUT_PROP_POINTER","INPUT_PROP_POINTING_STICK","INPUT_PROP_SEMI_MT","INPUT_PROP_TOPBUTTONPAD","BTN_0","BTN_1","BTN_2","BTN_3","BTN_4","BTN_5","BTN_6","BTN_7","BTN_8","BTN_9","BTN_A","BTN_B","BTN_BACK","BTN_BASE","BTN_BASE2","BTN_BASE3","BTN_BASE4","BTN_BASE5","BTN_BASE6","BTN_C","BTN_DEAD","BTN_DIGI","BTN_DPAD_DOWN","BTN_DPAD_LEFT","BTN_DPAD_RIGHT","BTN_DPAD_UP","BTN_EAST","BTN_EXTRA","BTN_FORWARD","BTN_GAMEPAD","BTN_GEAR_DOWN","BTN_GEAR_UP","BTN_JOYSTICK","BTN_LEFT","BTN_MIDDLE","BTN_MISC","BTN_MODE","BTN_MOUSE","BTN_NORTH","BTN_PINKIE","BTN_RIGHT","BTN_SELECT","BTN_SIDE","BTN_SOUTH","BTN_START","BTN_STYLUS","BTN_STYLUS2","BTN_STYLUS3","BTN_TASK","BTN_THUMB","BTN_THUMB2","BTN_THUMBL","BTN_THUMBR","BTN_TL","BTN_TL2","BTN_TOOL_AIRBRUSH","BTN_TOOL_BRUSH","BTN_TOOL_DOUBLETAP","BTN_TOOL_FINGER","BTN_TOOL_LENS","BTN_TOOL_MOUSE","BTN_TOOL_PEN","BTN_TOOL_PENCIL","BTN_TOOL_QUADTAP","BTN_TOOL_QUINTTAP","BTN_TOOL_RUBBER","BTN_TOOL_TRIPLETAP","BTN_TOP","BTN_TOP2","BTN_TOUCH","BTN_TR","BTN_TR2","BTN_TRIGGER","BTN_TRIGGER_HAPPY","BTN_TRIGGER_HAPPY1","BTN_TRIGGER_HAPPY10","BTN_TRIGGER_HAPPY11","BTN_TRIGGER_HAPPY12","BTN_TRIGGER_HAPPY13","BTN_TRIGGER_HAPPY14","BTN_TRIGGER_HAPPY15","BTN_TRIGGER_HAPPY16","BTN_TRIGGER_HAPPY17","BTN_TRIGGER_HAPPY18","BTN_TRIGGER_HAPPY19","BTN_TRIGGER_HAPPY2","BTN_TRIGGER_HAPPY20","BTN_TRIGGER_HAPPY21","BTN_TRIGGER_HAPPY22","BTN_TRIGGER_HAPPY23","BTN_TRIGGER_HAPPY24","BTN_TRIGGER_HAPPY25","BTN_TRIGGER_HAPPY26","BTN_TRIGGER_HAPPY27","BTN_TRIGGER_HAPPY28","BTN_TRIGGER_HAPPY29","BTN_TRIGGER_HAPPY3","BTN_TRIGGER_HAPPY30","BTN_TRIGGER_HAPPY31","BTN_TRIGGER_HAPPY32","BTN_TRIGGER_HAPPY33","BTN_TRIGGER_HAPPY34","BTN_TRIGGER_HAPPY35","BTN_TRIGGER_HAPPY36","BTN_TRIGGER_HAPPY37","BTN_TRIGGER_HAPPY38","BTN_TRIGGER_HAPPY39","BTN_TRIGGER_HAPPY4","BTN_TRIGGER_HAPPY40","BTN_TRIGGER_HAPPY5","BTN_TRIGGER_HAPPY6","BTN_TRIGGER_HAPPY7","BTN_TRIGGER_HAPPY8","BTN_TRIGGER_HAPPY9","BTN_WEST","BTN_WHEEL","BTN_X","BTN_Y","BTN_Z","KEY_0","KEY_1","KEY_102ND","KEY_10CHANNELSDOWN","KEY_10CHANNELSUP","KEY_2","KEY_3","KEY_3D_MODE","KEY_4","KEY_5","KEY_6","KEY_7","KEY_8","KEY_9","KEY_A","KEY_AB","KEY_ADDRESSBOOK","KEY_AGAIN","KEY_ALS_TOGGLE","KEY_ALTERASE","KEY_ANGLE","KEY_APOSTROPHE","KEY_APPSELECT","KEY_ARCHIVE","KEY_ASPECT_RATIO","KEY_ASSISTANT","KEY_ATTENDANT_OFF","KEY_ATTENDANT_ON","KEY_ATTENDANT_TOGGLE","KEY_AUDIO","KEY_AUDIO_DESC","KEY_AUX","KEY_B","KEY_BACK","KEY_BACKSLASH","KEY_BACKSPACE","KEY_BASSBOOST","KEY_BATTERY","KEY_BLUE","KEY_BLUETOOTH","KEY_BOOKMARKS","KEY_BREAK","KEY_BRIGHTNESSDOWN","KEY_BRIGHTNESSUP","KEY_BRIGHTNESS_AUTO","KEY_BRIGHTNESS_CYCLE","KEY_BRIGHTNESS_MAX","KEY_BRIGHTNESS_MIN","KEY_BRIGHTNESS_TOGGLE","KEY_BRIGHTNESS_ZERO","KEY_BRL_DOT1","KEY_BRL_DOT10","KEY_BRL_DOT2","KEY_BRL_DOT3","KEY_BRL_DOT4","KEY_BRL_DOT5","KEY_BRL_DOT6","KEY_BRL_DOT7","KEY_BRL_DOT8","KEY_BRL_DOT9","KEY_BUTTONCONFIG","KEY_C","KEY_CALC","KEY_CALENDAR","KEY_CAMERA","KEY_CAMERA_DOWN","KEY_CAMERA_FOCUS","KEY_CAMERA_LEFT","KEY_CAMERA_RIGHT","KEY_CAMERA_UP","KEY_CAMERA_ZOOMIN","KEY_CAMERA_ZOOMOUT","KEY_CANCEL","KEY_CAPSLOCK","KEY_CD","KEY_CHANNEL","KEY_CHANNELDOWN","KEY_CHANNELUP","KEY_CHAT","KEY_CLEAR","KEY_CLOSE","KEY_CLOSECD","KEY_CNT","KEY_COFFEE","KEY_COMMA","KEY_COMPOSE","KEY_COMPUTER","KEY_CONFIG","KEY_CONNECT","KEY_CONTEXT_MENU","KEY_CONTROLPANEL","KEY_COPY","KEY_CUT","KEY_CYCLEWINDOWS","KEY_D","KEY_DASHBOARD","KEY_DATA","KEY_DATABASE","KEY_DELETE","KEY_DELETEFILE","KEY_DEL_EOL","KEY_DEL_EOS","KEY_DEL_LINE","KEY_DIGITS","KEY_DIRECTION","KEY_DIRECTORY","KEY_DISPLAYTOGGLE","KEY_DISPLAY_OFF","KEY_DOCUMENTS","KEY_DOLLAR","KEY_DOT","KEY_DOWN","KEY_DVD","KEY_E","KEY_EDIT","KEY_EDITOR","KEY_EJECTCD","KEY_EJECTCLOSECD","KEY_EMAIL","KEY_END","KEY_ENTER","KEY_EPG","KEY_EQUAL","KEY_ESC","KEY_EURO","KEY_EXIT","KEY_F","KEY_F1","KEY_F10","KEY_F11","KEY_F12","KEY_F13","KEY_F14","KEY_F15","KEY_F16","KEY_F17","KEY_F18","KEY_F19","KEY_F2","KEY_F20","KEY_F21","KEY_F22","KEY_F23","KEY_F24","KEY_F3","KEY_F4","KEY_F5","KEY_F6","KEY_F7","KEY_F8","KEY_F9","KEY_FASTFORWARD","KEY_FASTREVERSE","KEY_FAVORITES","KEY_FILE","KEY_FINANCE","KEY_FIND","KEY_FIRST","KEY_FN","KEY_FN_1","KEY_FN_2","KEY_FN_B","KEY_FN_D","KEY_FN_E","KEY_FN_ESC","KEY_FN_F","KEY_FN_F1","KEY_FN_F10","KEY_FN_F11","KEY_FN_F12","KEY_FN_F2","KEY_FN_F3","KEY_FN_F4","KEY_FN_F5","KEY_FN_F6","KEY_FN_F7","KEY_FN_F8","KEY_FN_F9","KEY_FN_S","KEY_FORWARD","KEY_FORWARDMAIL","KEY_FRAMEBACK","KEY_FRAMEFORWARD","KEY_FRONT","KEY_FULL_SCREEN","KEY_G","KEY_GAMES","KEY_GOTO","KEY_GRAPHICSEDITOR","KEY_GRAVE","KEY_GREEN","KEY_H","KEY_HANGEUL","KEY_HANGUEL","KEY_HANJA","KEY_HELP","KEY_HENKAN","KEY_HIRAGANA","KEY_HOME","KEY_HOMEPAGE","KEY_HP","KEY_I","KEY_IMAGES","KEY_INFO","KEY_INSERT","KEY_INS_LINE","KEY_ISO","KEY_J","KEY_JOURNAL","KEY_K","KEY_KATAKANA","KEY_KATAKANAHIRAGANA","KEY_KBDILLUMDOWN","KEY_KBDILLUMTOGGLE","KEY_KBDILLUMUP","KEY_KBDINPUTASSIST_ACCEPT","KEY_KBDINPUTASSIST_CANCEL","KEY_KBDINPUTASSIST_NEXT","KEY_KBDINPUTASSIST_NEXTGROUP","KEY_KBDINPUTASSIST_PREV","KEY_KBDINPUTASSIST_PREVGROUP","KEY_KEYBOARD","KEY_KP0","KEY_KP1","KEY_KP2","KEY_KP3","KEY_KP4","KEY_KP5","KEY_KP6","KEY_KP7","KEY_KP8","KEY_KP9","KEY_KPASTERISK","KEY_KPCOMMA","KEY_KPDOT","KEY_KPENTER","KEY_KPEQUAL","KEY_KPJPCOMMA","KEY_KPLEFTPAREN","KEY_KPMINUS","KEY_KPPLUS","KEY_KPPLUSMINUS","KEY_KPRIGHTPAREN","KEY_KPSLASH","KEY_L","KEY_LANGUAGE","KEY_LAST","KEY_LEFT","KEY_LEFTALT","KEY_LEFTBRACE","KEY_LEFTCTRL","KEY_LEFTMETA","KEY_LEFTSHIFT","KEY_LEFT_DOWN","KEY_LEFT_UP","KEY_LIGHTS_TOGGLE","KEY_LINEFEED","KEY_LIST","KEY_LOGOFF","KEY_M","KEY_MACRO","KEY_MAIL","KEY_MAX","KEY_MEDIA","KEY_MEDIA_REPEAT","KEY_MEDIA_TOP_MENU","KEY_MEMO","KEY_MENU","KEY_MESSENGER","KEY_MHP","KEY_MICMUTE","KEY_MINUS","KEY_MIN_INTERESTING","KEY_MODE","KEY_MOVE","KEY_MP3","KEY_MSDOS","KEY_MUHENKAN","KEY_MUTE","KEY_N","KEY_NEW","KEY_NEWS","KEY_NEXT","KEY_NEXTSONG","KEY_NEXT_FAVORITE","KEY_NUMERIC_0","KEY_NUMERIC_1","KEY_NUMERIC_11","KEY_NUMERIC_12","KEY_NUMERIC_2","KEY_NUMERIC_3","KEY_NUMERIC_4","KEY_NUMERIC_5","KEY_NUMERIC_6","KEY_NUMERIC_7","KEY_NUMERIC_8","KEY_NUMERIC_9","KEY_NUMERIC_A","KEY_NUMERIC_B","KEY_NUMERIC_C","KEY_NUMERIC_D","KEY_NUMERIC_POUND","KEY_NUMERIC_STAR","KEY_NUMLOCK","KEY_O","KEY_OK","KEY_ONSCREEN_KEYBOARD","KEY_OPEN","KEY_OPTION","KEY_P","KEY_PAGEDOWN","KEY_PAGEUP","KEY_PASTE","KEY_PAUSE","KEY_PAUSECD","KEY_PAUSE_RECORD","KEY_PC","KEY_PHONE","KEY_PLAY","KEY_PLAYCD","KEY_PLAYER","KEY_PLAYPAUSE","KEY_POWER","KEY_POWER2","KEY_PRESENTATION","KEY_PREVIOUS","KEY_PREVIOUSSONG","KEY_PRINT","KEY_PROG1","KEY_PROG2","KEY_PROG3","KEY_PROG4","KEY_PROGRAM","KEY_PROPS","KEY_PVR","KEY_Q","KEY_QUESTION","KEY_R","KEY_RADIO","KEY_RECORD","KEY_RED","KEY_REDO","KEY_REFRESH","KEY_REPLY","KEY_RESERVED","KEY_RESTART","KEY_REWIND","KEY_RFKILL","KEY_RIGHT","KEY_RIGHTALT","KEY_RIGHTBRACE","KEY_RIGHTCTRL","KEY_RIGHTMETA","KEY_RIGHTSHIFT","KEY_RIGHT_DOWN","KEY_RIGHT_UP","KEY_RO","KEY_ROOT_MENU","KEY_ROTATE_DISPLAY","KEY_ROTATE_LOCK_TOGGLE","KEY_S","KEY_SAT","KEY_SAT2","KEY_SAVE","KEY_SCALE","KEY_SCREEN","KEY_SCREENLOCK","KEY_SCREENSAVER","KEY_SCROLLDOWN","KEY_SCROLLLOCK","KEY_SCROLLUP","KEY_SEARCH","KEY_SELECT","KEY_SEMICOLON","KEY_SEND","KEY_SENDFILE","KEY_SETUP","KEY_SHOP","KEY_SHUFFLE","KEY_SLASH","KEY_SLEEP","KEY_SLOW","KEY_SLOWREVERSE","KEY_SOUND","KEY_SPACE","KEY_SPELLCHECK","KEY_SPORT","KEY_SPREADSHEET","KEY_STOP","KEY_STOPCD","KEY_STOP_RECORD","KEY_SUBTITLE","KEY_SUSPEND","KEY_SWITCHVIDEOMODE","KEY_SYSRQ","KEY_T","KEY_TAB","KEY_TAPE","KEY_TASKMANAGER","KEY_TEEN","KEY_TEXT","KEY_TIME","KEY_TITLE","KEY_TOUCHPAD_OFF","KEY_TOUCHPAD_ON","KEY_TOUCHPAD_TOGGLE","KEY_TUNER","KEY_TV","KEY_TV2","KEY_TWEN","KEY_U","KEY_UNDO","KEY_UNKNOWN","KEY_UNMUTE","KEY_UP","KEY_UWB","KEY_V","KEY_VCR","KEY_VCR2","KEY_VENDOR","KEY_VIDEO","KEY_VIDEOPHONE","KEY_VIDEO_NEXT","KEY_VIDEO_PREV","KEY_VOD","KEY_VOICECOMMAND","KEY_VOICEMAIL","KEY_VOLUMEDOWN","KEY_VOLUMEUP","KEY_W","KEY_WAKEUP","KEY_WIMAX","KEY_WLAN","KEY_WORDPROCESSOR","KEY_WPS_BUTTON","KEY_WWAN","KEY_WWW","KEY_X","KEY_XFER","KEY_Y","KEY_YELLOW","KEY_YEN","KEY_Z","KEY_ZENKAKUHANKAKU","KEY_ZOOM","KEY_ZOOMIN","KEY_ZOOMOUT","KEY_ZOOMRESET","LED_CAPSL","LED_CHARGING","LED_CNT","LED_COMPOSE","LED_KANA","LED_MAIL","LED_MAX","LED_MISC","LED_MUTE","LED_NUML","LED_SCROLLL","LED_SLEEP","LED_SUSPEND","MSC_CNT","MSC_GESTURE","MSC_MAX","MSC_PULSELED","MSC_RAW","MSC_SCAN","MSC_SERIAL","MSC_TIMESTAMP","REL_CNT","REL_DIAL","REL_HWHEEL","REL_HWHEEL_HI_RES","REL_MAX","REL_MISC","REL_RESERVED","REL_RX","REL_RY","REL_RZ","REL_WHEEL","REL_WHEEL_HI_RES","REL_X","REL_Y","REL_Z","REP_CNT","REP_DELAY","REP_MAX","REP_PERIOD","SND_BELL","SND_CLICK","SND_CNT","SND_MAX","SND_TONE","SW_CAMERA_LENS_COVER","SW_CNT","SW_DOCK","SW_FRONT_PROXIMITY","SW_HEADPHONE_INSERT","SW_JACK_PHYSICAL_INSERT","SW_KEYPAD_SLIDE","SW_LID","SW_LINEIN_INSERT","SW_LINEOUT_INSERT","SW_MAX","SW_MICROPHONE_INSERT","SW_MUTE_DEVICE","SW_PEN_INSERTED","SW_RADIO","SW_RFKILL_ALL","SW_ROTATE_LOCK","SW_TABLET_MODE","SW_VIDEOOUT_INSERT","SYN_CNT","SYN_CONFIG","SYN_DROPPED","SYN_MAX","SYN_MT_REPORT","SYN_REPORT","Io","Mmio","Pio","ReadOnly","Value","WriteOnly","add","az","az","az","az","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone_into","from","from","from","from","from_base","from_base_as","into","into","into","into","new","new","new","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","read","read","read","read","read","read","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","write","write","write","write","write","write","x86","Apic","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","configure","from","handle_irq","init_local_apic_ap","init_local_apic_bsp","into","is_valid_irq","local_apic","mask","msi_alloc_block","msi_free_block","msi_register_handler","name","new","overflowing_as","overflowing_cast_from","register_handler","register_local_apic_handler","saturating_as","saturating_cast_from","try_from","try_into","type_id","unmask","unregister","unwrapped_as","unwrapped_cast_from","upcast","wrapping_as","wrapping_cast_from","display","graphic","input","uart","MockDisplay","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","fb","from","from_raw_parts","info","into","name","new","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","wrapping_as","wrapping_cast_from","sdl","SdlWindow","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","flush","from","handle_events","into","is_quit","new","overflowing_as","overflowing_cast_from","register_keyboard","register_mouse","saturating_as","saturating_cast_from","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","wrapping_as","wrapping_cast_from","MockKeyboard","MockMouse","az","az","borrow","borrow","borrow_mut","borrow_mut","capability","capability","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","default","default","from","from","into","into","name","name","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","subscribe","subscribe","trigger","trigger","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","MockUart","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","default","from","handle_irq","into","name","new","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","send","start_irq_service","subscribe","trigger","try_from","try_into","try_recv","type_id","unwrapped_as","unwrapped_cast_from","upcast","wrapping_as","wrapping_cast_from","write_str","PAGE_SIZE","PAGE_SIZE","Provider","ProviderImpl","SOCKETS","alloc_dma","alloc_dma","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","dealloc_dma","dealloc_dma","deref","from","from","get_sockets","into","into","loopback","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","phys_to_virt","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","virt_to_phys","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","LoopbackInterface","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clone","clone_into","from","get_ifname","get_ip_addrrs","get_mac","handle_irq","iface","into","name","name","overflowing_as","overflowing_cast_from","poll","recv","saturating_as","saturating_cast_from","send","to_owned","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","wrapping_as","wrapping_cast_from","ARGB8888","AbsAxis","AbsAxis","ActiveHigh","ActiveLow","CapabilityType","ColorFormat","DisplayInfo","Edge","Event","FeedBack","FeedBack","FeedBackStatus","FrameBuffer","InputCapability","InputEvent","InputEventType","InputProp","IrqHandler","IrqPolarity","IrqTriggerMode","Key","Key","Led","Led","Level","Misc","Misc","Power","RGB332","RGB565","RGB888","Rectangle","RelAxis","RelAxis","Repeat","RgbColor","Sound","Sound","Switch","Switch","Syn","az","az","az","az","az","az","az","az","az","az","az","b","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code","contains","contains_all","depth","deref","deref_mut","empty","eq","eq","event_type","fb_base_vaddr","fb_size","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","from","from","from","from","from","from","from","from","from","from","from","from_bitmap","from_raw_parts_mut","from_slice","g","height","height","input","into","into","into","into","into","into","into","into","into","into","into","ne","new","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","pitch","r","raw_value","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","set","set_all","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","value","width","width","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","write_color","x","y","Mouse","MouseFlags","MouseState","buttons","dx","dy","dz","BlockScheme","DisplayScheme","Event","EventScheme","InputScheme","IrqScheme","NetScheme","Scheme","SchemeUpcast","UartScheme","capability","clear","clear","configure","configure","draw_pixel","draw_pixel","fb","fill_rect","fill_rect","flush","flush","flush","get_ifname","get_ip_addrrs","get_mac","handle_irq","info","init_hart","init_hart","is_valid_irq","mask","msi_alloc_block","msi_alloc_block","msi_free_block","msi_free_block","msi_register_handler","msi_register_handler","name","need_flush","need_flush","poll","read_block","recv","register_device","register_device","register_handler","send","send","subscribe","trigger","try_recv","unmask","unregister","upcast","write_block","write_str","write_str","BufferedUart","Uart16550Mmio","Uart16550Pio","az","az","az","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","from","from","from","handle_irq","handle_irq","handle_irq","into","into","into","name","name","name","new","new","new","new","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","send","send","send","subscribe","subscribe","subscribe","trigger","trigger","trigger","try_from","try_from","try_from","try_into","try_into","try_into","try_recv","try_recv","try_recv","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","write_str","write_str","write_str","EventHandler","EventListener","GraphicConsole","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","default","deref","deref_mut","devicetree","from","from","into","into","new","new","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","subscribe","trigger","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","Devicetree","InheritProps","InterruptsProp","Node","StringList","az","az","az","az","bootargs","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","children","clone","clone_into","contains","default","eq","find","fmt","fmt","fmt","from","from","from","from","from","has_prop","initrd_region","interrupt_parent","into","into","into","into","iter","memory_regions","name","ne","new","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","parent_address_cells","parent_size_cells","parse_interrupts","parse_reg","prop_cells","prop_raw","prop_str","prop_str_list","prop_u32","prop_u64","prop_usize","props","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","store","timebase_frequency","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","walk","walk","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","VirtIoBlk","VirtIoConsole","VirtIoGpu","VirtIoInput","az","az","az","az","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capability","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","fb","flush","flush","from","from","from","from","handle_irq","handle_irq","handle_irq","handle_irq","info","into","into","into","into","name","name","name","name","need_flush","new","new","new","new","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","read_block","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","send","subscribe","subscribe","trigger","trigger","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_recv","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","write_block","write_str"],"q":["zcore_drivers","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","zcore_drivers::Device","","","","","","zcore_drivers::builder","","","","","","","","","","","","","","","","","","","","","","","","zcore_drivers::display","","","","","","","","","","","","","","","","","","","","","","","","","zcore_drivers::input","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","zcore_drivers::input::input_event_codes","","","","","","","","","","","zcore_drivers::input::input_event_codes::abs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","zcore_drivers::input::input_event_codes::ev","","","","","","","","","","","","","","zcore_drivers::input::input_event_codes::input_prop","","","","","","","","","zcore_drivers::input::input_event_codes::keyzcore_drivers::input::input_event_codes::led","","","","","","","","","","","","","zcore_drivers::input::input_event_codes::msc","","","","","","","","zcore_drivers::input::input_event_codes::rel","","","","","","","","","","","","","","","zcore_drivers::input::input_event_codes::rep","","","","zcore_drivers::input::input_event_codes::snd","","","","","zcore_drivers::input::input_event_codes::sw","","","","","","","","","","","","","","","","","","","zcore_drivers::input::input_event_codes::syn","","","","","","zcore_drivers::io","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","zcore_drivers::irq","zcore_drivers::irq::x86","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","zcore_drivers::mock","","","","zcore_drivers::mock::display","","","","","","","","","","","","","","","","","","","","","","","","","","zcore_drivers::mock::graphic","zcore_drivers::mock::graphic::sdl","","","","","","","","","","","","","","","","","","","","","","","","","","zcore_drivers::mock::input","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","zcore_drivers::mock::uart","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","zcore_drivers::net","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","zcore_drivers::net::loopback","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","zcore_drivers::preludezcore_drivers::prelude::input","","","","","","","zcore_drivers::scheme","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","zcore_drivers::uart","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","zcore_drivers::utils","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","zcore_drivers::utils::devicetree","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","zcore_drivers::virtio","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A resource with the specified identifier already exists.","","The buffer is too small.","","","","","Failed to alloc DMA memory.","","Invalid parameter.","I/O Error","","","No resource to allocate.","The device is not ready.","The device driver is not implemented, supported, or …","","","","","","","","Various builders to probe devices and create corresponding …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>Scheme</code> describe some functions must be implemented for …","","","","","","","","","","","","","","","","","","","","","","","","","A builder to probe devices and create drivers from device …","A trait implemented in kernel to translate device physical …","","","","Parse the device tree from root, and returns an array of …","","","","","","Prepare to parse DTB from the given virtual address.","","","Translate the device physical address to virtual address. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether or not the packet is valid or not.","Whether or not the left mouse button is pressed.","Whether or not the middle mouse button is pressed.","","","","Whether or not the right mouse button is pressed.","Whether or not the x delta is negative.","Whether or not the y delta is negative.","Returns the set containing all flags.","","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","","","Returns an empty set of flags.","","","","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","Linux input event codes.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","","Returns the complement of this set of flags.","","","","","","","","Removes the specified flags in-place.","","","","","","","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","","Returns the symmetric difference between the flags in <code>self</code> …","","","Toggles the specified flags in-place.","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","","Absolute axes","Event types","Device properties and quirks","Keys and buttons","LEDs","Misc events","Relative axes","Autorepeat values","Sounds","Switch events","Synchronization events","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","has accelerometer","has button(s) under pad","","direct input devices","","needs a pointer","is a pointing stick","touch rectangle only","softbuttons at top of pad","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generic PIO","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Safety","Safety","","","","","","","Create a PIO from a given port","","","","","","","","","","","","Read","Read","Read","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Write","Write","Write","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Safety","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Page size (usually 4K)","External functions that drivers must use","","","Allocate consequent physical memory for DMA. Return (…","","","","","","","","","","","","","","Deallocate DMA","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Used to describe absolute axis value changes, e.g. …","","","","","Color format for one pixel. <code>RGB888</code> means R in bits 16-23, …","","","","Used to send force feedback commands to an input device.","","Used to receive force feedback device status.","","","","Linux input event codes.","","","","","Used to describe state changes of keyboards, buttons, or …","","Used to turn LEDs on devices on and off.","","","Used to describe miscellaneous input data that do not fit …","","A special type for power button and switch input.","","","","","Used to describe relative axis value changes, e.g. moving …","","Used for autorepeating devices.","","Used to output sound to devices.","","Used to describe binary state input switches.","","Used as markers to separate events. Events may be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Number of bytes per pixel.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Number of bits per pixel.","","","","","","","frame buffer base virtual address","frame buffer size","","","","","","","","","","","color encoding format of RGBA","","","","","","","","","","","","","Safety","","","","visible height","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Number of bytes between each row of the frame buffer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","visible width","","","","","","","","","","","","","","","","","","","","","","","Safety","","","","","","","","","","","","","","","","","","","","Returns the capability bitmap of the specific kind of …","Clear the screen with <code>color</code>.","Clear the screen with <code>color</code>.","Configure the specified interrupt vector. If it is …","Configure the specified interrupt vector. If it is …","Write pixel color.","Write pixel color.","Returns the framebuffer.","Fill a given rectangle with <code>color</code>.","Fill a given rectangle with <code>color</code>.","","Flush framebuffer to screen.","Flush framebuffer to screen.","","","","","","Init irq for current cpu. Some IRQ hardware requires …","Init irq for current cpu. Some IRQ hardware requires …","Is a valid IRQ number.","Disable IRQ.","Method used for platform allocation of blocks of MSI and …","Method used for platform allocation of blocks of MSI and …","Method used to free a block of MSI IRQs previously …","Method used to free a block of MSI IRQs previously …","Register a handler function for a given msi_id within an …","Register a handler function for a given msi_id within an …","","Whether need to flush the frambuffer to screen.","Whether need to flush the frambuffer to screen.","","","","Register the device to delivery an IRQ.","Register the device to delivery an IRQ.","Add an interrupt handler to an IRQ.","","","Subscribe events, call the <code>handler</code> when an input event …","Trigger the event manually and call its handler …","","Enable IRQ.","Remove the interrupt handler to an IRQ.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Safety","Safety","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A wrapper structure of <code>device_tree::DeviceTree</code>.","Some properties inherited from ancestor nodes.","A unified representation of the <code>interrupts</code> and …","A single node in the device tree.","","","","","","Returns the <code>bootargs</code> property in the <code>/chosen</code> node, as the …","","","","","","","","","","","","","","","","","","","","","Child nodes of this node.","","","","","","","","","","","","","Load the device tree blob from the given virtual address.","","","Returns the <code>linux,initrd-start</code> and <code>linux,initrd-end</code> …","The <code>interrupt-parent</code> property of the node. If don’t …","","","","","","Returns the physical memory regions specified in the …","The name of the node, as it appears in the node path.","","","","","","","","","","","The <code>#address-cells</code> property of its parent node.","The <code>#size-cells</code> property of its parent node.","Returns a <code>Vec&lt;u32&gt;</code> according to the <code>interrupts</code> or …","Parse the <code>reg</code> property, about <code>reg</code>: …","","","","","","","","A list of node properties, <code>(key, value)</code>.","","","","","","","","","","Returns the <code>timebase-frequency</code> property in the <code>/cpus</code> node, …","","","","","","","","","","","","","","","","","","","","","","","Traverse the tree from root by DFS, collect necessary …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,2,1,0,0,0,2,1,2,1,1,2,2,1,1,1,2,1,2,1,2,1,2,0,1,2,1,2,1,2,2,2,0,1,2,1,1,1,2,2,0,1,2,0,0,0,0,1,2,1,2,0,1,2,1,2,0,2,1,2,1,2,1,2,0,1,2,1,2,0,0,1,2,1,2,3,4,5,6,7,8,0,0,9,9,9,9,9,9,9,9,9,9,9,9,10,9,9,9,9,9,9,9,9,9,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,0,0,0,12,12,12,12,13,14,12,13,12,12,12,12,12,12,12,14,12,13,14,12,13,13,14,12,13,14,12,13,14,12,13,12,13,12,13,12,14,12,12,12,13,12,13,13,13,12,12,12,12,12,12,12,12,13,14,12,13,12,12,12,12,12,0,12,12,12,14,12,13,12,12,12,14,12,14,12,13,14,12,13,12,12,14,12,13,14,12,13,12,12,12,14,12,12,13,12,14,14,12,13,14,12,13,14,12,13,12,14,12,13,14,12,13,14,12,13,14,12,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,0,16,16,17,18,19,16,17,18,19,16,17,18,19,16,17,18,19,16,17,18,19,16,17,18,19,19,19,16,17,18,19,16,16,16,17,18,19,17,18,19,16,17,18,19,16,17,18,19,15,16,17,19,19,19,16,17,18,19,16,17,18,19,19,16,17,18,19,16,17,18,19,16,17,18,19,16,17,18,19,16,17,18,19,16,17,18,19,16,17,18,19,15,16,18,19,19,19,0,0,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,0,0,0,0,0,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,0,0,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,0,0,23,24,23,24,23,24,23,24,23,24,23,24,23,24,23,24,23,24,23,24,23,24,23,24,23,24,23,24,23,24,23,24,23,24,23,24,23,24,23,24,23,24,23,24,23,24,23,24,23,24,0,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,0,26,0,0,0,26,27,27,28,27,28,27,28,27,28,27,28,27,28,26,27,28,27,28,0,27,28,0,27,28,27,28,0,27,28,27,28,27,28,27,28,27,28,27,28,27,28,0,27,28,27,28,0,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,30,31,32,33,33,0,0,0,34,32,31,32,31,0,0,0,0,32,0,0,0,31,32,31,32,34,31,32,31,30,30,30,0,31,32,31,0,31,32,31,32,31,35,36,37,30,38,39,31,40,32,34,33,37,35,36,37,30,38,39,31,40,32,34,33,35,36,37,30,38,39,31,40,32,34,33,30,35,36,37,30,38,39,31,40,32,34,33,35,36,37,30,38,39,31,40,32,34,33,35,36,37,30,38,39,31,40,32,34,33,37,30,39,31,40,32,37,30,39,31,40,32,40,36,36,30,35,35,36,37,30,40,39,39,36,37,30,38,39,31,40,32,34,33,39,35,36,37,30,38,39,31,40,32,34,33,36,35,35,37,38,39,0,35,36,37,30,38,39,31,40,32,34,33,37,37,35,36,37,30,38,39,31,40,32,34,33,35,36,37,30,38,39,31,40,32,34,33,39,37,37,35,36,37,30,38,39,31,40,32,34,33,35,36,37,30,38,39,31,40,32,34,33,36,36,37,30,39,31,40,32,35,36,37,30,38,39,31,31,40,32,34,33,35,36,37,30,38,39,31,40,32,34,33,35,36,37,30,38,39,31,40,32,34,33,35,36,37,30,38,39,31,40,32,34,33,35,36,37,30,38,39,31,40,32,34,33,40,38,39,35,36,37,30,38,39,31,40,32,34,33,35,36,37,30,38,39,31,40,32,34,33,35,38,38,0,0,0,13,13,13,13,0,0,41,0,0,0,0,0,0,0,42,43,43,44,44,43,43,43,43,43,45,43,43,46,46,46,47,43,44,44,44,44,44,44,44,44,44,44,47,43,43,46,45,46,44,44,44,46,48,41,41,48,44,44,49,45,48,48,0,0,0,50,51,52,50,51,52,50,51,52,50,51,52,50,51,52,50,51,52,50,51,52,50,51,52,50,51,52,50,51,52,50,51,51,52,50,51,52,50,51,52,50,51,52,50,51,52,50,51,52,50,51,52,50,51,52,50,51,52,50,51,52,50,51,52,50,51,52,50,51,52,50,51,52,50,51,52,50,51,52,50,51,52,50,51,52,0,0,0,53,54,53,54,53,54,53,54,53,54,53,54,53,54,54,0,53,54,53,54,53,54,53,54,53,54,53,54,53,54,53,53,53,54,53,54,53,54,53,54,53,54,53,54,53,54,0,0,0,0,0,55,56,57,58,57,55,56,57,58,55,56,57,58,55,56,57,58,55,56,57,58,55,56,57,58,56,58,58,55,58,56,56,55,56,58,55,56,57,57,58,56,57,58,55,56,57,58,55,57,56,56,55,55,56,57,58,55,56,57,58,58,58,0,0,56,56,56,56,56,56,56,56,55,56,57,58,55,56,57,58,56,57,58,55,56,57,58,55,56,57,58,55,56,57,58,55,56,57,58,55,56,57,58,56,57,55,56,57,58,55,56,57,58,0,0,0,0,59,60,61,62,59,60,61,62,59,60,61,62,62,59,60,61,62,59,60,61,62,59,60,61,62,61,59,61,59,60,61,62,59,60,61,62,61,59,60,61,62,59,60,61,62,61,59,60,61,62,59,60,61,62,59,60,61,62,59,59,60,61,62,59,60,61,62,60,60,62,60,62,59,60,61,62,59,60,61,62,60,59,60,61,62,59,60,61,62,59,60,61,62,59,60,61,62,59,60,61,62,59,60,61,62,59,60],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["device",4]],[[]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["error",4]]],[[]],[[["properror",4]]],[[]],[[],["arc",3,[["scheme",8]]]],null,[[]],[[]],null,null,null,null,[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[],["deviceresult",6,[["vec",3,[["device",4]]]]]],[[]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[["usize",15]],["deviceresult",6]],[[]],[[]],[[["usize",15],["usize",15]],["option",4,[["usize",15]]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[],["framebuffer",3]],[[]],[[],["displayinfo",3]],[[]],[[],["str",15]],[[["displayinfo",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[["arc",3]],["arc",3,[["scheme",8]]]],[[]],[[]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["mouseflags",3]]],[[]],[[],["u8",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["mouseflags",3]],[[],["mousestate",3]],[[]],[[]],[[["mouseflags",3]],["ordering",4]],[[["arc",3]],["bool",15]],[[]],[[],["bool",15]],[[],["mouseflags",3]],[[],["mousestate",3]],[[]],null,null,null,[[]],[[["mouseflags",3]],["bool",15]],[[["intoiterator",8]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["u8",15]],["option",4]],[[["u8",15]]],[[["u8",15]]],[[["intoiterator",8]]],[[]],null,[[]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[["mouseflags",3]],["bool",15]],[[["arc",3,[["inputscheme",8]]]],["arc",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["mouseflags",3]],["option",4,[["ordering",4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["bool",15]]],[[]],[[]],[[["eventhandler",6],["bool",15]]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["pio",3]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["readonly",3]],[[],["writeonly",3]],[[["u16",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u16",15]],[[],["u8",15]],[[],["u32",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u32",15]]],[[["u16",15]]],[[["u8",15]]],null,null,[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[["usize",15],["irqtriggermode",4],["irqpolarity",4]],["deviceresult",6]],[[]],[[["usize",15]]],[[]],[[]],[[]],[[["usize",15]],["bool",15]],[[],["localapic",3]],[[["usize",15]],["deviceresult",6]],[[["usize",15]],["deviceresult",6,[["range",3,[["usize",15]]]]]],[[["range",3,[["usize",15]]]],["deviceresult",6]],[[["range",3,[["usize",15]]],["usize",15],["irqhandler",6]],["deviceresult",6]],[[],["str",15]],[[["usize",15]]],[[]],[[]],[[["usize",15],["irqhandler",6]],["deviceresult",6]],[[["usize",15],["irqhandler",6]],["deviceresult",6]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["usize",15]],["deviceresult",6]],[[["usize",15]],["deviceresult",6]],[[]],[[]],[[["arc",3]],["arc",3,[["scheme",8]]]],[[]],[[]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[],["framebuffer",3]],[[]],[[["u32",15],["u32",15],["colorformat",4]]],[[],["displayinfo",3]],[[]],[[],["str",15]],[[["u32",15],["u32",15],["colorformat",4]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[["arc",3]],["arc",3,[["scheme",8]]]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[["str",15],["arc",3,[["displayscheme",8]]]]],[[]],[[]],[[["arc",3,[["inputscheme",8]]]]],[[["arc",3,[["inputscheme",8]]]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[["capabilitytype",4]],["inputcapability",3]],[[["capabilitytype",4]],["inputcapability",3]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["mockmouse",3]],[[],["mockkeyboard",3]],[[]],[[]],[[]],[[]],[[],["str",15]],[[],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["eventhandler",6],["bool",15]]],[[["eventhandler",6],["bool",15]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[["arc",3]],["arc",3,[["scheme",8]]]],[[["arc",3]],["arc",3,[["scheme",8]]]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[["usize",15]]],[[]],[[],["str",15]],[[]],[[]],[[]],[[]],[[]],[[["u8",15]],["deviceresult",6]],[[]],[[["eventhandler",6],["bool",15]]],[[]],[[],["result",4]],[[],["result",4]],[[],["deviceresult",6,[["option",4,[["u8",15]]]]]],[[],["typeid",3]],[[]],[[]],[[["arc",3]],["arc",3,[["scheme",8]]]],[[]],[[]],[[["str",15]],["deviceresult",6]],null,null,null,null,null,[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[["usize",15],["usize",15]]],[[["usize",15],["usize",15]]],[[],["arc",3]],[[]],[[]],[[],["arc",3,[["mutex",6,[["socketset",3]]]]]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[["usize",15]],["usize",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[["usize",15]],["usize",15]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[],["loopbackinterface",3]],[[]],[[]],[[],["string",3]],[[],["vec",3,[["ipcidr",4]]]],[[],["ethernetaddress",3]],[[["usize",15]]],null,[[]],[[],["str",15]],null,[[]],[[]],[[],["deviceresult",6]],[[],["deviceresult",6,[["usize",15]]]],[[]],[[]],[[],["deviceresult",6,[["usize",15]]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[["arc",3]],["arc",3,[["scheme",8]]]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u8",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u8",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["rgbcolor",3]],[[],["colorformat",4]],[[],["displayinfo",3]],[[],["inputeventtype",4]],[[],["inputevent",3]],[[],["capabilitytype",4]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["u16",15]],["bool",15]],[[],["bool",15]],[[],["u8",15]],[[]],[[]],[[]],[[["rgbcolor",3]],["bool",15]],[[["colorformat",4]],["bool",15]],null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[]],[[],["u8",15]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["rgbcolor",3]],["bool",15]],[[["u8",15],["u8",15],["u8",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u32",15]],[[],["u8",15]],[[],["u32",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u16",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["u16",15]],["result",4,[["u16",15]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15],["rgbcolor",3],["colorformat",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["capabilitytype",4]],["inputcapability",3]],[[["rgbcolor",3]]],[[["rgbcolor",3]]],[[["usize",15],["irqtriggermode",4],["irqpolarity",4]],["deviceresult",6]],[[["usize",15],["irqtriggermode",4],["irqpolarity",4]],["deviceresult",6]],[[["u32",15],["u32",15],["rgbcolor",3]]],[[["u32",15],["u32",15],["rgbcolor",3]]],[[],["framebuffer",3]],[[["rectangle",3],["rgbcolor",3]]],[[["rectangle",3],["rgbcolor",3]]],[[],["deviceresult",6]],[[],["deviceresult",6]],[[],["deviceresult",6]],[[],["string",3]],[[],["vec",3,[["ipcidr",4]]]],[[],["ethernetaddress",3]],[[["usize",15]]],[[],["displayinfo",3]],[[]],[[]],[[["usize",15]],["bool",15]],[[["usize",15]],["deviceresult",6]],[[["usize",15]],["deviceresult",6,[["range",3,[["usize",15]]]]]],[[["usize",15]],["deviceresult",6,[["range",3,[["usize",15]]]]]],[[["range",3,[["usize",15]]]],["deviceresult",6]],[[["range",3,[["usize",15]]]],["deviceresult",6]],[[["range",3,[["usize",15]]],["usize",15],["irqhandler",6]],["deviceresult",6]],[[["range",3,[["usize",15]]],["usize",15],["irqhandler",6]],["deviceresult",6]],[[],["str",15]],[[],["bool",15]],[[],["bool",15]],[[],["deviceresult",6]],[[["usize",15]],["deviceresult",6]],[[],["deviceresult",6,[["usize",15]]]],[[["usize",15],["arc",3,[["scheme",8]]]],["deviceresult",6]],[[["usize",15],["arc",3,[["scheme",8]]]],["deviceresult",6]],[[["usize",15],["irqhandler",6]],["deviceresult",6]],[[],["deviceresult",6,[["usize",15]]]],[[["u8",15]],["deviceresult",6]],[[["eventhandler",6],["bool",15]]],[[]],[[],["deviceresult",6,[["option",4,[["u8",15]]]]]],[[["usize",15]],["deviceresult",6]],[[["usize",15]],["deviceresult",6]],[[["arc",3]],["arc",3,[["scheme",8]]]],[[["usize",15]],["deviceresult",6]],[[["str",15]],["deviceresult",6]],[[["str",15]],["deviceresult",6]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[["arc",3,[["uartscheme",8]]]],["arc",3]],[[["usize",15]]],[[["usize",15]]],[[["u16",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u8",15]],["deviceresult",6]],[[["u8",15]],["deviceresult",6]],[[["u8",15]],["deviceresult",6]],[[["eventhandler",6],["bool",15]]],[[["eventhandler",6],["bool",15]]],[[["eventhandler",6],["bool",15]]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["deviceresult",6,[["option",4,[["u8",15]]]]]],[[],["deviceresult",6,[["option",4,[["u8",15]]]]]],[[],["deviceresult",6,[["option",4,[["u8",15]]]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["arc",3]],["arc",3,[["scheme",8]]]],[[["arc",3]],["arc",3,[["scheme",8]]]],[[["arc",3]],["arc",3,[["scheme",8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15]],["deviceresult",6]],[[["str",15]],["deviceresult",6]],[[["str",15]],["deviceresult",6]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[["arc",3,[["displayscheme",8]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["eventhandler",6],["bool",15]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["option",4,[["str",15]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],null,[[],["inheritprops",3]],[[]],[[["str",15]],["bool",15]],[[],["inheritprops",3]],[[["node",3]],["bool",15]],[[["str",15]],["option",4,[["node",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["usize",15]],["deviceresult",6]],[[]],[[["str",15]],["bool",15]],[[],["option",4,[["range",3,[["usize",15]]]]]],null,[[]],[[]],[[]],[[]],[[],["stringlistiter",3]],[[],["deviceresult",6,[["vec",3,[["range",3,[["usize",15]]]]]]]],null,[[["node",3]],["bool",15]],[[],["stringlist",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["node",3],["inheritprops",3]],["deviceresult",6,[["interruptsprop",6]]]],[[["node",3],["inheritprops",3]],["deviceresult",6]],[[["str",15]],["result",4,[["vec",3,[["u32",15],["global",3]]],["properror",4]]]],[[["str",15]],["option",4,[["vec",3]]]],[[["str",15]],["result",4,[["str",15],["properror",4]]]],[[["str",15]],["result",4,[["stringlist",3],["properror",4]]]],[[["str",15]],["result",4,[["u32",15],["properror",4]]]],[[["str",15]],["result",4,[["u64",15],["properror",4]]]],[[["str",15]],["result",4,[["usize",15],["properror",4]]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["vec",3],["stringtable",3]],["result",4,[["devicetreeerror",4]]]],[[],["option",4,[["u32",15]]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["capabilitytype",4]],["inputcapability",3]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["framebuffer",3]],[[],["deviceresult",6]],[[],["deviceresult",6]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["displayinfo",3]],[[]],[[]],[[]],[[]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["bool",15]],[[["virtioheader",3]],["deviceresult",6]],[[["virtioheader",3]],["deviceresult",6]],[[["virtioheader",3]],["deviceresult",6]],[[["virtioheader",3]],["deviceresult",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]],["deviceresult",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u8",15]],["deviceresult",6]],[[["eventhandler",6],["bool",15]]],[[["eventhandler",6],["bool",15]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["deviceresult",6,[["option",4,[["u8",15]]]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["arc",3]],["arc",3,[["scheme",8]]]],[[["arc",3]],["arc",3,[["scheme",8]]]],[[["arc",3]],["arc",3,[["scheme",8]]]],[[["arc",3]],["arc",3,[["scheme",8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]],["deviceresult",6]],[[["str",15]],["result",6]]],"p":[[4,"DeviceError"],[4,"Device"],[13,"Block"],[13,"Display"],[13,"Input"],[13,"Irq"],[13,"Net"],[13,"Uart"],[3,"DevicetreeDriverBuilder"],[8,"IoMapper"],[3,"UefiDisplay"],[3,"MouseFlags"],[3,"MouseState"],[3,"Mouse"],[8,"Io"],[3,"Mmio"],[3,"ReadOnly"],[3,"WriteOnly"],[3,"Pio"],[3,"Apic"],[3,"MockDisplay"],[3,"SdlWindow"],[3,"MockMouse"],[3,"MockKeyboard"],[3,"MockUart"],[8,"Provider"],[3,"ProviderImpl"],[3,"SOCKETS"],[3,"LoopbackInterface"],[4,"ColorFormat"],[4,"InputEventType"],[4,"CapabilityType"],[4,"IrqPolarity"],[4,"IrqTriggerMode"],[3,"FrameBuffer"],[3,"InputCapability"],[3,"RgbColor"],[3,"Rectangle"],[3,"DisplayInfo"],[3,"InputEvent"],[8,"EventScheme"],[8,"InputScheme"],[8,"DisplayScheme"],[8,"IrqScheme"],[8,"BlockScheme"],[8,"NetScheme"],[8,"Scheme"],[8,"UartScheme"],[8,"SchemeUpcast"],[3,"BufferedUart"],[3,"Uart16550Mmio"],[3,"Uart16550Pio"],[3,"EventListener"],[3,"GraphicConsole"],[3,"StringList"],[3,"Node"],[3,"Devicetree"],[3,"InheritProps"],[3,"VirtIoBlk"],[3,"VirtIoConsole"],[3,"VirtIoGpu"],[3,"VirtIoInput"]]},\
"zcore_loader":{"doc":"Linux and Zircon user programs loader and runner.","t":[0,0,5,5],"n":["linux","zircon","run","run_userboot"],"q":["zcore_loader","","zcore_loader::linux","zcore_loader::zircon"],"d":["Run Linux process and manage trap/interrupt/syscall.","Run Zircon user program (userboot) and manage …","Create and run main Linux process","Run Zircon <code>userboot</code> process from the prebuilt path, and …"],"i":[0,0,0,0],"f":[null,null,[[["vec",3,[["string",3]]],["vec",3,[["string",3]]],["arc",3,[["filesystem",8]]]],["arc",3,[["process",3]]]],[[["str",15]],["arc",3,[["process",3]]]]],"p":[]},\
"zircon_object":{"doc":"Zircon kernel objects","t":[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,6,11,11,11,11,11,11,11,11,11,11,0,14,0,11,11,11,11,14,11,11,11,11,11,0,14,0,11,11,11,11,0,0,11,11,11,11,11,11,0,0,11,11,17,13,3,13,13,13,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,13,18,13,13,13,3,3,3,3,3,18,13,18,18,18,18,18,18,18,18,18,3,18,13,3,3,3,4,13,18,18,18,18,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,8,13,13,3,3,13,13,3,13,4,3,3,3,4,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,12,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,12,5,5,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,3,3,3,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,3,18,3,3,18,18,18,18,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,3,18,18,18,18,18,3,3,3,6,18,18,17,18,18,18,18,18,3,8,6,18,18,18,18,18,18,18,18,18,18,3,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,3,6,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,10,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,10,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,13,13,3,3,3,13,13,13,13,13,13,13,13,13,13,13,3,3,3,3,19,3,3,4,3,3,4,6,13,19,4,3,3,3,3,13,13,13,4,3,13,13,13,13,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,13,13,13,13,13,3,13,13,13,13,13,13,13,13,13,13,3,13,13,13,13,13,3,3,4,3,13,13,13,13,13,13,13,8,3,3,3,13,13,13,13,13,13,13,13,13,13,13,13,13,4,4,13,3,3,13,13,13,13,4,13,13,4,3,13,13,17,8,3,13,3,6,3,13,4,4,3,13,13,18,13,13,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,10,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,0,0,8,8,10,10,10,10,10,10,10,10,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,18,18,18,18,18,18,18,18,18,4,13,13,6,18,13,18,18,3,17,17,3,18,17,17,6,18,18,18,18,18,18,18,4,13,3,3,18,18,3,18,17,17,13,13,18,18,8,6,3,3,3,3,3,3,3,18,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,11,11,11,10,11,11,11,11,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,12,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,10],"n":["ACCESS_DENIED","ADDRESS_IN_USE","ADDRESS_UNREACHABLE","ALREADY_BOUND","ALREADY_EXISTS","ASYNC","BAD_HANDLE","BAD_PATH","BAD_STATE","BAD_SYSCALL","BUFFER_TOO_SMALL","CANCELED","CONNECTION_ABORTED","CONNECTION_REFUSED","CONNECTION_RESET","FILE_BIG","INTERNAL","INTERNAL_INTR_RETRY","INVALID_ARGS","IO","IO_DATA_INTEGRITY","IO_DATA_LOSS","IO_INVALID","IO_MISSED_DEADLINE","IO_NOT_PRESENT","IO_OVERRUN","IO_REFUSED","NEXT","NOT_CONNECTED","NOT_DIR","NOT_EMPTY","NOT_FILE","NOT_FOUND","NOT_SUPPORTED","NO_MEMORY","NO_RESOURCES","NO_SPACE","OK","OUT_OF_RANGE","PEER_CLOSED","PROTOCOL_NOT_SUPPORTED","SHOULD_WAIT","STOP","TIMED_OUT","UNAVAILABLE","WRONG_TYPE","ZxError","ZxResult","as_any","as_any_mut","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clone","clone_into","debuglog","define_count_helper","dev","eq","fmt","from","from","impl_kobject","into","into_any","into_any_arc","into_any_rc","into_result","ipc","kcounter","object","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","signal","task","to_owned","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","util","vm","wrapping_as","wrapping_cast_from","DLOG_MAX_LEN","Debug","DebugLog","Error","Fatal","Info","Severity","Trace","Warning","add_signal_callback","as_any","as_any","as_any_mut","as_any_mut","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","create","fmt","fmt","from","from","id","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","name","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","read","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","set_name","signal","signal_change","signal_clear","signal_set","try_from","try_from","try_into","try_into","type_id","type_id","type_name","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","write","BtiInfo","BusTransactionInitiator","COUNT","EXCLUSIVE","HYPERVISOR","IOPORT","IRQ","Interrupt","InterruptFlags","InterruptOptions","Iommu","IommuPerms","MASK_POSTWAIT","MMIO","MODE_DEFAULT","MODE_EDGE_BOTH","MODE_EDGE_HIGH","MODE_EDGE_LOW","MODE_LEVEL_HIGH","MODE_LEVEL_LOW","PERM_EXECUTE","PERM_READ","PERM_WRITE","PinnedMemoryToken","REMAP_IRQ","ROOT","Resource","ResourceFlags","ResourceInfo","ResourceKind","SMC","UNMASK_PREWAIT","UNMASK_PREWAIT_UNLOCKED","VIRTUAL","VIRTUAL","VMEX","ack","add_signal_callback","add_signal_callback","add_signal_callback","add_signal_callback","add_signal_callback","all","all","all","all","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","aspace_size","az","az","az","az","az","az","az","az","az","az","az","az","bind","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","check_exclusive","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","complement","complement","complement","complement","contains","contains","contains","contains","create","create","create","default","default","destroy","difference","difference","difference","difference","drop","drop","empty","empty","empty","empty","encode_addrs","eq","eq","eq","eq","eq","extend","extend","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_iter","from_iter","get_hash","get_hash","get_hash","get_hash","get_info","get_info","hash","hash","hash","hash","id","id","id","id","id","insert","insert","insert","insert","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_all","is_all","is_all","is_all","is_empty","is_empty","is_empty","is_empty","is_valid_bus_txn_id","map","map_contiguous","minimum_contiguity","name","name","name","name","name","ne","ne","ne","ne","new_pci","new_physical","new_virtual","not","not","not","not","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pci","pin","release_quarantine","remove","remove","remove","remove","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","set","set","set","set","set_name","set_name","set_name","set_name","set_name","signal","signal","signal","signal","signal","signal_change","signal_change","signal_change","signal_change","signal_change","signal_clear","signal_clear","signal_clear","signal_clear","signal_clear","signal_set","signal_set","signal_set","signal_set","signal_set","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","to_mode","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","toggle","toggle","trigger","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","type_name","unbind","union","union","union","union","unpin","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","validate","validate_ranged_resource","wait","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","Count","Disabled","IPciNode","Legacy","MMIO","MappedEcamRegion","MmioPcieAddressProvider","Msi","MsiX","PCIeBusDriver","PIO","PciAddrSpace","PciEcamRegion","PcieDeviceInfo","PcieDeviceKObject","PcieIrqMode","PioPcieAddressProvider","add_bus_region","add_ecam","add_root","add_signal_callback","allocate_bars","allocate_bars","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_root","as_root","as_upstream","az","az","az","az","az","az","az","az","az","base_class","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bus_end","bus_id","bus_start","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","config_read","config_write","constants","default","default","default","dev_id","device","device_id","disable","disable","disable_irq","disable_irq","enable_bus_master","enable_bus_master","enable_irq","enable_irq","enable_master","enable_mmio","enable_pio","eq","eq","find_legacy_irq_handler","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","func_id","get_bar","get_config","get_irq_mode_capabilities","get_nth_device","id","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","link_device_to_upstream","map_interrupt","mmio_hi_regions","mmio_hi_regions","mmio_lo_regions","mmio_lo_regions","name","new","node_type","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","pci_init_args","pf_mmio_regions","pf_mmio_regions","phys_base","pio_config_read","pio_config_write","pio_regions","pio_regions","program_interface","register_irq_handle","register_irq_handle","revision_id","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","set_address_translation_provider","set_irq_mode","set_name","signal","signal_change","signal_clear","signal_set","size","start_bus_driver","sub_bus_region","sub_class","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","unregister_irq_handle","unregister_irq_handle","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","vendor_id","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","PCIE_ECAM_BYTES_PER_BUS","PCIE_INVALID_VENDOR_ID","PCIE_IRQRET_MASK","PCIE_MAX_BUSSES","PCIE_MAX_MSI_IRQS","PCIE_PIO_ADDR_SPACE_MASK","PCI_CFG_SPACE_TYPE_MMIO","PCI_CFG_SPACE_TYPE_PIO","PCI_MAX_DEVICES_PER_BUS","PCI_MAX_FUNCTIONS_PER_BUS","PCI_MAX_FUNCTIONS_PER_DEVICE","PCI_MAX_IRQS","PCI_MAX_LEGACY_IRQ_PINS","PCI_NO_IRQ_MAPPING","PCI_INIT_ARG_MAX_ECAM_WINDOWS","PCI_INIT_ARG_MAX_SIZE","PciInitArgsAddrWindows","PciInitArgsHeader","PciInitArgsIrqs","PciIrqSwizzleLut","active_high","addr_window_count","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","az","az","az","az","base","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bus_end","bus_start","cast_from","cast_from","cast_from","cast_from","cfg_space_type","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone_into","configure_interrupt","dev_pin_to_global_irq","fmt","fmt","fmt","fmt","from","from","from","from","global_irq","has_ecam","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","irqs","level_triggered","num_irqs","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","padding1","padding1","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","size","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","CREATE_MASK","Channel","DATAGRAM","Fifo","MessagePacket","SHUTDOWN_MASK","SHUTDOWN_READ","SHUTDOWN_WRITE","SOCKET_PEEK","Socket","SocketFlags","SocketInfo","add_signal_callback","add_signal_callback","add_signal_callback","all","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","az","az","az","az","az","az","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","check_and_read","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone_into","cmp","complement","contains","create","create","create","data","default","default","difference","drop","drop","drop","empty","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","get_hash","get_info","get_rx_tx_threshold","get_txid","handles","hash","id","id","id","insert","intersection","intersects","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_all","is_empty","name","name","name","ne","ne","not","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","peer","peer","peer","read","read","read","related_koid","related_koid","related_koid","remove","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","set","set_name","set_name","set_name","set_read_threshold","set_txid","set_write_threshold","shutdown","signal","signal","signal","signal_change","signal_change","signal_change","signal_clear","signal_clear","signal_clear","signal_set","signal_set","signal_set","sub","sub_assign","symmetric_difference","to_owned","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","union","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","write","write","write","APPLY_PROFILE","BASIC","CLOCK_STARTED","DEFAULT_BTI","DEFAULT_CHANNEL","DEFAULT_DEBUGLOG","DEFAULT_DEVICE","DEFAULT_EVENT","DEFAULT_EVENTPAIR","DEFAULT_EXCEPTION","DEFAULT_FIFO","DEFAULT_GUEST","DEFAULT_INTERRUPT","DEFAULT_JOB","DEFAULT_PCI_INTERRUPT","DEFAULT_PORT","DEFAULT_PROCESS","DEFAULT_RESOURCE","DEFAULT_SOCKET","DEFAULT_STREAM","DEFAULT_SUSPEND_TOKEN","DEFAULT_THREAD","DEFAULT_TIMER","DEFAULT_VCPU","DEFAULT_VMAR","DEFAULT_VMO","DESTROY","DUPLICATE","DummyObject","ENUMERATE","EXECUTE","GET_POLICY","GET_PROPERTY","HANDLE_CLOSED","Handle","HandleBasicInfo","HandleInfo","HandleValue","INSPECT","INTERRUPT_SIGNAL","INVALID_HANDLE","IO","JOB_NO_JOBS","JOB_NO_PROCESSES","JOB_TERMINATED","KERNEL_ALL","KObjectBase","KernelObject","KoID","MANAGE_JOB","MANAGE_PROCESS","MANAGE_THREAD","MAP","PEER_CLOSED","POLICY","PROCESS_TERMINATED","PROPERTY","READ","READABLE","Rights","SAME_RIGHTS","SCOEKT_ACCEPT","SET_POLICY","SET_PROPERTY","SIGCHLD","SIGNAL","SIGNALED","SIGNAL_PEER","SOCKET_CONTROL_READABLE","SOCKET_CONTROL_WRITABLE","SOCKET_PEER_WRITE_DISABLED","SOCKET_READ_THRESHOLD","SOCKET_SHARE","SOCKET_WRITE_DISABLED","SOCKET_WRITE_THRESHOLD","Signal","SignalHandler","TASK_TERMINATED","THREAD_RUNNING","THREAD_SUSPENDED","THREAD_TERMINATED","TRANSFER","USER_ALL","USER_SIGNAL_0","USER_SIGNAL_1","USER_SIGNAL_2","USER_SIGNAL_3","USER_SIGNAL_4","USER_SIGNAL_5","USER_SIGNAL_6","USER_SIGNAL_7","VMO_ZERO_CHILDREN","WAIT","WRITABLE","WRITE","add_signal_callback","add_signal_callback","add_signal_callback","all","all","allowed_signals","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","az","az","az","az","az","az","az","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","complement","complement","contains","contains","default","default","default","default","default","difference","difference","downcast","downcast_arc","downcast_mut","downcast_rc","downcast_ref","empty","empty","eq","eq","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","get_child","get_handle_info","get_hash","get_hash","get_info","handle","hash","hash","id","id","id","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is","is_all","is_all","is_empty","is_empty","name","name","name","ne","ne","new","new","new","not","not","obj_type","object","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","partial_cmp","peer","related_koid","remove","remove","rights","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","send_signal_to_port_async","set","set","set_name","set_name","set_name","signal","signal","signal","signal_change","signal_change","signal_change","signal_clear","signal_clear","signal_clear","signal_set","signal_set","signal_set","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","type_name","union","union","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","verify_user_signal","wait_signal","wait_signal_many","with","with_name","with_signal","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","BIND_TO_INTERUPT","Center","Early","Event","EventPair","Futex","GuestBell","GuestBell","GuestIo","GuestIo","GuestMem","GuestMem","GuestVcpu","GuestVcpu","Interrupt","Interrupt","Late","PacketGuestBell","PacketGuestIo","PacketGuestMem","PacketGuestVcpu","PacketGuestVcpuData","PacketGuestVcpuInterrupt","PacketGuestVcpuStartup","PacketGuestVcpuType","PacketInterrupt","PacketSignal","PacketType","PacketUser","PageRequest","Payload","PayloadRepr","Port","PortOptions","PortPacket","PortPacketRepr","Signal","SignalOne","SignalRep","Slack","Timer","User","User","VcpuInterrupt","VcpuStartup","_padding1","_reserved","_reserved","_reserved0","_reserved0","_reserved0","_reserved1","_reserved1","_reserved1","_reserved1","_reserved2","_reserved2","_reserved2","access_size","add_signal_callback","add_signal_callback","add_signal_callback","add_signal_callback","add_signal_callback","addr","addr","all","allowed_signals","allowed_signals","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","can_bind_to_interrupt","cancel","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","complement","contains","count","create","data","data","data","data","default","default","default","default_operand_size","difference","drop","empty","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","get_hash","hash","id","id","id","id","id","input","insert","inst_buf","inst_len","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_all","is_empty","key","key","name","name","name","name","name","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new","new","new","not","observed","one_shot","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","owner","partial_cmp","peer","peer","port","push","push_user","related_koid","remove","requeue","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","set","set","set_name","set_name","set_name","set_name","set_name","signal","signal","signal","signal","signal","signal_change","signal_change","signal_change","signal_change","signal_change","signal_clear","signal_clear","signal_clear","signal_clear","signal_clear","signal_set","signal_set","signal_set","signal_set","signal_set","status","status","sub","sub_assign","symmetric_difference","timestamp","timestamp","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","trigger","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","type_name","union","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","wait","wait","wait_with_owner","wake","wake_single_owner","with_slack","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","0","0","0","0","0","0","0","Absolute","Allow","AllowException","AmbientMarkVMOExec","BadHandle","BasicPolicy","Blocked","BlockedChannel","BlockedException","BlockedFutex","BlockedInterrupt","BlockedPager","BlockedPort","BlockedSleeping","BlockedWaitMany","BlockedWaitOne","CurrentThread","Dead","Debug","Deny","DenyException","Dying","ExceptionObject","ExceptionReport","ExceptionType","Exceptionate","Exited","FatalPageFault","FloatPoint","General","General","HardwareBreakpoint","Init","IntoResult","Job","JobInfo","JobPolicy","Kill","New","NewAny","NewChannel","NewEvent","NewEventPair","NewFIFO","NewPort","NewProcess","NewProfile","NewSocket","NewTimer","NewVMO","PolicyAction","PolicyCondition","PolicyError","Process","ProcessInfo","ProcessStarting","Relative","Running","Running","SetPolicyOptions","SingleStep","SoftwareBreakpoint","Status","SuspendToken","Suspended","Synth","TASK_RETCODE_SYSCALL_KILL","Task","Thread","ThreadExiting","ThreadFlag","ThreadFn","ThreadInfo","ThreadStarting","ThreadState","ThreadStateKind","TimerSlackPolicy","UnalignedAccess","UndefinedInstruction","VCPU","Vector","VmarWx","WrongObject","action","add_handle","add_handles","add_signal_callback","add_signal_callback","add_signal_callback","add_signal_callback","add_signal_callback","all","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","blocking_run","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","check_policy","check_root_job","check_timer_policy","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","children_ids","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","complement","condition","contains","context_cloned","create","create","create","create_channel","create_child","create_with_ext","create_with_ext","debug_exceptionate","debug_exceptionate","debug_exceptionate","debug_exceptionate","debugger_attached","default","default","default","default","default","default","deref","difference","drop","drop","drop","drop","dup_handle_operating_rights","empty","eq","eq","eq","eq","eq","exceptionate","exceptionate","exceptionate","exceptionate","exit","exit","exit_code","ext","ext","extend","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","get_action","get_cancel_token","get_child","get_child","get_debug_addr","get_dyn_break_on_load","get_dyn_object_and_rights","get_dyn_object_with_rights","get_futex","get_handle_info","get_hash","get_info","get_info","get_object","get_object_and_rights","get_object_with_rights","get_process_handle","get_thread_exception_info","get_thread_handle","get_thread_info","get_time","handle_exception","has_exited","hash","id","id","id","id","id","inner","insert","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_result","is_all","is_empty","is_empty","is_first_thread","is_synth","job","kill","kill","kill","kill","merge","name","name","name","name","name","ne","ne","not","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","padding1","parent","partial_cmp","policy","proc","process_ids","put_context","read_state","related_koid","related_koid","related_koid","remove","remove_handle","remove_handles","remove_object","resume","resume","resume","resume","return_code","root","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","set","set_critical_at_job","set_debug_addr","set_dyn_break_on_load","set_name","set_name","set_name","set_name","set_name","set_policy_basic","set_policy_timer_slack","set_state","set_strategy","signal","signal","signal","signal","signal","signal_change","signal_change","signal_change","signal_change","signal_change","signal_clear","signal_clear","signal_clear","signal_clear","signal_clear","signal_set","signal_set","signal_set","signal_set","signal_set","start","start","start_with_entry","started","state","state","status","strategy","sub","sub_assign","suspend","suspend","suspend","suspend","symmetric_difference","thread_ids","time_add","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","type_name","union","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","update_flags","vmar","wait_for_exit","wait_for_run","with_context","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","write_state","0","elf_loader","kcounter","ElfExt","VmarExt","dynsym","get_interpreter","get_phdr_vaddr","get_symbol_address","load_from_elf","load_segment_size","map_from_elf","relocate","AllCounters","Counter","Descriptor","DescriptorVmoHeader","add","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","az","az","az","az","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","default","fmt","fmt","fmt","fmt","from","from","from","from","get","get","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","new","new","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","raw_arena_vmo_data","raw_desc_vmo_data","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","ALLOW_FAULTS","CACHE_1","CACHE_2","CAN_MAP_EXECUTE","CAN_MAP_READ","CAN_MAP_RXW","CAN_MAP_SPECIFIC","CAN_MAP_WRITE","COMPACT","CONTIGUOUS","CachePolicy","Cached","Current","DevVAddr","EXECUTE","End","HUGE_PAGE","IS_COW_CLONE","KERNEL_ASPACE","KERNEL_ASPACE_BASE","KERNEL_ASPACE_SIZE","MMUFlags","PAGER_BACKED","PAGE_SIZE","PAGE_SIZE_LOG2","PhysAddr","READ","REQUIRE_NON_RESIZABLE","RESIZABLE","ROOT_FLAGS","RXW","SPECIFIC","SPECIFIC_OVERWRITE","SeekOrigin","Start","Stream","StreamInfo","TYPE_PAGED","TYPE_PHYSICAL","TaskStatsInfo","USER","USER_ASPACE_BASE","USER_ASPACE_SIZE","Uncached","UncachedDevice","VIA_HANDLE","VIA_MAPPING","VMObjectTrait","VirtAddr","VmAddressRegion","VmMapping","VmObject","VmarFlags","VmarInfo","VmoInfo","VmoInfoFlags","WRITE","WriteCombining","add_signal_callback","add_signal_callback","add_signal_callback","addr","all","all","all","allocate","allocate_at","append_mapping","append_mapping","append_mapping","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","az","az","az","az","az","az","az","az","az","az","az","az","az","az","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cache_policy","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","ceil","check_aligned","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","commit","commit_page","commit_pages_with","committed_pages_in_range","complement","complement","complement","complete_info","contains","contains","contains","contains","content_size","create","create_child","create_child","create_slice","decommit","default","default","default","default","deref","deref","destroy","difference","difference","difference","drop","drop","dump","empty","empty","empty","eq","eq","eq","eq","extend","extend","extend","find_mapping","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fork_from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_iter","get_flags","get_flags","get_hash","get_hash","get_hash","get_info","get_info","get_info","get_task_stats","get_vaddr_flags","handle_page_fault","hash","hash","hash","id","id","id","insert","insert","insert","intersection","intersection","intersection","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_alive","is_all","is_all","is_all","is_contiguous","is_contiguous","is_contiguous","is_dead","is_empty","is_empty","is_empty","is_paged","is_paged","is_resizable","kernel_allocate_physical","len","load_from_elf","map","map_at","map_ext","map_from_elf","name","name","name","ne","ne","ne","new_contiguous","new_kernel","new_paged","new_paged_with_resizable","new_physical","new_root","not","not","not","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","page_aligned","pages","partial_cmp","partial_cmp","partial_cmp","pin","pin","protect","query_vaddr","read","read","read_at","read_memory","remove","remove","remove","remove_mapping","remove_mapping","remove_mapping","rights","round_down_pages","roundup_pages","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","seek","set","set","set","set_cache_policy","set_cache_policy","set_content_size","set_content_size_and_resize","set_len","set_len","set_name","set_name","set_name","share_count","signal","signal","signal","signal_change","signal_change","signal_change","signal_clear","signal_clear","signal_clear","signal_set","signal_set","signal_set","sub","sub","sub","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","table_phys","to_owned","to_owned","to_owned","to_owned","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","union","union","union","unmap","unpin","unpin","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","vdso_base_addr","vmo_page_bytes","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","write","write","write_at","write_memory","zero"],"q":["zircon_object","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","zircon_object::debuglog","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","zircon_object::devzircon_object::dev::pcizircon_object::dev::pci::constants","","","","","","","","","","","","","","zircon_object::dev::pci::pci_init_args","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","zircon_object::ipczircon_object::objectzircon_object::signalzircon_object::signal::PayloadRepr","","","","","","","zircon_object::taskzircon_object::task::Status","zircon_object::util","","zircon_object::util::elf_loader","","","","","","","","","","zircon_object::util::kcounter","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","zircon_object::vmd":["The caller did not have permission to perform the …","Address is being used by someone else.","Host is unreachable.","The operation failed because the named entity is already …","An object with the specified identifier already exists. …","Ownership of the item has moved to an asynchronous worker.","A specified handle value does not refer to a handle.","Path name is too long.","operation failed because the current state of the object …","The specified syscall number is invalid.","A caller provided buffer is too small for this operation.","The in-progress operation (e.g. a wait) has been canceled.","Connection was aborted.","Remote peer rejected the connection.","Connection was reset.","This operation would cause a file to exceed a …","The system encountered an otherwise unspecified error …","The system call was interrupted, but should be retried.  …","an argument is invalid, ex. null pointer","Otherwise unspecified error occurred during I/O.","The data in the operation failed an integrity check and is …","The data in the operation is currently unavailable and may …","The data in the operation is invalid parameter or is out …","An operation did not complete within the required …","The device is no longer available (has been unplugged from …","More data was received from the device than expected. …","The entity the I/O operation is being performed on …","Advance to the next item. Example: A notification callback …","Socket is not connected.","Object is not a directory or does not support directory …","Directory is not empty.","Object is not a regular file.","The requested entity is not found.","The operation is not implemented, supported, or enabled.","The system was not able to allocate memory needed for the …","The system was not able to allocate some resource needed …","Filesystem or device space is exhausted.","Success.","An argument is outside the valid range for this operation.","The operation failed because the remote end of the subject …","Specified protocol is not supported.","The operation cannot be performed currently but …","Do not call again. Example: A notification callback will …","The time limit for the operation elapsed before the …","The subject of the operation is currently unable to …","The subject of the operation is the wrong type to perform …","Zircon statuses are signed 32 bit integers. The space of …","The type returned by kernel objects methods.","","","","","","","","","","","Objects for Kernel Debuglog.","Define a pair of kcounter (create, destroy), and a helper …","Objects for Device Drivers.","","","","","Macro to auto implement <code>KernelObject</code> trait.","","","","","","Objects for IPC.","Define a new kernel counter.","Kernel object basis.","","","","","Objects for signaling and waiting.","Objects for Task Management.","","","","","","","Utilities.","Objects for Virtual Memory Management.","","","Max length of Dlog read buffer.","","Debuglog - Kernel debuglog","","","","Log entry severity. Used for coarse filtering of log …","","","","","","","","","","","","","","","","","","","","Create a new <code>DebugLog</code>.","","","","","","","","","","","","","","","","","","","Read a log, return the actual read size.","","","","","","","","","","","","","","","","","","","","","","","","","Write a log.","Information of BTI.","Bus Transaction Initiator.","","Exclusive resource.","","","","Interrupts - Usermode I/O interrupt delivery.","Bits for Interrupt.flags.","Interrupt bind flags.","Iommu refers to DummyIommu in zircon.","IOMMU permission flags.","The interrupt should be masked following waiting.","","Default mode.","Falling/rising edge triggered.","Rising edge triggered.","Falling edge triggered.","High level triggered.","Low level triggered.","Execute Permission.","Read Permission.","Write Permission.","Pinned Memory Token.","Remap interrupt request(IRQ).","","Address space rights and accounting.","Bits for Resource.flags.","Information of a resource.","ResourceKind definition from …","","The interrupt should be unmasked before waiting on the …","The same as <strong>INTERRUPT_UNMASK_PREWAIT</strong> except release the …","The interrupt is virtual.","Virtual interrupt.","","Acknowledge the interrupt and re-arm it.","","","","","","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","","","","","","","","","","","","","","","","","","","","","","","","","The number of bytes in the address space (UINT64_MAX if …","","","","","","","","","","","","","Bind the interrupt object to a port.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>Err(ZxError::INVALID_ARGS)</code> if the resource is not …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Create a new bus transaction initiator.","Create a new <code>IOMMU</code>.","Create a new <code>Resource</code>.","","","Destroy the interrupt.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Encode the mapped addresses.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","","","","Get information of BTI.","Get information of the resource.","","","","","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Check if a <code>bus_txn_id</code> is valid for this IOMMU.","Grant a device access to the range of pages given by […","Same as <code>map</code>, but with additional guarantee that this will …","Returns the number of bytes that Map() can guarantee, upon …","","","","","","","","","","Create a new PCI interrupt.","Create a new physical interrupt.","Create a new virtual interrupt.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Pin memory and grant access to it to the BTI.","Releases all quarantined PMTs.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Extract the mode bits.","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Triggers a virtual interrupt object.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unbind the interrupt object from a port.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Unpin pages and revoke device access to them.","","","","","","","","","","","","","","","","","","","","","","","","","Validate the resource is the given kind or it is the root …","Validate the resource is the given kind or it is the root …","Wait until the interrupt is triggered.","","","","","","","","","","","","","","","","","","","","","","","","","","All IRQs are disabled.  0 total IRQs are supported in this …","","Devices may support up to 1 legacy IRQ in total.  …","Memory mapping I/O.","Mapped ECAM Region.","Systems that have memory mapped Config Spaces.","Devices may support up to 32 MSI IRQs in total.  IRQs may …","Devices may support up to 2048 MSI-X IRQs in total.  IRQs …","PCIE Bus Driver.","Port I/O.","Type of PCI address space.","ECAM Region.","Info returned to dev manager for PCIe devices when probing.","PCIE Device Entity.","Enumeration which defines the IRQ modes a PCIe device may …","Systems that have PIO mapped Config Spaces.","Add bus region.","Add a ECAM region.","Add a root bus to the driver and attempt to scan it for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Inclusive ID of the last bus controlled by this region.","","Inclusive ID of the first bus controlled by this region.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Read the device’s config.","Write the device’s config.","","","","","","","","","","","","","","","","Enable bus mastering.","Enable MMIO.","Enable PIO.","","","Find the legacy IRQ handler.","","","","","","","","","","","","","","","Get PcieBarInfo.","Get a device’s config.","Check whether <code>mode</code> is capable PCI device’s IRQ modes.","Get the “Nth” device.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Link a device to an upstream node.","Map the interrupt to the IRQ.","","","","","","Create a new PcieDeviceKObject.","","","","","","","","","","","","","","","","","","","","<code>sys_pci_init</code> args.","","","Physical address of the memory mapped config region.","","","","","","","","","","","","","","","","","","","","","","","","","","","A PcieAddressProvider translates a BDF address to an …","Set IRQ mode.","","","","","","Size (in bytes) of the memory mapped config region.","Start the bus driver.","Subtract bus regionalid flags of <code>socket_create()</code>.","Bidirectional interprocess communication","Create a datagram socket. See <code>read</code> and <code>write</code> for details.","First-In First-Out inter-process queue.","The message transferred in the channel. See Channel for …","Valid flags of <code>socket_shutdown()</code>.","Via this option to <code>socket_shutdown()</code>, one end of the …","Via this option to <code>socket_shutdown()</code>, one end of the …","Leave the message in the socket.","Bidirectional streaming IPC transport.","Signals that waitable kernel objects expose to …","The information of a socket","","","","Returns the set containing all flags.","","","","","","","","","","","","","","","","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","Send a message to a channel and await a reply.","","","","","","","Read a packet from the channel if check is ok, otherwise …","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Create a channel and return a pair of its endpoints","Create a FIFO.","Create a socket.","The data carried by the message packet","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","","","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","Get information of the socket.","Get the read and write thresholds of the socket.","Get txid (the first 4 bytes)","See Channel for details.","","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","","","","","Returns the complement of this set of flags.","","","","","","","","","","","","","","","","","Read a packet from the channel","Read data from the FIFO.","Read data from the socket. If successful, the number of …","","","","Removes the specified flags in-place.","","","","","","","","","","","","","Inserts or removes the specified flags depending on the …","","","","Set the read threshold of the socket.","Set txid (the first 4 bytes)","Set the write threshold of the socket.","Prevent reading or writing.","","","","","","","","","","","","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Write a packet to the channel","Write data to the FIFO.","Write data to the socket. If successful, the number of …","Not used.","TRANSFER | DUPLICATE | WAIT | INSPECT","","(BASIC &amp; !WAIT) | IO | MAP","BASIC &amp; !Self::DUPLICATE | IO | SIGNAL | SIGNAL_PEER","BASIC | WRITE | SIGNAL","BASIC | IO","BASIC | SIGNAL","BASIC | SIGNAL ｜ SIGNAL_PEER","TRANSFER | PROPERTY | INSPECT","BASIC | IO | SIGNAL | SIGNAL_PEER","TRANSFER | DUPLICATE | WRITE | INSPECT | MANAGE_PROCESS","BASIC | IO | SIGNAL","BASIC | IO | PROPERTY | POLICY | ENUMERATE | DESTROY | …","BASIC | IO | SIGNAL","(BASIC &amp; !WAIT) | IO","BASIC | IO | PROPERTY | ENUMERATE | DESTROY | SIGNAL | …","TRANSFER | DUPLICATE | WRITE | INSPECT","BASIC | IO | PROPERTY | SIGNAL | SIGNAL_PEER","BASIC | PROPERTY | SIGNAL","TRANSFER | INSPECT","BASIC | IO | PROPERTY | DESTROY | SIGNAL | MANAGE_THREAD","BASIC | WRITE | SIGNAL","BASIC | IO | EXECUTE | SIGNAL","BASIC | WAIT","BASIC | IO | PROPERTY | MAP | SIGNAL","Allows termination of task objects via <code>zx_task_kill()</code>.","Allows handle duplication via <code>zx_handle_duplicate()</code>.","Empty kernel object. Just for test.","Allows enumerating child objects via <code>zx_object_get_info()</code> …","Allows mapping as executable if <code>Rights::MAP</code> is also …","Allows policy inspection via <code>zx_job_get_policy()</code>.","Allows property inspection via <code>zx_object_get_property()</code>.","","A Handle is how a specific process refers to a specific …","Information about a handle and the object it refers to.","Information about a handle itself, including its …","The value refers to a Handle in user space.","Allows inspection via <code>zx_object_get_info()</code>.","","Invalid handle value.","READ ｜ WRITE","","","","","The base struct of a kernel object.","Common interface of a kernel object.","The type of kernel object ID.","Allows creation of processes, subjobs, etc.","Allows creation of threads, etc.","Allows suspending/resuming threads, etc.","Allows mapping of a VM object into an address space.","","GET_POLICY ｜ SET_POLICY","","GET_PROPERTY ｜ SET_PROPERTY","Allows reading of data from containers (channels, sockets, …","","Rights are associated with handles and convey privileges …","Used to duplicate a handle with the same rights.","","Allows policy modification via <code>zx_job_set_policy()</code>.","Allows property modification via <code>zx_object_set_property()</code>.","","Allows use of <code>zx_object_signal()</code>.","","Allows use of <code>zx_object_signal_peer()</code>.","","","","","","","","Signals that waitable kernel objects expose to …","The type of kernel object signal handler.","","","","","Allows handle transfer via <code>zx_channel_write()</code>.","","","","","","","","","","","Allows use of <code>zx_object_wait_one()</code>, <code>zx_object_wait_many()</code>, …","","Allows writing of data to containers (channels, sockets, …","Add <code>callback</code> for signal status changes.","Add <code>callback</code> for signal status changes.","","Returns the set containing all flags.","Returns the set containing all flags.","Get object’s allowed signals.","","","","","","","","","","","","","","","","","","","","","","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns a boxed object from a boxed trait object if the …","Returns an <code>Arc</code>-ed object from an <code>Arc</code>-ed trait object if …","Returns a mutable reference to the object within the trait …","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Returns a reference to the object within the trait object …","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","Attempt to find a child of the object with given KoID.","Get information about the handle itself.","","","Get information about the provided handle and the object …","The handle’s value in user space.","","","Get object’s KoID.","","The object’s KoID.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if the trait object wraps an object of type …","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Get object’s name.","Get object’s name.","","","","Create a new kernel object base.","Create a new <code>DummyObject</code>.","Create a new handle referring to the given object with …","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Get an object’s type.","The object referred to by the handle.","","","","","","","","","","","","","","","","","Attempt to get the object’s peer.","If the object is related to another (such as the other end …","Removes the specified flags in-place.","Removes the specified flags in-place.","The handle’s associated rights.","","","","","","","","","","","","","","","Once one of the <code>signal</code> asserted, push a packet with <code>key</code> …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Set object’s name.","Set object’s name.","","Get the signal status.","Get the signal status.","","Change signal status: first <code>clear</code> then <code>set</code> indicated bits.","Change signal status: first <code>clear</code> then <code>set</code> indicated bits.","","Deassert <code>signal</code>.","Deassert <code>signal</code>.","","Assert <code>signal</code>.","Assert <code>signal</code>.","","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","Get the name of the type of the kernel object.","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","","","","Verify whether <code>number</code> only sets the bits specified in …","Asynchronous wait for one of <code>signal</code>.","Asynchronous wait signal for multiple objects.","Create a kernel object base with both signal and name","Create a kernel object base with <code>name</code>.","Create a kernel object base with initial <code>signal</code>.","","","","","","","","","","","","","","","Allow this port to be bound to an interrupt.","slack is centered around deadline","slack interval is (deadline - slack, deadline]","Signalable event for concurrent programming","Mutually signalable pair of events for concurrent …","A primitive for creating userspace synchronization tools.","","","","","","","","","","","slack interval is [deadline, deadline + slack)","","","","","","","","","","","The type of a packet.","","","The data carried by a packet","A high-level representation of a packet payload.","Signaling and mailbox primitive","If you need this port to be bound to an interrupt, pass …","A packet sent through a port.","A high-level representation of a packet sent through a …","","","","Slack specifies how much a timer or event is allowed to …","An object that may be signaled at some point in the future","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the set containing all flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Check whether the port can be bound to an interrupt.","Cancel the pending timer started by <code>set</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Create a pair of event.","","","","","","","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","","","","","","Inserts the specified flags in-place.","","","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","","","","","","","","","","","","","","","","","Create a new <code>Event</code>.","Create a new Futex.","Create a new <code>Port</code>.","Create a new <code>Timer</code>.","Returns the complement of this set of flags.","","Create a one-shot timer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the owner of the futex.","","","Get the peer event.","","Push a <code>packet</code> into the port.","Push a <code>User</code> type <code>packet</code> into the port.","","Removes the specified flags in-place.","Requeuing is a generalization of waking.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Starts a one-shot timer that will fire when <code>deadline</code> …","Inserts or removes the specified flags depending on the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","","","","","","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Wait on a futex.","Asynchronous wait until at least one packet is available, …","Wait on a futex.","Wake some number of threads waiting on a futex.","Wake exactly one thread from the futex wait queue.","Create a new <code>Timer</code> with slack.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Policy is applied for all conditions in policy or the call …","Allow condition.","Generate an exception via the debug port. An exception …","A process under this job is attempting to use …","A process under this job is attempting to issue a syscall …","The policy type.","In a syscall or handling an exception.","The thread is stopped in <code>zx_channel_call()</code>.","The thread is stopped in an exception.","The thread is stopped in <code>zx_futex_wait()</code>.","The thread is stopped in <code>zx_interrupt_wait()</code>.","Pager.","The thread is stopped in <code>zx_port_wait()</code>.","The thread is stopped in <code>zx_nanosleep()</code>.","The thread is stopped in <code>zx_object_wait_many()</code>.","The thread is stopped in <code>zx_object_wait_one()</code>.","A handle to current thread.","The thread has stopped running.","","Prevent condition.","Just like <code>AllowException</code>, but after resuming condition is …","The thread is in the process of being terminated, but it …","The exception object received from the exception channel.","Data reported to an exception handler for most exceptions.","Type of exception","Kernel-owned exception channel endpoint.","Process has exited with the code.","","","","","","Initial state, no thread present in process.","<code>into_result</code> returns <code>Self</code> if the type parameter is already …","Control a group of processes","Information of a job.","Security and resource policies of a job.","Terminate the process.","The thread has been created but it has not started running …","A special condition that stands for all of the above …","A process under this job is attempting to create a new …","A process under this job is attempting to create a new …","A process under this job is attempting to create a new …","A process under this job is attempting to create a new …","A process under this job is attempting to create a new …","A process under this job is attempting to create a new …","A process under this job is attempting to create a new …","A process under this job is attempting to create a new …","A process under this job is attempting to create a new …","A process under this job is attempting to create a new vm …","The action taken when the condition happens specified by a …","The condition when a policy is applied.","","Process abstraction","Information of a process.","","Policy is applied for the conditions not specifically …","First thread has started and is running.","The thread is running user code normally.","Control the effect in the case of conflict between the …","","","Status of a process.","Suspend the given task.","Stopped due to <code>zx_task_suspend()</code>.","","The return code set when a task is killed via …","Task (Thread, Process, or Job)","Runnable / computation entity","","Thread flags.","The type of a new thread function.","The thread information.","","The thread state.","Possible values for “kind” in zx_thread_read_state and …","Timer slack policy.","","","The thread currently has a VCPU.","","A process under this job is attempting to map an address …","A process under this job is attempting to issue a syscall …","","Add a handle to the process","Add all handles to the process","","","","","","Returns the set containing all flags.","Apply a basic policy.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Run async future and change state while blocking.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Check whether <code>condition</code> is allowed in the parent job’s …","Check whether this job is root job.","Check whether the policy is valid.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get KoIDs of children Jobs.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Condition when the policy is applied.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns a copy of saved context of current thread, or …","Create a new process in the <code>job</code>.","Create a <code>SuspendToken</code> which can suspend the given task.","Create a new thread.","Create an exception channel endpoint for user.","Create a new child job object.","Create a new process with extension info.","Create a new thread with extension info.","Get the debug exceptionate.","","","","","","","","","","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","","","","Duplicate a handle with new <code>rights</code>, return the new handle …","Returns an empty set of flags.","","","","","","Get the exceptionate.","","","","Exit current process with <code>retcode</code>. The process do not …","Exit the current thread.","Get process exit code if it exited, else returns <code>None</code>.","Get the extension.","Get the extension info.","","Get the thread’s flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","Get the action of a policy <code>condition</code>.","Get an one-shot <code>Receiver</code> for receiving cancel message of …","","","Get the debug address.","Get the address where the dynamic loader will issue a …","Get the kernel object corresponding to this <code>handle_value</code> …","Get the kernel object corresponding to this <code>handle_value</code>, …","Get a futex from the process","Get the handle’s information corresponding to …","","Get information of this job.","Get information of this process.","Get the kernel object corresponding to this <code>handle_value</code>","Get the kernel object corresponding to this <code>handle_value</code> …","Get the kernel object corresponding to this <code>handle_value</code>, …","Create a handle for the exception’s process.","Get the thread’s exception report.","Create a handle for the exception’s thread.","Get the thread’s information.","Get the time this thread has run on cpu.","Create an exception on this thread and wait for the …","","","","","","","","Returns the inner structure <code>Arc&lt;Thread&gt;</code>.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Performs the conversion.","Returns <code>true</code> if all flags are currently set.","Return true if this job has no processes and no child jobs.","Returns <code>true</code> if no flags are currently stored.","Whether this thread is the first thread of a process.","Is the exception type generated by kernel instead of the …","Get the job of the process.","Kill the task. The task do not terminate immediately when …","Kill the job. The job do not terminate immediately when …","","","Merge the policy with <code>parent</code>’s.","","","","","","","","Returns the complement of this set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the parent job.","","Get the policy of the job.","Get the process.","Get KoIDs of Processes.","The thread ends running and takes back the context.","Read one aspect of thread state.","","","","Removes the specified flags in-place.","Remove a handle from the process","Remove all handles from the process.","Remove a handle referring to a kernel object of the given …","Resume the task","","","","","Create the root job.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Inserts or removes the specified flags depending on the …","Set a process as critical to the job.","Set the debug address.","Set the address where the dynamic loader will issue a …","","","","","","Sets one or more security and/or resource policies to an …","Sets timer slack policy to an empty job.","Set whether closing the exception handle will finish …","Set whether the debugger gets a ‘second chance’ at …","","","","","","","","","","","","","","","","","","","","","Start the first thread in the process.","Start execution on the thread.","Setup the instruction and stack pointer, then tart …","","Get whether closing the exception handle will finish …","Get the thread state.","Get process status.","Get whether the debugger gets a ‘second chance’ at …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Suspend the task. Currently only thread or process handles …","","","","Returns the symmetric difference between the flags in <code>self</code> …","Get KoIDs of Threads.","Add the parameter to the time this thread has run on cpu.","","","","","","","","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Apply <code>f</code> to the thread’s flags.","Get the <code>VmAddressRegion</code> of the process.","Wait for process exit and get return code.","Wait until the thread is ready to run (not suspended), and …","Access saved context of current thread, or …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Write one aspect of thread state.","","ELF loading of Zircon and Linux.","Kernel counter.","Extensional ELF loading methods for <code>ElfFile</code>.","Extensional ELF loading methods for <code>VmAddressRegion</code>.","Get the symbol table for dynamic linking (.dynsym section).","Get the program interpreter path name.","Get address of elf phdr","Get address of the given <code>symbol</code>.","Create <code>VMObject</code> from all LOAD segments of <code>elf</code> and map them …","Get total size of all LOAD segments.","Same as <code>load_from_elf</code>, but the <code>vmo</code> is an existing one …","Relocate according to the dynamic relocation section …","Kernel counters array.","Kernel counter.","Kernel counter descriptor.","Head of the descriptor table.","Add a value to the counter.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get kcounter descriptor table from symbols.","Get the value of counter.","","","","","","","","","","","","","","","","","Create a kcounter descriptor by <code>name</code>.","Create a new KCounter.","","","","","","","","","Data of the kcounter arena VMO, consists of the …","Data of the kcounter descriptor VMO, consists of the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Treat the offset as an upper limit when allocating a VMO …","","","Allow VmMappings to be created inside the region with …","Allow VmMappings to be created inside the region with read …","Allow VmMappings to be created inside the region with …","Allow VmMappings to be created inside the new region with …","Allow VmMappings to be created inside the region with …","When randomly allocating subregions, reduce sprawl by …","The VMO is contiguous.","Generic cache policy.","","Set the seek offset relative to the current seek offset of …","Device Address","","Set the seek offset relative to the end of the stream, as …","","The VMO is a child, and is a copy-on-write clone.","Kernel address space.","The base of kernel address space In x86 fuchsia this is …","The size of kernel address space","Generic memory flags.","The VMO is a pager owned VMO created by …","Size of a page","log2(PAGE_SIZE)","Physical Address","","Require that VMO backing the mapping is non-resizable.","The VMO is resizable.","Creation flags for root VmAddressRegion","","Request that the new region be at the specified offset in …","Like SPECIFIC, but permits overwriting existing mappings.  …","Enumeration of possible methods to modify the seek within …","Set the seek offset relative to the start of the stream.","A readable, writable, seekable interface to some …","Information of a Stream","The VMO is backed by RAM, consuming memory. Mutually …","The VMO points to a physical address range, and does not …","Statistics about resources (e.g., memory) used by a task.","","The base of user address space","The size of user address space","","","When reading a list of VMOs pointed to by a process, …","When reading a list of VMOs pointed to by a process, …","Virtual Memory Object Trait","Virtual Address","Virtual Memory Address Regions","Virtual Memory Mapping","Virtual memory containers","Creation flags for VmAddressRegion.","Information of a VmAddressRegion.","Describes a VMO.","Values used by ZX_INFO_PROCESS_VMOS.","","","","","","Get start address of this VMAR.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Create a child VMAR with optional <code>offset</code>.","Create a child VMAR at the <code>offset</code>.","Append a mapping to the VMO’s mapping list.","Append a mapping to the VMO’s mapping list.","Append a mapping to the VMO’s mapping list.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the cache policy.","","","","","","","","","","","","","","","How many <code>align</code> the <code>x</code> needs.","Check whether <code>x</code> is a multiple of <code>align</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unmap all mappings and destroy all sub-regions of VMAR.","","","","","","","","","","","","Commit allocating physical memory.","Commit a page.","Commit pages with an external function f. the vmo is …","Count committed pages of the VMO.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Complete the VmoInfo.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","return true if vmar contains vaddr, or return false.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Get the size of the content stored in the VMO in bytes.","Create a stream from a VMO","Create a child VMO.","Create a child VMO.","Create a child slice as an VMO","Decommit allocated physical memory.","","","","","","","Unmap all mappings within the VMAR, and destroy all …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","","Dump all mappings recursively.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","Find mapping of vaddr","Flags.","","","","","","","","","","","","","","","","","","","","","","","Clone the entire address space and VMOs from source VMAR. …","","","","","","","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","Get VmarFlags of this VMAR.","Get MMUFlags of this VmMapping.","","","","Get information of the socket.","Get information of this VmAddressRegion","Get information of this VMO.","Returns statistics about memory used by a task.","get flags of vaddr","Handle page fault happened on this VMAR.","","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether this VMAR is alive.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns true if the object is backed by a contiguous range …","Returns true if the object is backed by a contiguous range …","Returns true if the object is backed by a contiguous range …","Whether this VMAR is dead.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns true if the object is backed by RAM.","Returns true if the object is backed by RAM.","Returns true if the object size can be changed.","Allocate memory in kernel address space at given physical …","Get the length of VMO.","","Map the <code>vmo</code> into this VMAR.","Map the <code>vmo</code> into this VMAR at given <code>offset</code>.","Map the <code>vmo</code> into this VMAR.","","","","","","","","Create a VM object referring to a specific contiguous …","Create a kernel root VMAR.","Create a new VMO backing on physical memory allocated in …","Create a new VMO, which can be resizable, backing on …","Create a new VMO representing a piece of contiguous …","Create a new root VMAR.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Check whether <code>x</code> is a multiple of <code>PAGE_SIZE</code>.","How many pages the <code>size</code> needs. To avoid overflow and pass …","","","","Pin the given range of the VMO.","Pin the given range of the VMO.","Change protections on a subset of the region of memory in …","query vaddr’s PhysAddr, PhysAddr, PageSize.","Read memory to <code>buf</code> from VMO at <code>offset</code>.","Read data from the stream at the current seek offset","Read data from the stream at a given offset","Read from address space.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Remove a mapping from the VMO’s mapping list.","Remove a mapping from the VMO’s mapping list.","Remove a mapping from the VMO’s mapping list.","If <code>flags &amp; ZX_INFO_VMO_VIA_HANDLE</code>, the handle rights. …","Round down <code>size</code> to a multiple of <code>PAGE_SIZE</code>.","Round up <code>size</code> to a multiple of <code>PAGE_SIZE</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Modify the current seek offset of the stream","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Set the cache policy.","Set the cache policy.","Get the size of the content stored in the VMO in bytes.","Set the size of the content stored in the VMO in bytes, …","Set the length of VMO.","Set the length of this VMO if resizable.","","","","Returns an estimate of the number of unique VmAspaces that …","","","","","","","","","","","","","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Get physical address of the underlying page table.","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Unmaps all VMO mappings and destroys all sub-regions …","Unpin the given range of the VMO.","Unpin the given range of the VMO.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get base address of vdso.","The amount of memory committed to VMOs.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Write memory from <code>buf</code> to VMO at <code>offset</code>.","write data to the stream at the current seek offset or …","Write data to the stream at a given offset","Write to address space.","Resets the range of bytes in the VMO from <code>offset</code> to …"],"i":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,0,1,1,1,1,2,0,0,0,1,1,1,1,0,0,1,1,1,1,1,1,0,0,1,1,0,3,0,3,3,3,0,3,3,4,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,4,3,4,3,4,4,3,4,3,4,3,4,3,4,4,3,4,3,4,4,3,4,3,4,4,4,4,4,4,3,4,3,4,3,4,4,3,4,3,4,3,4,3,4,0,0,5,6,5,5,5,0,0,0,0,0,7,5,8,8,8,8,8,8,9,9,9,0,8,5,0,0,0,0,5,7,7,7,8,5,10,11,10,12,13,14,7,8,9,6,11,10,12,13,14,15,7,8,9,5,6,16,11,10,12,13,14,15,7,8,9,5,6,16,12,11,10,12,13,14,15,7,8,9,5,6,16,10,7,8,9,6,7,8,9,6,7,8,9,6,7,8,9,6,7,8,9,6,7,8,9,6,7,8,9,6,11,10,12,13,14,15,7,8,9,5,6,16,11,10,12,13,14,15,7,8,9,5,6,16,11,10,12,13,14,15,7,8,9,5,6,16,14,11,10,12,13,14,15,7,8,9,5,6,16,11,10,12,13,14,15,7,8,9,5,6,16,7,8,9,5,6,7,8,9,5,6,7,8,9,6,7,8,9,6,7,8,9,6,11,12,14,15,16,10,7,8,9,6,10,13,7,8,9,6,13,7,8,9,5,6,7,8,9,6,11,10,12,13,14,7,7,7,7,7,8,8,8,8,8,9,9,9,9,9,5,6,6,6,6,6,11,10,12,13,14,15,7,8,9,5,6,16,7,8,9,6,7,8,9,6,7,8,9,6,7,8,9,6,7,8,9,6,11,14,7,8,9,6,11,10,12,13,14,7,8,9,6,7,8,9,6,7,8,9,6,11,10,12,13,14,15,7,8,9,5,6,16,11,10,12,13,14,15,7,8,9,5,6,16,11,10,12,13,14,15,7,8,9,5,6,16,11,10,12,13,14,15,7,8,9,5,6,16,7,8,9,6,7,8,9,6,12,12,12,12,11,10,12,13,14,7,8,9,6,10,10,10,7,8,9,6,11,10,12,13,14,15,7,8,9,5,6,16,11,10,12,13,14,15,7,8,9,5,6,16,7,8,9,6,0,11,11,7,8,9,6,11,10,12,13,14,15,7,8,9,5,6,16,11,10,12,13,14,15,7,8,9,5,6,16,7,8,9,6,11,10,12,13,14,11,10,12,13,14,11,10,12,13,14,11,10,12,13,14,11,10,12,13,14,7,8,9,6,7,8,9,6,7,8,9,6,8,7,8,9,5,6,7,8,9,6,10,11,10,12,13,14,15,7,8,9,5,5,6,16,11,10,12,13,14,15,7,8,9,5,6,16,11,10,12,13,14,15,7,8,9,5,6,16,11,10,12,13,14,10,7,8,9,6,13,11,10,12,13,14,15,7,8,9,5,6,16,11,10,12,13,14,15,7,8,9,5,6,16,14,14,10,11,10,12,13,14,15,7,8,9,5,6,16,11,10,12,13,14,15,7,8,9,5,6,16,17,17,0,17,18,0,0,17,17,0,18,0,0,0,0,0,0,19,20,19,21,22,22,19,21,23,24,20,25,26,17,18,19,21,23,24,20,25,26,17,18,22,22,22,19,21,23,24,20,25,26,17,18,26,19,21,23,24,20,25,26,17,18,19,21,23,24,20,25,26,17,18,23,26,23,19,21,23,24,20,25,26,17,18,19,21,23,24,20,25,26,17,18,19,21,23,24,20,25,26,17,18,26,17,26,17,21,21,0,20,25,17,26,22,26,22,22,22,22,22,22,22,22,21,21,21,17,18,19,21,26,17,18,19,21,23,24,20,25,26,17,18,26,21,19,21,19,21,19,21,23,24,20,25,26,17,18,19,21,23,24,20,25,26,17,18,19,21,23,24,20,25,26,17,18,19,21,23,24,20,25,26,17,18,19,21,22,22,22,22,21,21,22,19,21,23,24,20,25,26,17,18,19,21,23,24,20,25,26,17,18,0,22,22,23,0,0,22,22,26,22,22,26,19,21,23,24,20,25,26,17,18,19,21,23,24,20,25,26,17,18,19,21,21,21,21,21,21,23,19,19,26,26,17,19,21,23,24,20,25,26,17,17,18,19,21,23,24,20,25,26,17,18,19,21,23,24,20,25,26,17,18,21,22,22,19,21,23,24,20,25,26,17,18,19,21,23,24,20,25,26,17,18,26,19,21,23,24,20,25,26,17,18,19,21,23,24,20,25,26,17,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,28,29,27,28,30,29,27,28,30,29,27,28,30,30,29,27,28,30,29,27,28,30,30,30,29,27,28,30,30,29,27,28,30,29,27,28,30,29,29,28,28,29,27,28,30,29,27,28,30,27,30,29,27,28,30,29,27,28,30,29,27,28,30,29,27,28,30,28,27,28,29,27,28,30,29,27,28,30,27,30,29,27,28,30,29,27,28,30,30,29,29,27,28,30,29,27,28,30,29,27,28,30,29,27,28,30,29,27,28,30,29,27,28,30,29,27,28,30,31,0,31,0,0,31,31,31,31,0,0,0,32,33,34,31,32,33,34,35,31,36,32,33,34,35,31,36,32,33,34,35,31,36,31,31,31,31,31,31,31,32,33,34,35,31,36,32,33,34,35,31,36,32,32,33,34,35,31,36,32,32,33,34,35,31,36,32,33,34,35,31,36,31,31,31,31,31,32,33,34,35,35,31,31,32,33,34,31,31,36,31,32,33,34,35,31,31,31,31,31,36,32,33,34,35,31,36,31,31,31,31,31,34,34,35,35,31,32,33,34,31,31,31,32,33,34,35,31,36,32,33,34,35,31,36,32,33,34,35,31,36,32,33,34,35,31,36,31,31,32,33,34,31,36,31,32,33,34,35,31,36,32,33,34,35,31,36,31,32,33,34,32,33,34,32,33,34,31,32,33,34,35,31,36,32,33,34,35,31,36,31,32,33,34,34,35,34,34,32,33,34,32,33,34,32,33,34,32,33,34,31,31,31,31,31,32,33,34,35,31,36,32,33,34,35,31,36,32,33,34,35,31,36,32,33,34,31,32,33,34,35,31,36,32,33,34,35,31,36,32,33,34,35,31,36,32,33,34,35,31,36,32,33,34,37,37,38,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,0,37,37,37,37,38,0,0,0,0,37,38,0,37,38,38,38,38,0,0,0,37,37,37,37,38,37,38,37,37,38,0,37,38,37,37,38,37,38,37,38,38,38,38,38,38,38,0,0,38,38,38,38,37,38,38,38,38,38,38,38,38,38,38,37,38,37,39,40,41,37,38,39,40,41,42,43,44,37,38,40,41,42,43,44,37,38,40,41,42,43,44,37,38,37,38,37,38,37,38,37,38,37,38,37,38,37,38,40,41,42,43,44,37,38,40,41,42,43,44,37,38,40,41,42,43,44,37,38,40,41,42,43,44,37,38,40,41,42,43,44,37,38,42,37,38,42,37,38,37,38,37,38,37,38,40,43,44,37,38,37,38,39,39,39,39,39,37,38,37,38,37,38,41,42,43,44,37,37,37,37,37,38,38,38,38,38,40,41,42,43,44,37,38,37,38,37,38,37,38,37,38,39,42,37,38,42,44,37,38,39,41,40,37,38,37,38,37,38,40,41,42,43,44,37,38,40,41,42,43,44,37,38,40,41,42,43,44,37,38,40,41,42,43,44,37,38,39,37,38,37,38,39,40,41,37,38,40,41,42,37,38,0,42,40,41,42,43,44,37,38,40,41,42,43,44,37,38,37,38,39,39,37,38,42,40,41,42,43,44,37,38,40,41,42,43,44,37,38,39,37,38,39,40,41,39,40,41,39,40,41,39,40,41,39,40,41,37,38,37,38,37,38,42,37,38,37,38,40,41,42,43,44,37,37,38,40,41,42,43,44,37,38,40,41,42,43,44,37,38,39,41,37,38,40,41,42,43,44,37,38,40,41,42,43,44,37,38,38,39,0,40,40,40,40,41,42,43,44,37,38,40,41,42,43,44,37,38,45,46,46,0,0,0,47,48,47,48,47,48,47,48,47,48,46,0,0,0,0,0,0,0,0,0,0,0,0,47,0,0,0,0,0,0,48,47,47,0,0,47,48,49,49,50,51,50,52,53,54,55,52,53,54,52,53,54,53,56,57,58,59,60,52,51,45,56,57,56,57,58,61,62,59,60,47,55,52,51,53,49,63,64,65,50,54,66,48,45,46,56,57,58,61,62,59,60,47,55,52,51,53,49,63,64,65,50,54,66,48,45,46,56,57,58,61,62,59,60,47,55,52,51,53,49,63,64,65,50,54,66,48,45,46,45,45,45,45,45,45,45,56,57,58,61,62,59,60,47,55,52,51,53,49,63,64,65,50,54,66,48,45,46,56,57,58,61,62,59,60,47,55,52,51,53,49,63,64,65,50,54,66,48,45,46,59,60,56,57,58,61,62,59,60,47,55,52,51,53,49,63,64,65,50,54,66,48,45,46,56,57,58,61,62,59,60,47,55,52,51,53,49,63,64,65,50,54,66,48,45,46,56,57,58,61,62,59,60,47,55,52,51,53,49,63,64,65,50,54,66,48,45,46,47,55,52,51,53,49,63,64,65,50,54,66,48,45,46,47,55,52,51,53,49,63,64,65,50,54,66,48,45,46,45,45,45,55,57,61,53,50,66,52,51,53,51,45,57,45,47,55,52,51,53,49,64,65,50,54,66,48,45,45,56,57,58,61,59,60,47,55,52,51,53,49,64,65,50,54,66,48,45,45,45,45,45,46,56,57,58,61,61,62,59,60,47,55,52,51,53,49,63,64,65,50,54,66,66,48,45,46,45,45,45,45,45,45,56,57,58,59,60,53,45,51,51,45,45,56,57,58,61,62,59,60,47,55,52,51,53,49,63,64,65,50,54,66,48,45,46,56,57,58,61,62,59,60,47,55,52,51,53,49,63,64,65,50,54,66,48,45,46,56,57,58,61,62,59,60,47,55,52,51,53,49,63,64,65,50,54,66,48,45,46,56,57,58,61,62,59,60,47,55,52,51,53,49,63,64,65,50,54,66,48,45,46,45,45,61,66,56,57,58,59,60,55,52,51,53,64,65,54,66,48,45,56,58,59,60,45,55,60,56,57,58,61,62,59,60,47,55,52,51,53,49,63,64,65,50,54,66,48,45,46,56,57,58,61,62,59,60,47,55,52,51,53,49,63,64,65,50,54,66,48,45,46,58,45,57,57,53,59,59,57,45,58,56,57,58,61,62,59,60,47,55,52,51,53,49,63,64,65,50,54,66,48,45,46,56,57,58,61,62,59,60,47,55,52,51,53,49,63,64,65,50,54,66,48,45,46,60,45,56,57,58,59,60,56,57,58,59,60,56,57,58,59,60,56,57,58,59,60,56,57,58,59,60,61,66,45,45,45,55,54,47,55,52,51,53,49,63,64,65,50,54,66,48,45,46,45,55,56,57,58,61,62,59,60,47,55,52,51,53,49,63,64,65,50,54,66,48,45,46,56,57,58,61,62,59,60,47,55,52,51,53,49,63,64,65,50,54,66,48,45,46,61,50,56,57,58,61,62,59,60,47,55,52,51,53,49,63,64,65,50,54,66,48,45,46,56,57,58,59,60,45,56,57,58,61,62,59,60,47,55,52,51,53,49,63,64,65,50,54,66,48,45,46,56,57,58,61,62,59,60,47,55,52,51,53,49,63,64,65,50,54,66,48,45,46,58,59,58,58,58,60,56,57,58,61,62,59,60,47,55,52,51,53,49,63,64,65,50,54,66,48,45,46,56,57,58,61,62,59,60,47,55,52,51,53,49,63,64,65,50,54,66,48,45,46,67,68,69,70,71,72,73,74,75,75,76,76,0,77,77,77,77,77,77,77,77,77,77,0,77,78,75,75,77,0,0,0,0,79,80,78,80,78,80,79,0,0,0,0,75,77,76,76,76,76,76,76,76,76,76,76,76,0,0,80,0,0,80,74,79,77,0,78,80,0,0,77,80,0,0,0,80,0,0,0,80,0,0,0,80,80,81,78,76,76,82,83,83,84,85,83,86,87,81,88,89,84,85,83,86,87,90,91,92,80,93,88,74,82,76,75,94,79,95,78,81,77,89,84,85,83,86,87,90,91,92,80,93,88,74,82,76,75,94,79,95,78,81,77,89,84,85,83,86,87,90,91,92,80,93,88,74,82,76,75,94,79,95,78,81,77,81,81,81,81,81,81,81,90,89,84,85,83,86,87,90,91,92,80,93,88,74,82,76,75,94,79,95,78,81,77,89,84,85,83,86,87,90,91,92,80,93,88,74,82,76,75,94,79,95,78,81,77,89,84,85,83,86,87,90,91,92,80,93,88,74,82,76,75,94,79,95,78,81,77,83,85,0,89,84,85,83,86,87,90,91,92,80,93,88,74,82,76,75,94,79,95,78,81,77,89,84,85,83,86,87,90,91,92,80,93,88,74,82,76,75,94,79,95,78,81,77,85,92,80,88,74,82,76,75,94,79,78,81,77,92,80,88,74,82,76,75,94,79,78,81,77,81,81,82,81,87,83,86,87,89,85,83,87,96,85,83,87,95,93,88,79,95,81,77,90,81,84,85,86,90,83,81,80,75,79,81,77,96,85,83,87,83,90,83,83,87,81,87,84,85,83,86,87,92,80,74,82,76,75,94,79,78,81,81,81,81,81,77,89,84,85,83,86,87,90,91,92,80,93,88,74,82,76,75,94,79,95,78,81,77,81,81,81,81,88,83,85,83,83,83,83,83,83,83,81,85,83,83,83,83,84,87,84,87,87,90,95,81,84,85,83,86,87,90,81,81,81,89,84,85,83,86,87,90,91,92,80,93,88,74,82,76,75,94,79,95,78,81,77,89,84,85,83,86,87,90,91,92,80,93,88,74,82,76,75,94,79,95,78,81,77,89,84,85,83,86,87,90,91,92,80,93,88,74,82,76,75,94,79,95,78,81,77,89,84,85,83,86,87,90,91,92,80,93,88,74,82,76,75,94,79,95,78,81,77,97,81,85,81,87,80,83,96,85,83,87,88,84,85,83,86,87,79,81,81,89,84,85,83,86,87,90,91,92,80,93,88,74,82,76,75,94,79,95,78,81,77,89,84,85,83,86,87,90,91,92,80,93,88,74,82,76,75,94,79,95,78,81,77,95,85,81,85,87,85,90,87,85,83,87,81,83,83,83,96,85,83,87,95,85,89,84,85,83,86,87,90,91,92,80,93,88,74,82,76,75,94,79,95,78,81,77,89,84,85,83,86,87,90,91,92,80,93,88,74,82,76,75,94,79,95,78,81,77,81,83,83,83,84,85,83,86,87,85,85,84,84,84,85,83,86,87,84,85,83,86,87,84,85,83,86,87,84,85,83,86,87,83,87,87,95,84,87,83,84,81,81,96,85,83,87,81,83,87,92,80,88,74,82,76,75,94,79,78,81,77,81,89,84,85,83,86,87,90,91,92,80,93,88,74,82,76,75,94,79,95,78,78,81,77,89,84,85,83,86,87,90,91,92,80,93,88,74,82,76,75,94,79,95,78,81,77,89,84,85,83,86,87,90,91,92,80,93,88,74,82,76,75,94,79,95,78,81,77,84,85,83,86,87,81,89,84,85,83,86,87,90,91,92,80,93,88,74,82,76,75,94,79,95,78,81,77,89,84,85,83,86,87,90,91,92,80,93,88,74,82,76,75,94,79,95,78,81,77,87,83,83,90,87,89,84,85,83,86,87,90,91,92,80,93,88,74,82,76,75,94,79,95,78,81,77,89,84,85,83,86,87,90,91,92,80,93,88,74,82,76,75,94,79,95,78,81,77,87,98,0,0,0,0,99,99,99,99,100,99,100,99,0,0,0,0,101,102,103,101,104,102,103,101,104,102,103,101,104,102,103,101,104,102,103,101,104,102,103,101,104,102,103,101,104,102,103,101,104,104,102,103,101,104,102,103,101,104,102,101,102,103,101,104,102,103,101,104,102,103,101,104,102,103,101,104,103,101,102,103,101,104,102,103,101,104,102,102,102,103,101,104,102,103,101,104,102,103,101,104,102,103,101,104,102,103,101,104,102,103,101,104,102,103,101,104,102,103,101,104,102,103,101,104,105,106,106,105,105,105,105,105,105,107,0,108,109,0,106,109,106,107,0,0,0,0,107,0,0,0,106,105,107,105,106,105,105,0,109,0,0,107,107,0,106,0,0,108,108,107,107,0,0,0,0,0,0,0,0,0,106,108,110,111,112,111,106,105,107,111,111,113,113,112,106,108,110,111,114,112,109,115,105,116,117,118,107,119,106,108,110,111,114,112,109,115,105,116,117,118,107,119,106,108,110,111,114,112,109,115,105,116,117,118,107,119,106,105,107,106,105,107,106,105,107,106,105,107,106,105,107,106,105,107,106,105,107,106,108,110,111,114,112,109,115,105,116,117,118,107,119,106,108,110,111,114,112,109,115,105,116,117,118,107,119,113,106,108,110,111,114,112,109,115,105,116,117,118,107,119,0,0,106,108,110,111,114,112,109,115,105,116,117,118,107,119,106,108,110,111,114,112,109,115,105,116,117,118,107,119,111,106,108,105,107,106,108,105,107,106,105,107,113,113,113,113,106,105,107,113,106,111,105,107,112,110,113,112,112,113,115,117,118,107,112,119,111,106,105,107,114,112,111,106,105,107,106,108,105,107,106,105,107,111,118,106,106,106,106,106,108,110,111,114,112,109,105,105,105,105,105,116,107,107,107,107,107,111,106,108,110,111,114,112,109,115,105,116,117,118,107,119,106,105,107,106,105,107,106,105,107,106,105,107,111,114,106,105,107,110,111,112,111,111,111,106,105,107,110,111,112,106,105,107,106,105,107,106,105,107,106,108,110,111,114,112,109,115,105,116,117,118,107,119,106,108,110,111,114,112,109,115,105,116,117,118,107,119,106,108,110,111,114,112,109,115,105,116,117,118,107,119,106,108,110,111,114,112,109,115,105,116,117,118,107,119,111,106,105,107,113,113,112,111,106,105,107,113,113,112,0,113,111,111,111,111,111,110,111,112,106,105,107,112,111,112,112,112,111,106,105,107,106,108,110,111,114,112,109,115,105,116,117,118,107,119,106,108,110,111,114,112,109,115,105,116,117,118,107,119,0,0,106,105,107,113,113,111,114,113,110,110,111,106,105,107,113,113,112,118,0,0,106,108,110,111,114,112,109,115,105,116,117,118,107,119,106,108,110,111,114,112,109,115,105,116,117,118,107,119,110,106,105,107,113,112,112,112,113,112,110,111,112,112,110,111,112,110,111,112,110,111,112,110,111,112,106,105,107,106,105,107,106,105,107,111,106,108,105,107,106,105,107,106,108,108,110,111,114,112,109,109,115,105,116,117,118,107,119,106,108,110,111,114,112,109,115,105,116,117,118,107,119,106,108,110,111,114,112,109,115,105,116,117,118,107,119,110,111,112,106,105,107,111,113,113,106,108,110,111,114,112,109,115,105,116,117,118,107,119,106,108,110,111,114,112,109,115,105,116,117,118,107,119,111,0,106,108,110,111,114,112,109,115,105,116,117,118,107,119,106,108,110,111,114,112,109,115,105,116,117,118,107,119,113,110,110,111,113],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[],["zxerror",4]],[[]],null,null,null,[[["zxerror",4]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[["error",4]]],null,[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["zxresult",6]],null,null,null,[[]],[[]],[[]],[[]],null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],null,null,[[]],[[]],null,null,null,null,null,null,null,null,null,[[["signalhandler",6]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[["u32",15]],["arc",3]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["koid",6]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["string",3]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[["str",15]]],[[],["signal",3]],[[["signal",3],["signal",3]]],[[["signal",3]]],[[["signal",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["severity",4],["u32",15],["u64",15],["u64",15],["str",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["zxresult",6]],[[["signalhandler",6]]],[[["signalhandler",6]]],[[["signalhandler",6]]],[[["signalhandler",6]]],[[["signalhandler",6]]],[[]],[[]],[[]],[[]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["arc",3],["u64",15]],["zxresult",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["interruptflags",3]]],[[["interruptoptions",3]]],[[["iommuperms",3]]],[[["resourceflags",3]]],[[]],[[]],[[]],[[]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["resourceflags",3]],["zxresult",6]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["interruptflags",3]],[[],["interruptoptions",3]],[[],["iommuperms",3]],[[],["resourcekind",4]],[[],["resourceflags",3]],[[]],[[]],[[]],[[]],[[]],[[["interruptflags",3]],["ordering",4]],[[["interruptoptions",3]],["ordering",4]],[[["iommuperms",3]],["ordering",4]],[[["resourceflags",3]],["ordering",4]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["arc",3,[["iommu",3]]],["u64",15]],["arc",3]],[[],["arc",3]],[[["str",15],["resourcekind",4],["usize",15],["usize",15],["resourceflags",3]],["arc",3]],[[],["btiinfo",3]],[[],["resourceinfo",3]],[[],["zxresult",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["bool",15],["bool",15]],["zxresult",6,[["vec",3,[["devvaddr",6]]]]]],[[["interruptflags",3]],["bool",15]],[[["interruptoptions",3]],["bool",15]],[[["iommuperms",3]],["bool",15]],[[["resourcekind",4]],["bool",15]],[[["resourceflags",3]],["bool",15]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u32",15]],["option",4]],[[["u32",15]],["option",4]],[[["u32",15]],["option",4]],[[["u32",15]],["option",4]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["btiinfo",3]],[[],["resourceinfo",3]],[[]],[[]],[[]],[[]],[[],["koid",6]],[[],["koid",6]],[[],["koid",6]],[[],["koid",6]],[[],["koid",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["arc",3,[["vmobject",3]]],["usize",15],["usize",15],["iommuperms",3]],["zxresult",6]],[[["arc",3,[["vmobject",3]]],["usize",15],["usize",15],["iommuperms",3]],["zxresult",6]],[[],["usize",15]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[["interruptflags",3]],["bool",15]],[[["interruptoptions",3]],["bool",15]],[[["iommuperms",3]],["bool",15]],[[["resourceflags",3]],["bool",15]],[[["arc",3,[["ipcinode",8]]],["u32",15],["bool",15]],["zxresult",6,[["arc",3]]]],[[["usize",15],["interruptoptions",3]],["zxresult",6,[["arc",3]]]],[[],["arc",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["interruptflags",3]],["option",4,[["ordering",4]]]],[[["interruptoptions",3]],["option",4,[["ordering",4]]]],[[["iommuperms",3]],["option",4,[["ordering",4]]]],[[["resourceflags",3]],["option",4,[["ordering",4]]]],null,[[["arc",3],["arc",3,[["vmobject",3]]],["usize",15],["usize",15],["iommuperms",3]],["zxresult",6,[["arc",3,[["pinnedmemorytoken",3]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["str",15]]],[[["str",15]]],[[["str",15]]],[[["str",15]]],[[["str",15]]],[[],["signal",3]],[[],["signal",3]],[[],["signal",3]],[[],["signal",3]],[[],["signal",3]],[[["signal",3],["signal",3]]],[[["signal",3],["signal",3]]],[[["signal",3],["signal",3]]],[[["signal",3],["signal",3]]],[[["signal",3],["signal",3]]],[[["signal",3]]],[[["signal",3]]],[[["signal",3]]],[[["signal",3]]],[[["signal",3]]],[[["signal",3]]],[[["signal",3]]],[[["signal",3]]],[[["signal",3]]],[[["signal",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["i64",15]],["zxresult",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["u32",15]],["result",4,[["u32",15]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[["arc",3]],["zxresult",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["resourcekind",4]],["zxresult",6]],[[["resourcekind",4],["usize",15],["usize",15]],["zxresult",6]],[[["arc",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u64",15],["u64",15],["pciaddrspace",4]],["zxresult",6]],[[["pciecamregion",3]],["zxresult",6]],[[["usize",15],["pciirqswizzlelut",3]],["zxresult",6]],[[["signalhandler",6]]],[[],["zxresult",6]],[[],["zxresult",6]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["option",4,[["pciroot",3]]]],[[],["option",4,[["pciroot",3]]]],[[],["option",4,[["arc",3,[["pcieupstream",3]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["pciedeviceinfo",3]],[[],["pcieirqmode",4]],[[]],[[]],[[["usize",15],["usize",15]],["zxresult",6,[["u32",15]]]],[[["usize",15],["usize",15],["u32",15]],["zxresult",6]],null,[[],["mmiopcieaddressprovider",3]],[[],["piopcieaddressprovider",3]],[[]],null,[[],["arc",3,[["pciedevice",3]]]],null,[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["bool",15]],["zxresult",6]],[[["bool",15]],["zxresult",6]],[[["usize",15]]],[[["usize",15]]],[[["bool",15]],["zxresult",6]],[[],["zxresult",6]],[[],["zxresult",6]],[[["pcieirqmode",4]],["bool",15]],[[["pciaddrspace",4]],["bool",15]],[[["usize",15]],["zxresult",6,[["arc",3,[["sharedlegacyirqhandler",3]]]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["u32",15]],["zxresult",6,[["pciebarinfo",3]]]],[[["usize",15],["usize",15],["usize",15]],["option",4]],[[["pcieirqmode",4]],["zxresult",6,[["pcieirqmodecaps",3]]]],[[["usize",15]],["zxresult",6]],[[],["koid",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["arc",3,[["ipcinode",8]]],["weak",3,[["ipcinode",8]]]]],[[["i32",15]],["zxresult",6,[["arc",3,[["interrupt",3]]]]]],[[],["arc",3,[["mutex",6,[["regionallocator",3]]]]]],[[],["arc",3,[["mutex",6,[["regionallocator",3]]]]]],[[],["arc",3,[["mutex",6,[["regionallocator",3]]]]]],[[],["arc",3,[["mutex",6,[["regionallocator",3]]]]]],[[],["string",3]],[[["arc",3,[["ipcinode",8]]]],["arc",3,[["pciedevicekobject",3]]]],[[],["pcinodetype",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["arc",3,[["mutex",6,[["regionallocator",3]]]]]],[[],["arc",3,[["mutex",6,[["regionallocator",3]]]]]],null,[[["u8",15],["u8",15],["u8",15],["u8",15],["usize",15]],["zxresult",6,[["u32",15]]]],[[["u8",15],["u8",15],["u8",15],["u8",15],["u32",15],["usize",15]],["zxresult",6]],[[],["arc",3,[["mutex",6,[["regionallocator",3]]]]]],[[],["arc",3,[["mutex",6,[["regionallocator",3]]]]]],null,[[["usize",15],["box",3,[["fn",8]]]]],[[["usize",15],["box",3,[["fn",8]]]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["arc",3,[["pcieaddressprovider",8]]]],["zxresult",6]],[[["pcieirqmode",4],["usize",15]],["zxresult",6]],[[["str",15]]],[[],["signal",3]],[[["signal",3],["signal",3]]],[[["signal",3]]],[[["signal",3]]],null,[[],["zxresult",6]],[[["u64",15],["u64",15],["pciaddrspace",4]],["zxresult",6]],null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["u32",15]],["result",4,[["u32",15]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["str",15]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],null,[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["pciirqswizzlelut",3]],[[]],[[],["zxresult",6]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,[[["signalhandler",6]]],[[["signalhandler",6]]],[[["signalhandler",6]]],[[]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["socketflags",3]]],[[]],[[],["u32",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["arc",3],["messagepacket",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["zxresult",6,[["messagepacket",3]]]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["socketflags",3]],[[]],[[["socketflags",3]],["ordering",4]],[[]],[[],["bool",15]],[[]],[[["usize",15],["usize",15]]],[[["u32",15]],["zxresult",6]],null,[[],["messagepacket",3]],[[],["socketflags",3]],[[]],[[]],[[]],[[]],[[]],[[["socketflags",3]],["bool",15]],[[["socketinfo",3]],["bool",15]],[[["intoiterator",8]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u32",15]],["option",4]],[[["u32",15]]],[[["u32",15]]],[[["intoiterator",8]]],[[],["u64",15]],[[],["socketinfo",3]],[[]],[[],["u32",15]],null,[[]],[[],["koid",6]],[[],["koid",6]],[[],["koid",6]],[[]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["bool",15]],[[],["bool",15]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[["socketflags",3]],["bool",15]],[[["socketinfo",3]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["socketflags",3]],["option",4,[["ordering",4]]]],[[],["zxresult",6,[["arc",3,[["kernelobject",8]]]]]],[[],["zxresult",6,[["arc",3,[["kernelobject",8]]]]]],[[],["zxresult",6,[["arc",3,[["kernelobject",8]]]]]],[[],["zxresult",6,[["messagepacket",3]]]],[[["usize",15],["usize",15]],["zxresult",6,[["usize",15]]]],[[["bool",15]],["zxresult",6,[["usize",15]]]],[[],["koid",6]],[[],["koid",6]],[[],["koid",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["bool",15]]],[[["str",15]]],[[["str",15]]],[[["str",15]]],[[["usize",15]],["zxresult",6]],[[["u32",15]]],[[["usize",15]],["zxresult",6]],[[["bool",15],["bool",15]],["zxresult",6]],[[],["signal",3]],[[],["signal",3]],[[],["signal",3]],[[["signal",3],["signal",3]]],[[["signal",3],["signal",3]]],[[["signal",3],["signal",3]]],[[["signal",3]]],[[["signal",3]]],[[["signal",3]]],[[["signal",3]]],[[["signal",3]]],[[["signal",3]]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["messagepacket",3]],["zxresult",6]],[[["usize",15],["usize",15]],["zxresult",6,[["usize",15]]]],[[],["zxresult",6,[["usize",15]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["signalhandler",6]]],[[["signalhandler",6]]],[[["signalhandler",6]]],[[]],[[]],[[],["signal",3]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["rights",3]]],[[["signal",3]]],[[]],[[]],[[],["u32",15]],[[],["u32",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["handle",3]],[[],["rights",3]],[[],["signal",3]],[[]],[[]],[[]],[[["rights",3]],["ordering",4]],[[["signal",3]],["ordering",4]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[]],[[],["handlebasicinfo",3]],[[],["handleinfo",3]],[[],["rights",3]],[[],["signal",3]],[[]],[[]],[[["box",3]],["result",4,[["box",3,[["kernelobject",8]]],["box",3]]]],[[["arc",3]],["result",4,[["arc",3,[["kernelobject",8]]],["arc",3]]]],[[],["option",4]],[[["rc",3]],["result",4,[["rc",3,[["kernelobject",8]]],["rc",3]]]],[[],["option",4]],[[]],[[]],[[["rights",3]],["bool",15]],[[["signal",3]],["bool",15]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u32",15]],["option",4]],[[["u32",15]],["option",4]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["koid",6]],["zxresult",6,[["arc",3,[["kernelobject",8]]]]]],[[],["handleinfo",3]],[[],["u64",15]],[[],["u64",15]],[[],["handlebasicinfo",3]],null,[[]],[[]],[[],["koid",6]],[[],["koid",6]],null,[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[["rights",3]],["bool",15]],[[["signal",3]],["bool",15]],[[]],[[],["arc",3]],[[["arc",3,[["kernelobject",8]]],["rights",3]]],[[]],[[]],[[["arc",3]],["u32",15]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["rights",3]],["option",4,[["ordering",4]]]],[[["signal",3]],["option",4,[["ordering",4]]]],[[],["zxresult",6,[["arc",3,[["kernelobject",8]]]]]],[[],["koid",6]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["arc",3],["signal",3],["arc",3],["u64",15]]],[[["bool",15]]],[[["bool",15]]],[[["str",15]]],[[["str",15]]],[[["str",15]]],[[],["signal",3]],[[],["signal",3]],[[],["signal",3]],[[["signal",3],["signal",3]]],[[["signal",3],["signal",3]]],[[["signal",3],["signal",3]]],[[["signal",3]]],[[["signal",3]]],[[["signal",3]]],[[["signal",3]]],[[["signal",3]]],[[["signal",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["u32",15]],["zxresult",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["str",15]],[[],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["signal",3],["u32",15]],["zxresult",6,[["signal",3]]]],[[["arc",3],["signal",3]]],[[]],[[["str",15],["signal",3]]],[[["str",15]]],[[["signal",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["signalhandler",6]]],[[["signalhandler",6]]],[[["signalhandler",6]]],[[["signalhandler",6]]],[[["signalhandler",6]]],null,null,[[]],[[],["signal",3]],[[],["signal",3]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["portoptions",3]]],[[]],[[],["u32",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["packettype",4]],[[],["packetsignal",3]],[[],["packetguestbell",3]],[[],["packetguestmem",3]],[[],["packetguestio",3]],[[],["packetguestvcputype",4]],[[],["packetguestvcpudata",19]],[[],["packetguestvcpuinterrupt",3]],[[],["packetguestvcpustartup",3]],[[],["packetguestvcpu",3]],[[],["packetinterrupt",3]],[[],["portpacketrepr",3]],[[],["payloadrepr",4]],[[],["portoptions",3]],[[],["slack",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["portoptions",3]],["ordering",4]],[[]],[[],["bool",15]],null,[[]],null,null,null,null,[[],["packetguestbell",3]],[[],["packetguestmem",3]],[[],["packetguestio",3]],null,[[]],[[]],[[]],[[["packettype",4]],["bool",15]],[[["packetsignal",3]],["bool",15]],[[["packetguestbell",3]],["bool",15]],[[["packetguestmem",3]],["bool",15]],[[["packetguestio",3]],["bool",15]],[[["packetguestvcputype",4]],["bool",15]],[[["packetguestvcpuinterrupt",3]],["bool",15]],[[["packetguestvcpustartup",3]],["bool",15]],[[],["bool",15]],[[["packetinterrupt",3]],["bool",15]],[[["portpacketrepr",3]],["bool",15]],[[["payloadrepr",4]],["bool",15]],[[["portoptions",3]],["bool",15]],[[["intoiterator",8]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["portpacketrepr",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["portpacket",3]]],[[]],[[]],[[]],[[["u32",15]],["option",4]],[[["u32",15]]],[[["u32",15]]],[[["intoiterator",8]]],[[],["u64",15]],[[]],[[],["koid",6]],[[],["koid",6]],[[],["koid",6]],[[],["koid",6]],[[],["koid",6]],null,[[]],null,null,[[]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["bool",15]],[[],["bool",15]],null,null,[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[["packetsignal",3]],["bool",15]],[[["packetguestbell",3]],["bool",15]],[[["packetguestmem",3]],["bool",15]],[[["packetguestio",3]],["bool",15]],[[["packetguestvcpuinterrupt",3]],["bool",15]],[[["packetguestvcpustartup",3]],["bool",15]],[[["packetinterrupt",3]],["bool",15]],[[["portpacketrepr",3]],["bool",15]],[[["payloadrepr",4]],["bool",15]],[[["portoptions",3]],["bool",15]],[[],["arc",3]],[[["atomici32",3]],["arc",3]],[[["u32",15]],["zxresult",6,[["arc",3]]]],[[],["arc",3]],[[]],null,[[["duration",3]],["arc",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4,[["arc",3,[["thread",3]]]]]],[[["portoptions",3]],["option",4,[["ordering",4]]]],[[],["zxresult",6,[["arc",3,[["kernelobject",8]]]]]],[[],["zxresult",6,[["arc",3]]]],null,[[]],[[],["zxresult",6]],[[],["koid",6]],[[]],[[["i32",15],["usize",15],["usize",15],["arc",3],["option",4,[["arc",3,[["thread",3]]]]]],["zxresult",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["arc",3],["duration",3],["duration",3]]],[[["bool",15]]],[[["str",15]]],[[["str",15]]],[[["str",15]]],[[["str",15]]],[[["str",15]]],[[],["signal",3]],[[],["signal",3]],[[],["signal",3]],[[],["signal",3]],[[],["signal",3]],[[["signal",3],["signal",3]]],[[["signal",3],["signal",3]]],[[["signal",3],["signal",3]]],[[["signal",3],["signal",3]]],[[["signal",3],["signal",3]]],[[["signal",3]]],[[["signal",3]]],[[["signal",3]]],[[["signal",3]]],[[["signal",3]]],[[["signal",3]]],[[["signal",3]]],[[["signal",3]]],[[["signal",3]]],[[["signal",3]]],null,null,[[]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["arc",3],["i32",15]]],[[["arc",3]]],[[["arc",3],["i32",15],["option",4,[["arc",3,[["thread",3]]]]],["option",4,[["arc",3,[["thread",3]]]]]]],[[["usize",15]],["usize",15]],[[]],[[["slack",4]],["arc",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["handle",3]],["handlevalue",6]],[[["vec",3,[["handle",3]]]],["vec",3,[["handlevalue",6]]]],[[["signalhandler",6]]],[[["signalhandler",6]]],[[["signalhandler",6]]],[[["signalhandler",6]]],[[["signalhandler",6]]],[[]],[[["basicpolicy",3]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["threadflag",3]]],[[]],[[],["usize",15]],[[]],[[]],[[["threadstate",4],["duration",3],["option",4,[["receiver",3]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["policycondition",4]],["zxresult",6]],[[],["zxresult",6]],[[["timerslackpolicy",3]],["zxresult",6]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["vec",3,[["koid",6]]]],[[],["exceptionreport",3]],[[],["exceptiontype",4]],[[],["jobpolicy",3]],[[],["setpolicyoptions",4]],[[],["basicpolicy",3]],[[],["policycondition",4]],[[],["policyaction",4]],[[],["timerslackpolicy",3]],[[],["status",4]],[[],["threadstatekind",4]],[[],["threadflag",3]],[[],["threadstate",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["threadflag",3]],["ordering",4]],[[]],null,[[],["bool",15]],[[],["zxresult",6,[["usercontext",3]]]],[[["arc",3],["str",15]],["zxresult",6,[["arc",3]]]],[[["arc",3]],["arc",3]],[[["arc",3],["str",15]],["zxresult",6,[["arc",3]]]],[[["rights",3]],["zxresult",6,[["arc",3,[["channel",3]]]]]],[[["arc",3]],["zxresult",6,[["arc",3]]]],[[["arc",3],["str",15]],["zxresult",6,[["arc",3]]]],[[["arc",3],["str",15]],["zxresult",6,[["arc",3]]]],[[],["arc",3,[["exceptionate",3]]]],[[],["arc",3,[["exceptionate",3]]]],[[],["arc",3,[["exceptionate",3]]]],[[],["arc",3,[["exceptionate",3]]]],null,[[],["jobinfo",3]],[[],["jobpolicy",3]],[[]],[[],["processinfo",3]],[[],["threadflag",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["handlevalue",6]],["zxresult",6,[["handlevalue",6]]]],[[]],[[["exceptiontype",4]],["bool",15]],[[["policyaction",4]],["bool",15]],[[["status",4]],["bool",15]],[[["threadflag",3]],["bool",15]],[[["threadstate",4]],["bool",15]],[[],["arc",3,[["exceptionate",3]]]],[[],["arc",3,[["exceptionate",3]]]],[[],["arc",3,[["exceptionate",3]]]],[[],["arc",3,[["exceptionate",3]]]],[[["i64",15]]],[[]],[[],["option",4,[["i64",15]]]],[[],["box",3]],[[],["box",3]],[[["intoiterator",8]]],[[],["threadflag",3]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]],["option",4]],[[["usize",15]]],[[["usize",15]]],[[["intoiterator",8]]],[[["policycondition",4]],["option",4,[["policyaction",4]]]],[[["handlevalue",6]],["zxresult",6,[["receiver",3]]]],[[["koid",6]],["zxresult",6,[["arc",3,[["kernelobject",8]]]]]],[[["koid",6]],["zxresult",6,[["arc",3,[["kernelobject",8]]]]]],[[],["usize",15]],[[],["usize",15]],[[["handlevalue",6]],["zxresult",6]],[[["handlevalue",6],["rights",3]],["zxresult",6,[["arc",3,[["kernelobject",8]]]]]],[[["atomici32",3]],["arc",3,[["futex",3]]]],[[["handlevalue",6]],["zxresult",6,[["handlebasicinfo",3]]]],[[],["u64",15]],[[],["jobinfo",3]],[[],["processinfo",3]],[[["handlevalue",6]],["zxresult",6,[["arc",3,[["kernelobject",8]]]]]],[[["handlevalue",6]],["zxresult",6]],[[["handlevalue",6],["rights",3]],["zxresult",6,[["arc",3,[["kernelobject",8]]]]]],[[],["zxresult",6,[["handle",3]]]],[[],["zxresult",6,[["exceptionreport",3]]]],[[],["handle",3]],[[],["threadinfo",3]],[[],["u64",15]],[[["exceptiontype",4]]],null,[[]],[[],["koid",6]],[[],["koid",6]],[[],["koid",6]],[[],["koid",6]],[[],["koid",6]],[[],["arc",3,[["thread",3]]]],[[]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["zxresult",6]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["arc",3,[["job",3]]]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[["status",4]],["bool",15]],[[["threadflag",3]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["option",4,[["arc",3]]]],[[["threadflag",3]],["option",4,[["ordering",4]]]],[[],["jobpolicy",3]],[[],["arc",3]],[[],["vec",3,[["koid",6]]]],[[["box",3,[["usercontext",3]]]]],[[["threadstatekind",4]],["zxresult",6,[["usize",15]]]],[[],["koid",6]],[[],["koid",6]],[[],["koid",6]],[[]],[[["handlevalue",6]],["zxresult",6,[["handle",3]]]],[[],["zxresult",6,[["vec",3,[["handle",3]]]]]],[[["handlevalue",6]],["zxresult",6,[["arc",3,[["kernelobject",8]]]]]],[[]],[[]],[[]],[[]],null,[[],["arc",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["bool",15]]],[[["arc",3],["bool",15]],["zxresult",6]],[[["usize",15]]],[[["usize",15]]],[[["str",15]]],[[["str",15]]],[[["str",15]]],[[["str",15]]],[[["str",15]]],[[["setpolicyoptions",4]],["zxresult",6]],[[["timerslackpolicy",3]],["zxresult",6]],[[["u32",15]],["zxresult",6]],[[["u32",15]],["zxresult",6]],[[],["signal",3]],[[],["signal",3]],[[],["signal",3]],[[],["signal",3]],[[],["signal",3]],[[["signal",3],["signal",3]]],[[["signal",3],["signal",3]]],[[["signal",3],["signal",3]]],[[["signal",3],["signal",3]]],[[["signal",3],["signal",3]]],[[["signal",3]]],[[["signal",3]]],[[["signal",3]]],[[["signal",3]]],[[["signal",3]]],[[["signal",3]]],[[["signal",3]]],[[["signal",3]]],[[["signal",3]]],[[["signal",3]]],[[["arc",3],["usize",15],["usize",15],["option",4,[["handle",3]]],["usize",15],["threadfn",6]],["zxresult",6]],[[["arc",3],["threadfn",6]],["zxresult",6]],[[["arc",3],["usize",15],["usize",15],["usize",15],["usize",15],["threadfn",6]],["zxresult",6]],null,[[],["u32",15]],[[],["threadstate",4]],[[],["status",4]],[[],["u32",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["vec",3,[["koid",6]]]],[[["u128",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["u32",15]],["result",4,[["u32",15]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["arc",3,[["vmaddressregion",3]]]],[[["arc",3]]],[[]],[[],["zxresult",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["threadstatekind",4]],["zxresult",6]],null,null,null,null,null,[[],["result",4,[["str",15]]]],[[],["result",4,[["str",15],["str",15]]]],[[],["option",4,[["u64",15]]]],[[["str",15]],["option",4,[["u64",15]]]],[[["elffile",3]],["zxresult",6,[["arc",3,[["vmobject",3]]]]]],[[],["usize",15]],[[["elffile",3],["arc",3,[["vmobject",3]]]],["zxresult",6]],[[["arc",3,[["vmaddressregion",3]]]],["result",4,[["str",15]]]],null,null,null,null,[[["usize",15]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["str",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["signalhandler",6]]],[[["signalhandler",6]]],[[["signalhandler",6]]],[[],["usize",15]],[[],["mmuflags",3]],[[]],[[]],[[["arc",3],["option",4,[["usize",15]]],["usize",15],["vmarflags",3],["usize",15]],["zxresult",6,[["arc",3]]]],[[["arc",3],["usize",15],["usize",15],["vmarflags",3],["usize",15]],["zxresult",6,[["arc",3]]]],[[["weak",3,[["vmmapping",3]]]]],[[["weak",3,[["vmmapping",3]]]]],[[["weak",3,[["vmmapping",3]]]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["mmuflags",3]],["mmuflags",3]],[[]],[[]],[[["mmuflags",3]]],[[]],[[]],[[["mmuflags",3]],["mmuflags",3]],[[["vmarflags",3]]],[[["vmoinfoflags",3]]],[[["mmuflags",3]]],[[]],[[]],[[],["usize",15]],[[],["u32",15]],[[],["u32",15]],[[["mmuflags",3]],["mmuflags",3]],[[]],[[]],[[["mmuflags",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["cachepolicy",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15],["usize",15]],["usize",15]],[[["usize",15],["usize",15]],["bool",15]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["zxresult",6]],[[],["mmuflags",3]],[[],["cachepolicy",4]],[[],["vmarflags",3]],[[],["vmoinfoflags",3]],[[]],[[]],[[]],[[]],[[["mmuflags",3]],["ordering",4]],[[["vmarflags",3]],["ordering",4]],[[["vmoinfoflags",3]],["ordering",4]],[[["usize",15],["usize",15]],["zxresult",6]],[[["usize",15],["mmuflags",3]],["zxresult",6,[["physaddr",6]]]],[[["fnmut",8]],["zxresult",6]],[[["usize",15],["usize",15]],["usize",15]],[[],["mmuflags",3]],[[]],[[]],[[["vmoinfo",3]]],[[["mmuflags",3]],["bool",15]],[[["virtaddr",6]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["usize",15]],[[["arc",3,[["vmobject",3]]],["usize",15],["u32",15]],["arc",3]],[[["usize",15],["usize",15]],["zxresult",6,[["arc",3,[["vmobjecttrait",8]]]]]],[[["arc",3],["bool",15],["usize",15],["usize",15]],["zxresult",6,[["arc",3]]]],[[["arc",3],["usize",15],["usize",15]],["zxresult",6,[["arc",3]]]],[[["usize",15],["usize",15]],["zxresult",6]],[[],["streaminfo",3]],[[],["taskstatsinfo",3]],[[],["vmoinfo",3]],[[],["vmoinfoflags",3]],[[]],[[],["arc",3]],[[["arc",3]],["zxresult",6]],[[["mmuflags",3]],["mmuflags",3]],[[]],[[]],[[]],[[]],[[]],[[],["mmuflags",3]],[[]],[[]],[[["mmuflags",3]],["bool",15]],[[["cachepolicy",4]],["bool",15]],[[["vmarflags",3]],["bool",15]],[[["vmoinfoflags",3]],["bool",15]],[[]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["usize",15]],["option",4,[["arc",3,[["vmmapping",3]]]]]],null,[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["arc",3]],["zxresult",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]],["option",4,[["mmuflags",3]]]],[[["u32",15]],["option",4]],[[["u32",15]],["option",4]],[[["usize",15]],["mmuflags",3]],[[["u32",15]]],[[["u32",15]]],[[["usize",15]],["mmuflags",3]],[[["u32",15]]],[[["u32",15]]],[[],["mmuflags",3]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[],["vmarflags",3]],[[["usize",15]],["zxresult",6,[["mmuflags",3]]]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["streaminfo",3]],[[],["vmarinfo",3]],[[],["vmoinfo",3]],[[],["taskstatsinfo",3]],[[["usize",15]],["pagingresult",6,[["mmuflags",3]]]],[[["virtaddr",6],["mmuflags",3]],["zxresult",6]],[[]],[[]],[[]],[[],["koid",6]],[[],["koid",6]],[[],["koid",6]],[[["mmuflags",3]]],[[]],[[]],[[["mmuflags",3]],["mmuflags",3]],[[]],[[]],[[["mmuflags",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["usize",15],["physaddr",6],["mmuflags",3],["cachepolicy",4]],["zxresult",6,[["virtaddr",6]]]],[[],["usize",15]],[[["elffile",3]],["zxresult",6,[["arc",3,[["vmobject",3]]]]]],[[["option",4,[["usize",15]]],["arc",3,[["vmobject",3]]],["usize",15],["usize",15],["mmuflags",3]],["zxresult",6,[["virtaddr",6]]]],[[["usize",15],["arc",3,[["vmobject",3]]],["usize",15],["usize",15],["mmuflags",3]],["zxresult",6,[["virtaddr",6]]]],[[["option",4,[["usize",15]]],["arc",3,[["vmobject",3]]],["usize",15],["usize",15],["mmuflags",3],["mmuflags",3],["bool",15],["bool",15]],["zxresult",6,[["virtaddr",6]]]],[[["elffile",3],["arc",3,[["vmobject",3]]]],["zxresult",6]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[["mmuflags",3]],["bool",15]],[[["vmarflags",3]],["bool",15]],[[["vmoinfoflags",3]],["bool",15]],[[["usize",15],["usize",15]],["zxresult",6,[["arc",3]]]],[[],["arc",3]],[[["usize",15]],["arc",3]],[[["bool",15],["usize",15]],["arc",3]],[[["physaddr",6],["usize",15]],["arc",3]],[[],["arc",3]],[[],["mmuflags",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]],["bool",15]],[[["usize",15]],["usize",15]],[[["mmuflags",3]],["option",4,[["ordering",4]]]],[[["vmarflags",3]],["option",4,[["ordering",4]]]],[[["vmoinfoflags",3]],["option",4,[["ordering",4]]]],[[["usize",15],["usize",15]],["zxresult",6]],[[["usize",15],["usize",15]],["zxresult",6]],[[["usize",15],["usize",15],["mmuflags",3]],["zxresult",6]],[[["usize",15]],["pagingresult",6]],[[["usize",15]],["zxresult",6]],[[],["zxresult",6,[["usize",15]]]],[[["usize",15]],["zxresult",6,[["usize",15]]]],[[["usize",15]],["zxresult",6,[["usize",15]]]],[[["mmuflags",3]]],[[]],[[]],[[["weak",3,[["vmmapping",3]]]]],[[["weak",3,[["vmmapping",3]]]]],[[["weak",3,[["vmmapping",3]]]]],null,[[["usize",15]],["usize",15]],[[["usize",15]],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["seekorigin",4],["isize",15]],["zxresult",6,[["usize",15]]]],[[["mmuflags",3],["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["cachepolicy",4]],["zxresult",6]],[[["cachepolicy",4]],["zxresult",6]],[[["usize",15]],["zxresult",6]],[[["usize",15],["usize",15]],["zxresult",6,[["usize",15]]]],[[["usize",15]],["zxresult",6]],[[["usize",15]],["zxresult",6]],[[["str",15]]],[[["str",15]]],[[["str",15]]],[[],["usize",15]],[[],["signal",3]],[[],["signal",3]],[[],["signal",3]],[[["signal",3],["signal",3]]],[[["signal",3],["signal",3]]],[[["signal",3],["signal",3]]],[[["signal",3]]],[[["signal",3]]],[[["signal",3]]],[[["signal",3]]],[[["signal",3]]],[[["signal",3]]],[[["mmuflags",3]],["mmuflags",3]],[[]],[[]],[[["mmuflags",3]]],[[]],[[]],[[["mmuflags",3]],["mmuflags",3]],[[]],[[]],[[],["physaddr",6]],[[]],[[]],[[]],[[]],[[["mmuflags",3]]],[[]],[[]],[[],["result",4]],[[["u32",15]],["result",4,[["cachepolicy",4],["u32",15]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["usize",15]],["result",4,[["usize",15]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[["mmuflags",3]],["mmuflags",3]],[[]],[[]],[[["virtaddr",6],["usize",15]],["zxresult",6]],[[["usize",15],["usize",15]],["zxresult",6]],[[["usize",15],["usize",15]],["zxresult",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4,[["usize",15]]]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]],["zxresult",6]],[[["bool",15]],["zxresult",6,[["usize",15]]]],[[["usize",15]],["zxresult",6,[["usize",15]]]],[[["usize",15]],["zxresult",6,[["usize",15]]]],[[["usize",15],["usize",15]],["zxresult",6]]],"p":[[4,"ZxError"],[6,"ZxResult"],[4,"Severity"],[3,"DebugLog"],[4,"ResourceKind"],[3,"ResourceFlags"],[3,"InterruptFlags"],[3,"InterruptOptions"],[3,"IommuPerms"],[3,"Interrupt"],[3,"BusTransactionInitiator"],[3,"Iommu"],[3,"PinnedMemoryToken"],[3,"Resource"],[3,"BtiInfo"],[3,"ResourceInfo"],[4,"PcieIrqMode"],[4,"PciAddrSpace"],[3,"PCIeBusDriver"],[3,"MmioPcieAddressProvider"],[3,"PcieDeviceKObject"],[8,"IPciNode"],[3,"PciEcamRegion"],[3,"MappedEcamRegion"],[3,"PioPcieAddressProvider"],[3,"PcieDeviceInfo"],[3,"PciInitArgsIrqs"],[3,"PciInitArgsHeader"],[3,"PciIrqSwizzleLut"],[3,"PciInitArgsAddrWindows"],[3,"SocketFlags"],[3,"Channel"],[3,"Fifo"],[3,"Socket"],[3,"MessagePacket"],[3,"SocketInfo"],[3,"Rights"],[3,"Signal"],[8,"KernelObject"],[3,"KObjectBase"],[3,"DummyObject"],[3,"Handle"],[3,"HandleBasicInfo"],[3,"HandleInfo"],[3,"PortOptions"],[4,"Slack"],[4,"PacketType"],[4,"PayloadRepr"],[4,"PacketGuestVcpuType"],[3,"PacketGuestVcpu"],[3,"PacketGuestMem"],[3,"PacketGuestBell"],[3,"PacketGuestIo"],[3,"PacketInterrupt"],[3,"PacketSignal"],[3,"Event"],[3,"EventPair"],[3,"Futex"],[3,"Port"],[3,"Timer"],[3,"PortPacket"],[19,"Payload"],[19,"PacketGuestVcpuData"],[3,"PacketGuestVcpuInterrupt"],[3,"PacketGuestVcpuStartup"],[3,"PortPacketRepr"],[13,"User"],[13,"Signal"],[13,"GuestBell"],[13,"GuestMem"],[13,"GuestIo"],[13,"GuestVcpu"],[13,"Interrupt"],[4,"SetPolicyOptions"],[4,"PolicyAction"],[4,"PolicyCondition"],[4,"ThreadState"],[4,"ThreadStateKind"],[4,"Status"],[4,"ExceptionType"],[3,"ThreadFlag"],[3,"BasicPolicy"],[3,"Process"],[3,"ExceptionObject"],[3,"Job"],[3,"SuspendToken"],[3,"Thread"],[3,"JobPolicy"],[3,"Exceptionate"],[3,"CurrentThread"],[3,"ThreadInfo"],[3,"ExceptionReport"],[3,"JobInfo"],[3,"TimerSlackPolicy"],[3,"ProcessInfo"],[8,"Task"],[8,"IntoResult"],[13,"Exited"],[8,"ElfExt"],[8,"VmarExt"],[3,"Counter"],[3,"AllCounters"],[3,"Descriptor"],[3,"DescriptorVmoHeader"],[3,"VmarFlags"],[3,"MMUFlags"],[3,"VmoInfoFlags"],[4,"CachePolicy"],[4,"SeekOrigin"],[3,"Stream"],[3,"VmAddressRegion"],[3,"VmObject"],[8,"VMObjectTrait"],[3,"VmMapping"],[3,"StreamInfo"],[3,"VmarInfo"],[3,"TaskStatsInfo"],[3,"VmoInfo"],[3,"KERNEL_ASPACE"]]},\
"zircon_syscall":{"doc":"Zircon syscall implementations","t":[3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11],"n":["Syscall","as_any","as_any_mut","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","from","into","into_any","into_any_arc","into_any_rc","into_result","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","sys_bti_create","sys_bti_pin","sys_bti_release_quarantine","sys_channel_call_finish","sys_channel_call_noretry","sys_channel_create","sys_channel_read","sys_channel_write","sys_channel_write_etc","sys_clock_adjust","sys_clock_create","sys_clock_get","sys_clock_read","sys_clock_update","sys_cprng_draw_once","sys_create_exception_channel","sys_debug_read","sys_debug_write","sys_debuglog_create","sys_debuglog_read","sys_debuglog_write","sys_event_create","sys_eventpair_create","sys_exception_get_process","sys_exception_get_thread","sys_fifo_create","sys_fifo_read","sys_fifo_write","sys_futex_requeue","sys_futex_wait","sys_futex_wake","sys_futex_wake_single_owner","sys_handle_close","sys_handle_close_many","sys_handle_duplicate","sys_handle_replace","sys_interrupt_ack","sys_interrupt_bind","sys_interrupt_create","sys_interrupt_destroy","sys_interrupt_trigger","sys_interrupt_wait","sys_iommu_create","sys_job_create","sys_job_set_critical","sys_job_set_policy","sys_nanosleep","sys_object_get_child","sys_object_get_info","sys_object_get_property","sys_object_set_property","sys_object_signal","sys_object_signal_peer","sys_object_wait_async","sys_object_wait_many","sys_object_wait_one","sys_pc_firmware_tables","sys_pci_add_subtract_io_range","sys_pci_cfg_pio_rw","sys_pci_config_read","sys_pci_config_write","sys_pci_enable_bus_master","sys_pci_get_bar","sys_pci_get_nth_device","sys_pci_init","sys_pci_map_interrupt","sys_pci_query_irq_mode","sys_pci_set_irq_mode","sys_pmt_unpin","sys_port_create","sys_port_queue","sys_port_wait","sys_process_create","sys_process_exit","sys_process_read_memory","sys_process_start","sys_process_write_memory","sys_resource_create","sys_socket_create","sys_socket_read","sys_socket_shutdown","sys_socket_write","sys_stream_create","sys_stream_readv","sys_stream_readv_at","sys_stream_seek","sys_stream_writev","sys_stream_writev_at","sys_system_get_event","sys_task_kill","sys_task_suspend_token","sys_thread_create","sys_thread_exit","sys_thread_read_state","sys_thread_start","sys_thread_write_state","sys_timer_cancel","sys_timer_create","sys_timer_set","sys_vmar_allocate","sys_vmar_destroy","sys_vmar_map","sys_vmar_protect","sys_vmar_unmap","sys_vmo_cache_policy","sys_vmo_create","sys_vmo_create_child","sys_vmo_create_contiguous","sys_vmo_create_physical","sys_vmo_get_size","sys_vmo_op_range","sys_vmo_read","sys_vmo_replace_as_executable","sys_vmo_set_size","sys_vmo_write","syscall","thread","thread_fn","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","wrapping_as","wrapping_cast_from"],"q":["zircon_syscall","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","Creates a new bus transaction initiator.","Pin pages and grant devices access to them.","Releases all quarantined PMTs for the given BTI.","","","Create a new channel.   ","Read/Receive a message from a channel.  ","Write a message to a channel.  ","Write a message to a channel.  ","","Create a new clock object.","Acquire the current time.","Perform a basic read of the clock.","Make adjustments to a clock object.","Draw random bytes from the kernel CPRNG.","Creates a channel which will receive exceptions from the …","Read debug info from the serial port.","Write debug info to the serial port.","Create a kernel managed debuglog reader or writer.","Read log entries from debuglog.","Write log entry to debuglog.","Create an event.  ","Create an event pair.  ","Create a handle for the exception’s process.","Create a handle for the exception’s thread.","Creates a fifo, which is actually a pair of fifos of …","Read data from a fifo.","Write data to a fifo.","Wake some waiters and requeue other waiters.","Wait on a futex.","Wake some number of threads waiting on a futex.","Wake some number of threads waiting on a futex, and move …","Close a handle and reclaim the underlying object if no …","Close a number of handles.  ","Creates a duplicate of handle.","Creates a replacement for handle.","Acknowledge an interrupt and re-arm it.","Binds or unbinds an interrupt object to a port.","Creates an interrupt object which represents a physical or …","Destroys an interrupt object.","Triggers a virtual interrupt object.","A blocking syscall which causes the caller to wait until …","Create a new object in the kernel representing an IOMMU …","Create a new child job object given a parent job.","Sets process as critical to job.","Sets one or more security and/or resource policies to an …","Sleep for some number of nanoseconds.","Find the child of an object by its kid.","Query information about an object.","Ask for various properties of various kernel objects.","Set various properties of various kernel objects.","Signal an object.","Asserts and deasserts the userspace-accessible signal bits …","A non-blocking syscall subscribes for signals on an object.","Wait for signals on multiple objects.","A blocking syscall waits for signals on an object.","","","","","","","","","","","","","Unpins pages that were previously pinned by <code>zx_bti_pin()</code>.","Create an IO port.  ","Queue a packet to a port.  ","Wait for a packet arrival in a port.  ","Create a new process.","Exits the currently running process.","Read from the given process’s address space.","Start execution on a process.","Write into the given process’s address space.","Create a resource object for use with other DDK syscalls.  ","Create a socket.","Read data from a socket.  ","Prevent future reading or writing on a socket.   ","Write data to a socket.","Create a stream from a VMO.","Read data from a stream at the current seek offset.   ","Read data from a stream at the given offset.   ","Modify the seek offset.","Write data to a stream at the current seek offset.   ","Write data to a stream at the given offset.   ","Retrieve a handle to a system event.","Kill the provided task (job, process, or thread).","Suspend the given task.","Creates a thread within the specified process.","Terminate the current running thread.","Read one aspect of thread state.","Start execution on a thread.","Write one aspect of thread state.","Cancel a timer.  ","Create a timer.","Start a timer.","Allocate a new subregion.","Destroy a virtual memory address region.","Add a memory mapping.","Set protection of virtual memory pages.","Unmap virtual memory pages.","Set the caching policy for pages held by a VMO.","Create a new virtual memory object(VMO).","Create a child of an existing VMO (new virtual memory …","Create a VM object referring to a specific contiguous …","Create a VM object referring to a specific contiguous …","Obtain the current size of a VMO object.","Perform an operation on a range of a VMO.","Read bytes from a VMO.","Add execute rights to a VMO.","Resize a VMO object.","Write bytes to a VMO.","","","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["result",4,[["zxerror",4]]]],[[]],[[]],[[]],[[]],[[["handlevalue",6],["u32",15],["u64",15],["useroutptr",6,[["handlevalue",6]]]],["zxresult",6]],[[["handlevalue",6],["u32",15],["handlevalue",6],["usize",15],["usize",15],["useroutptr",6,[["devvaddr",6]]],["usize",15],["useroutptr",6,[["handlevalue",6]]]],["zxresult",6]],[[["handlevalue",6]],["zxresult",6]],[[["deadline",3],["userinptr",6,[["channelcallargs",3]]],["useroutptr",6,[["u32",15]]],["useroutptr",6,[["u32",15]]]],["zxresult",6]],[[["handlevalue",6],["u32",15],["deadline",3],["userinptr",6,[["channelcallargs",3]]],["useroutptr",6,[["u32",15]]],["useroutptr",6,[["u32",15]]]]],[[["u32",15],["useroutptr",6,[["handlevalue",6]]],["useroutptr",6,[["handlevalue",6]]]],["zxresult",6]],[[["handlevalue",6],["u32",15],["useroutptr",6,[["u8",15]]],["usize",15],["u32",15],["u32",15],["useroutptr",6,[["u32",15]]],["useroutptr",6,[["u32",15]]],["bool",15]],["zxresult",6]],[[["handlevalue",6],["u32",15],["userinptr",6,[["u8",15]]],["u32",15],["userinptr",6,[["handlevalue",6]]],["u32",15]],["zxresult",6]],[[["handlevalue",6],["u32",15],["userinptr",6,[["u8",15]]],["u32",15],["userinoutptr",6,[["handledisposition",3]]],["u32",15]],["zxresult",6]],[[["handlevalue",6],["u32",15],["u64",15]],["zxresult",6]],[[["u64",15],["userinptr",6,[["u8",15]]],["useroutptr",6,[["handlevalue",6]]]],["zxresult",6]],[[["u32",15],["useroutptr",6,[["u64",15]]]],["zxresult",6]],[[["handlevalue",6],["useroutptr",6,[["u64",15]]]],["zxresult",6]],[[["handlevalue",6],["u64",15],["userinptr",6,[["u8",15]]]],["zxresult",6]],[[["useroutptr",6,[["u8",15]]],["usize",15]],["zxresult",6]],[[["handlevalue",6],["u32",15],["useroutptr",6,[["handlevalue",6]]]],["zxresult",6]],[[["handlevalue",6],["useroutptr",6,[["u8",15]]],["u32",15],["useroutptr",6,[["u32",15]]]]],[[["userinptr",6,[["u8",15]]],["usize",15]],["zxresult",6]],[[["handlevalue",6],["u32",15],["useroutptr",6,[["handlevalue",6]]]],["zxresult",6]],[[["handlevalue",6],["u32",15],["useroutptr",6,[["u8",15]]],["usize",15]],["zxresult",6]],[[["handlevalue",6],["u32",15],["userinptr",6,[["u8",15]]],["usize",15]],["zxresult",6]],[[["u32",15],["useroutptr",6,[["handlevalue",6]]]],["zxresult",6]],[[["u32",15],["useroutptr",6,[["handlevalue",6]]],["useroutptr",6,[["handlevalue",6]]]],["zxresult",6]],[[["handlevalue",6],["useroutptr",6,[["handlevalue",6]]]],["zxresult",6]],[[["handlevalue",6],["useroutptr",6,[["handlevalue",6]]]],["zxresult",6]],[[["usize",15],["usize",15],["u32",15],["useroutptr",6,[["handlevalue",6]]],["useroutptr",6,[["handlevalue",6]]]],["zxresult",6]],[[["handlevalue",6],["usize",15],["useroutptr",6,[["u8",15]]],["usize",15],["useroutptr",6,[["usize",15]]]],["zxresult",6]],[[["handlevalue",6],["usize",15],["userinptr",6,[["u8",15]]],["usize",15],["useroutptr",6,[["usize",15]]]],["zxresult",6]],[[["userinptr",6,[["atomici32",3]]],["u32",15],["i32",15],["userinptr",6,[["atomici32",3]]],["u32",15],["handlevalue",6]],["zxresult",6]],[[["userinptr",6,[["atomici32",3]]],["i32",15],["handlevalue",6],["deadline",3]]],[[["userinptr",6,[["atomici32",3]]],["u32",15]],["zxresult",6]],[[["userinptr",6,[["atomici32",3]]]],["zxresult",6]],[[["handlevalue",6]],["zxresult",6]],[[["userinptr",6,[["handlevalue",6]]],["usize",15]],["zxresult",6]],[[["handlevalue",6],["u32",15],["useroutptr",6,[["handlevalue",6]]]],["zxresult",6]],[[["handlevalue",6],["u32",15],["useroutptr",6,[["handlevalue",6]]]],["zxresult",6]],[[["handlevalue",6]],["zxresult",6]],[[["handlevalue",6],["handlevalue",6],["u64",15],["u32",15]],["zxresult",6]],[[["handlevalue",6],["usize",15],["u32",15],["useroutptr",6,[["handlevalue",6]]]],["zxresult",6]],[[["handlevalue",6]],["zxresult",6]],[[["handlevalue",6],["u32",15],["i64",15]],["zxresult",6]],[[["handlevalue",6],["useroutptr",6,[["i64",15]]]]],[[["handlevalue",6],["u32",15],["userinptr",6,[["u8",15]]],["usize",15],["useroutptr",6,[["handlevalue",6]]]],["zxresult",6]],[[["handlevalue",6],["u32",15],["useroutptr",6,[["handlevalue",6]]]],["zxresult",6]],[[["handlevalue",6],["u32",15],["handlevalue",6]],["zxresult",6]],[[["handlevalue",6],["u32",15],["u32",15],["usize",15],["u32",15]],["zxresult",6]],[[["deadline",3]]],[[["handlevalue",6],["koid",6],["u32",15],["useroutptr",6,[["handlevalue",6]]]],["zxresult",6]],[[["handlevalue",6],["u32",15],["usize",15],["usize",15],["useroutptr",6,[["usize",15]]],["useroutptr",6,[["usize",15]]]],["zxresult",6]],[[["handlevalue",6],["u32",15],["usize",15],["usize",15]],["zxresult",6]],[[["handlevalue",6],["u32",15],["usize",15],["usize",15]],["zxresult",6]],[[["handlevalue",6],["u32",15],["u32",15]],["zxresult",6]],[[["handlevalue",6],["u32",15],["u32",15]],["zxresult",6]],[[["handlevalue",6],["handlevalue",6],["u64",15],["u32",15],["u32",15]],["zxresult",6]],[[["userinoutptr",6,[["userwaititem",3]]],["u32",15],["deadline",3]]],[[["handlevalue",6],["u32",15],["deadline",3],["useroutptr",6,[["signal",3]]]]],[[["handlevalue",6],["useroutptr",6,[["u64",15]]],["useroutptr",6,[["u64",15]]]],["zxresult",6]],[[["handlevalue",6],["bool",15],["u64",15],["u64",15],["bool",15]],["zxresult",6]],[[["handlevalue",6],["u8",15],["u8",15],["u8",15],["u8",15],["userinoutptr",6,[["u32",15]]],["usize",15],["bool",15]],["zxresult",6]],[[["handlevalue",6],["usize",15],["usize",15],["useroutptr",6,[["u32",15]]]],["zxresult",6]],[[["handlevalue",6],["usize",15],["usize",15],["u32",15]],["zxresult",6]],[[["handlevalue",6],["bool",15]],["zxresult",6]],[[["handlevalue",6],["u32",15],["useroutptr",6,[["pcibar",3]]],["useroutptr",6,[["handlevalue",6]]]],["zxresult",6]],[[["handlevalue",6],["u32",15],["useroutptr",6,[["pciedeviceinfo",3]]],["useroutptr",6,[["handlevalue",6]]]],["zxresult",6]],[[["handlevalue",6],["usize",15],["u32",15]],["zxresult",6]],[[["handlevalue",6],["i32",15],["useroutptr",6,[["handlevalue",6]]]],["zxresult",6]],[[["handlevalue",6],["u32",15],["useroutptr",6,[["u32",15]]]],["zxresult",6]],[[["handlevalue",6],["u32",15],["u32",15]],["zxresult",6]],[[["handlevalue",6]],["zxresult",6]],[[["u32",15],["useroutptr",6,[["handlevalue",6]]]],["zxresult",6]],[[["handlevalue",6],["userinptr",6,[["portpacket",3]]]],["zxresult",6]],[[["handlevalue",6],["deadline",3],["useroutptr",6,[["portpacket",3]]]]],[[["handlevalue",6],["userinptr",6,[["u8",15]]],["usize",15],["u32",15],["useroutptr",6,[["handlevalue",6]]],["useroutptr",6,[["handlevalue",6]]]],["zxresult",6]],[[["i64",15]],["zxresult",6]],[[["handlevalue",6],["usize",15],["useroutptr",6,[["u8",15]]],["usize",15],["useroutptr",6,[["usize",15]]]],["zxresult",6]],[[["handlevalue",6],["handlevalue",6],["usize",15],["usize",15],["handlevalue",6],["usize",15]],["zxresult",6]],[[["handlevalue",6],["usize",15],["userinptr",6,[["u8",15]]],["usize",15],["useroutptr",6,[["usize",15]]]],["zxresult",6]],[[["handlevalue",6],["u32",15],["u64",15],["u64",15],["userinptr",6,[["u8",15]]],["u64",15],["useroutptr",6,[["handlevalue",6]]]],["zxresult",6]],[[["u32",15],["useroutptr",6,[["handlevalue",6]]],["useroutptr",6,[["handlevalue",6]]]],["zxresult",6]],[[["handlevalue",6],["u32",15],["useroutptr",6,[["u8",15]]],["usize",15],["useroutptr",6,[["usize",15]]]],["zxresult",6]],[[["handlevalue",6],["u32",15]],["zxresult",6]],[[["handlevalue",6],["u32",15],["userinptr",6,[["u8",15]]],["usize",15],["useroutptr",6,[["usize",15]]]],["zxresult",6]],[[["u32",15],["handlevalue",6],["usize",15],["useroutptr",6,[["handlevalue",6]]]],["zxresult",6]],[[["handlevalue",6],["u32",15],["userinptr",6,[["iovecout",6]]],["usize",15],["useroutptr",6,[["usize",15]]]],["zxresult",6]],[[["handlevalue",6],["u32",15],["usize",15],["userinptr",6,[["iovecout",6]]],["usize",15],["useroutptr",6,[["usize",15]]]],["zxresult",6]],[[["handlevalue",6],["usize",15],["isize",15],["useroutptr",6,[["usize",15]]]],["zxresult",6]],[[["handlevalue",6],["u32",15],["userinptr",6,[["iovecin",6]]],["usize",15],["useroutptr",6,[["usize",15]]]],["zxresult",6]],[[["handlevalue",6],["u32",15],["usize",15],["userinptr",6,[["iovecin",6]]],["usize",15],["useroutptr",6,[["usize",15]]]],["zxresult",6]],[[["handlevalue",6],["u32",15],["useroutptr",6,[["handlevalue",6]]]],["zxresult",6]],[[["handlevalue",6]],["zxresult",6]],[[["handlevalue",6],["useroutptr",6,[["handlevalue",6]]]],["zxresult",6]],[[["handlevalue",6],["userinptr",6,[["u8",15]]],["usize",15],["u32",15],["useroutptr",6,[["handlevalue",6]]]],["zxresult",6]],[[],["zxresult",6]],[[["handlevalue",6],["u32",15],["useroutptr",6,[["u8",15]]],["usize",15]],["zxresult",6]],[[["handlevalue",6],["usize",15],["usize",15],["usize",15],["usize",15]],["zxresult",6]],[[["handlevalue",6],["u32",15],["userinptr",6,[["u8",15]]],["usize",15]],["zxresult",6]],[[["handlevalue",6]],["zxresult",6]],[[["u32",15],["u32",15],["useroutptr",6,[["handlevalue",6]]]],["zxresult",6]],[[["handlevalue",6],["deadline",3],["i64",15]],["zxresult",6]],[[["handlevalue",6],["u32",15],["u64",15],["u64",15],["useroutptr",6,[["handlevalue",6]]],["useroutptr",6,[["usize",15]]]],["zxresult",6]],[[["handlevalue",6]],["zxresult",6]],[[["handlevalue",6],["u32",15],["usize",15],["handlevalue",6],["usize",15],["usize",15],["useroutptr",6,[["virtaddr",6]]]],["zxresult",6]],[[["handlevalue",6],["u32",15],["u64",15],["u64",15]],["zxresult",6]],[[["handlevalue",6],["usize",15],["usize",15]],["zxresult",6]],[[["handlevalue",6],["u32",15]],["zxresult",6]],[[["u64",15],["u32",15],["useroutptr",6,[["handlevalue",6]]]],["zxresult",6]],[[["handlevalue",6],["u32",15],["usize",15],["usize",15],["useroutptr",6,[["handlevalue",6]]]],["zxresult",6]],[[["handlevalue",6],["usize",15],["u32",15],["useroutptr",6,[["handlevalue",6]]]],["zxresult",6]],[[["handlevalue",6],["physaddr",6],["usize",15],["useroutptr",6,[["handlevalue",6]]]],["zxresult",6]],[[["handlevalue",6],["useroutptr",6,[["usize",15]]]],["zxresult",6]],[[["handlevalue",6],["u32",15],["usize",15],["usize",15],["useroutptr",6,[["u8",15]]],["usize",15]],["zxresult",6]],[[["handlevalue",6],["useroutptr",6,[["u8",15]]],["u64",15],["usize",15]],["zxresult",6]],[[["handlevalue",6],["handlevalue",6],["useroutptr",6,[["handlevalue",6]]]],["zxresult",6]],[[["handlevalue",6],["usize",15]],["zxresult",6]],[[["handlevalue",6],["userinptr",6,[["u8",15]]],["u64",15],["usize",15]],["zxresult",6]],[[["u32",15]]],null,null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]]],"p":[[3,"Syscall"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};